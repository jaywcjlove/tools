{"version":3,"file":"static/js/882.b948f2f6.chunk.js","mappings":"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","sources":["../../packages/base64-encoder/src/Base64.ts","../../packages/base64-encoder/src/index.tsx"],"sourcesContent":["// private property\nexport const KEYSTR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n// public method for encoding\nexport const encode = (input: string) => {\n  let output = '';\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n\n  input = _utf8_encode(input);\n\n  while (i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    enc1 = chr1 >> 2;\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n\n    output = output + KEYSTR.charAt(enc1) + KEYSTR.charAt(enc2) + KEYSTR.charAt(enc3) + KEYSTR.charAt(enc4);\n  }\n  return output;\n};\n\n// public method for decoding\nexport const decode = (input: string) => {\n  let output = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  while (i < input.length) {\n    enc1 = KEYSTR.indexOf(input.charAt(i++));\n    enc2 = KEYSTR.indexOf(input.charAt(i++));\n    enc3 = KEYSTR.indexOf(input.charAt(i++));\n    enc4 = KEYSTR.indexOf(input.charAt(i++));\n\n    chr1 = (enc1 << 2) | (enc2 >> 4);\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n    chr3 = ((enc3 & 3) << 6) | enc4;\n\n    output = output + String.fromCharCode(chr1);\n\n    if (enc3 != 64) {\n      output = output + String.fromCharCode(chr2);\n    }\n    if (enc4 != 64) {\n      output = output + String.fromCharCode(chr3);\n    }\n  }\n\n  output = _utf8_decode(output);\n\n  return output;\n};\n\n// private method for UTF-8 encoding\nexport const _utf8_encode = (string: string) => {\n  string = string.replace(/\\r\\n/g, '\\n');\n  let utftext = '';\n\n  for (var n = 0; n < string.length; n++) {\n    var c = string.charCodeAt(n);\n\n    if (c < 128) {\n      utftext += String.fromCharCode(c);\n    } else if (c > 127 && c < 2048) {\n      utftext += String.fromCharCode((c >> 6) | 192);\n      utftext += String.fromCharCode((c & 63) | 128);\n    } else {\n      utftext += String.fromCharCode((c >> 12) | 224);\n      utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n      utftext += String.fromCharCode((c & 63) | 128);\n    }\n  }\n\n  return utftext;\n};\n\n// private method for UTF-8 decoding\nexport const _utf8_decode = (utftext: string) => {\n  let string = '';\n  let i = 0;\n  let c = 0;\n  let c1 = 0;\n  let c2 = 0;\n  let c3 = 0;\n\n  while (i < utftext.length) {\n    c = utftext.charCodeAt(i);\n\n    if (c < 128) {\n      string += String.fromCharCode(c);\n      i++;\n    } else if (c > 191 && c < 224) {\n      c2 = utftext.charCodeAt(i + 1);\n      string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n      i += 2;\n    } else {\n      c2 = utftext.charCodeAt(i + 1);\n      c3 = utftext.charCodeAt(i + 2);\n      string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n      i += 3;\n    }\n  }\n  return string;\n};\n","import { useState } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton } from '@wcj/tools-react-components';\nimport * as Base64 from './Base64';\n\nexport default function Base64Encoder() {\n  const [url, setUrl] = useState<string>();\n  const [encodedUrl, setEncodeUrl] = useState<string>();\n  const [type, setType] = useState<'raw' | 'encoded'>('raw');\n  const handleInput = (value: string = '') => {\n    if (type === 'raw') {\n      setUrl(value);\n      setEncodeUrl(Base64.encode(value));\n    } else if (type === 'encoded') {\n      setUrl(Base64.decode(value));\n      setEncodeUrl(value);\n    }\n  };\n  return (\n    <Wrapper>\n      <StyledLayout title=\"Input\" extra={url && <CopyButton value={url} />}>\n        <Textarea\n          spellCheck={false}\n          value={url}\n          onFocus={() => setType('raw')}\n          onInput={(evn) => handleInput((evn.target as HTMLTextAreaElement).value)}\n        />\n      </StyledLayout>\n      <StyledLayout title=\"Output\" extra={encodedUrl && <CopyButton value={encodedUrl} />}>\n        <Textarea\n          spellCheck={false}\n          value={encodedUrl}\n          onFocus={() => setType('encoded')}\n          onInput={(evn) => handleInput((evn.target as HTMLTextAreaElement).value)}\n        />\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["KEYSTR","_utf8_encode","string","replace","utftext","n","length","c","charCodeAt","String","fromCharCode","_utf8_decode","i","c2","c3","Base64Encoder","useState","url","setUrl","encodedUrl","setEncodeUrl","type","setType","handleInput","value","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","isNaN","charAt","Base64","indexOf","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","CopyButton","Textarea","spellCheck","onFocus","onInput","evn","target"],"sourceRoot":""}