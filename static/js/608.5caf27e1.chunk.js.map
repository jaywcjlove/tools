{"version":3,"file":"static/js/608.5caf27e1.chunk.js","mappings":"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","sources":["../../packages/js-beautifier/src/index.tsx","../../packages/js-beautifier/src/sample.ts"],"sourcesContent":["import { Fragment, useRef, useState } from 'react';\nimport {\n  StyledLayout,\n  CopyButton,\n  ResultCode,\n  Spacing,\n  CodeEditor,\n  Button,\n  Wrapper,\n  ErrorLayout,\n} from '@wcj/tools-react-components';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { ReactCodeMirrorRef } from '@uiw/react-codemirror';\nimport { minify, MinifyOptions } from 'uglify-js-export';\nimport prettier from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport * as sample from './sample';\n\nconst Info = styled.span`\n  color: var(--color-fg-subtle);\n`;\n\nconst defaultOptions: MinifyOptions = {\n  mangle: true,\n  toplevel: false,\n  ie8: false,\n  keep_fnames: false,\n  parse: {\n    bare_returns: false,\n    html5_comments: true,\n    shebang: true,\n  },\n  compress: {\n    arguments: true,\n    assignments: true,\n    booleans: true,\n    collapse_vars: true,\n    comparisons: true,\n    conditionals: true,\n    dead_code: true,\n    directives: true,\n    drop_console: true,\n    drop_debugger: true,\n    evaluate: true,\n    expression: true,\n    functions: true,\n    global_defs: {},\n    hoist_exports: true,\n    hoist_funs: false,\n    hoist_props: true,\n    hoist_vars: false,\n    if_return: true,\n    imports: true,\n    inline: true,\n    join_vars: true,\n    // ⚠️\n    keep_fargs: 'strict',\n    // ⚠️\n    pure_getters: 'strict',\n    keep_fnames: false,\n    keep_infinity: false,\n    loops: true,\n    merge_vars: true,\n    negate_iife: true,\n    objects: true,\n    passes: 1,\n    properties: true,\n    // ⚠️\n    pure_funcs: null,\n    reduce_funcs: true,\n    reduce_vars: true,\n    sequences: true,\n    side_effects: true,\n    strings: true,\n    switches: true,\n    templates: true,\n    unsafe: false,\n    toplevel: false,\n    top_retain: null,\n    typeofs: true,\n    unsafe_comps: false,\n    unsafe_Function: false,\n    unsafe_math: false,\n    unsafe_proto: false,\n    unsafe_regexp: false,\n    unsafe_undefined: false,\n    unused: true,\n    varify: true,\n    webkit: false,\n  },\n};\n// --------\n// /**\n//  * Pass `true` to return compressor warnings in result.warnings.\n//  * Use the value `verbose` for more detailed warnings.\n//  * @default false\n//  */\n//  warnings?: boolean | 'verbose' | undefined;\n//  /**\n//   * Pass `false` to skip mangling names, or pass an object to specify mangle options (see below).\n//   * @default true\n//   */\n//  mangle?: boolean | MangleOptions | undefined;\n//  /**\n//   * Pass an object if you wish to specify additional output options.\n//   * The defaults are optimized for best compression\n//   */\n//  output?: OutputOptions | undefined;\n//  /**\n//   * Pass an object if you wish to specify source map options.\n//   * @default false\n//   */\n//  sourceMap?: boolean | SourceMapOptions | undefined;\n//  /**\n//   * Pass an empty object {} or a previously used nameCache object\n//   * if you wish to cache mangled variable and property names across multiple invocations of minify().\n//   * Note: this is a read/write property. `minify()` will read the name cache state of this object\n//   * and update it during minification so that it may be reused or externally persisted by the user\n//   */\n//  nameCache?: object | undefined;\ntype Type = 'formatter' | 'minify';\n\ninterface CheckboxProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {}\nconst Checkbox: React.FC<React.PropsWithChildren<CheckboxProps>> = ({ children, ...other }) => {\n  return (\n    <label>\n      <span>\n        <input type=\"checkbox\" {...other} />\n        {children}\n      </span>\n    </label>\n  );\n};\n\nexport default function JSONFormat() {\n  const { t } = useTranslation(['js-beautifier', 'common']);\n  const editor = useRef<ReactCodeMirrorRef>(null);\n  const [type, setType] = useState<Type>('minify');\n  const [options, setOptions] = useState<MinifyOptions>(defaultOptions);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [tabWidth, setTabWidth] = useState(2);\n  const handleFormat = () => {\n    try {\n      setError('');\n      setValue(\n        prettier.format(value, { parser: 'babel-ts', tabWidth: tabWidth, printWidth: 120, plugins: [parserBabel] }),\n      );\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      }\n    }\n  };\n  const handleMinify = () => {\n    try {\n      setError('');\n      const data = minify(value, options);\n      if (data.error) {\n        throw new Error(data.error.message);\n      }\n      setValue(data.code);\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      }\n    }\n  };\n  return (\n    <Wrapper>\n      <StyledLayout\n        title=\"JS Beautifier/Uglify\"\n        extra={\n          <Fragment>\n            {type === 'formatter' && value && (\n              <Button onClick={() => handleFormat()}>{t('Formatter', { ns: 'common' })}</Button>\n            )}\n            {type === 'minify' && value && (\n              <Button onClick={() => handleMinify()}>{t('Minify', { ns: 'common' })}</Button>\n            )}\n            {value && (\n              <select value={type} onChange={(evn) => setType(evn.target.value as Type)}>\n                <option value=\"formatter\">{t('Formatter', { ns: 'common' })}</option>\n                <option value=\"minify\">{t('Minify', { ns: 'common' })}</option>\n              </select>\n            )}\n            {value && type === 'formatter' && (\n              <select onChange={(evn) => setTabWidth(Number(evn.target.value))}>\n                <option value={2}>2 Tab Space</option>\n                <option value={3}>3 Tab Space</option>\n                <option value={4}>4 Tab Space</option>\n                <option value={5}>5 Tab Space</option>\n              </select>\n            )}\n            {value && <CopyButton value={value} />}\n            <Button\n              onClick={() => {\n                editor.current?.view?.focus();\n                if (type === 'formatter') {\n                  setValue(sample.js);\n                }\n                if (type === 'minify') {\n                  setValue(sample.val);\n                }\n              }}\n            >\n              {t('Sample', { ns: 'common' })}\n            </Button>\n          </Fragment>\n        }\n      >\n        <CodeEditor\n          value={value}\n          ref={editor}\n          height=\"calc(100vh - 87px)\"\n          extensions={[javascript()]}\n          onChange={(value) => {\n            setValue(value);\n          }}\n        />\n      </StyledLayout>\n      {type === 'minify' && value && (\n        <StyledLayout\n          title={t('Options', { ns: 'common' })}\n          style={{ maxWidth: 420 }}\n          extra={\n            <Fragment>\n              <Button onClick={() => setOptions(defaultOptions)}>Reset</Button>\n              <Button onClick={() => setOptions({})}>None</Button>\n            </Fragment>\n          }\n        >\n          <ResultCode codeProps={{ style: { height: 'calc(100vh - 87px)', overflow: 'auto', margin: 0 } }}>\n            <Spacing>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.mangle}\n                    onChange={({ target }) => setOptions({ ...options, mangle: target.checked })}\n                  />\n                  {t('mangle')} <Info>{t('Pass `false` to skip mangling names')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.toplevel}\n                    onChange={({ target }) => setOptions({ ...options, toplevel: target.checked })}\n                  />\n                  {t('toplevel')}{' '}\n                  <Info>\n                    {t(\n                      'Set to `true` if you wish to enable top level variable and function name mangling and to drop unused variables and functions.',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.ie8}\n                    onChange={({ target }) => setOptions({ ...options, ie8: target.checked })}\n                  />\n                  {t('ie8')} <Info>{t('Set to true to support IE8')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.keep_fnames}\n                    onChange={({ target }) => setOptions({ ...options, keep_fnames: target.checked })}\n                  />\n                  {t('keep_fnames')}{' '}\n                  <Info>\n                    {t(\n                      'Pass true to prevent discarding or mangling of function names. Useful for code relying on Function.prototype.name.',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.parse?.bare_returns}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ parse: { ...options.parse, bare_returns: target.checked } } })\n                    }\n                  />\n                  {t('parse.bare_returns')} <Info>{t('Support top level `return` statements')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.parse?.html5_comments}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ parse: { ...options.parse, html5_comments: target.checked } } })\n                    }\n                  />\n                  {t('parse.html5_comments')}\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!options.parse?.shebang}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ parse: { ...options.parse, shebang: target.checked } } })\n                    }\n                  />\n                  {t('parse.shebang')} <Info>{t('Support `#!command` as the first line')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).arguments}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, arguments: target.checked } } })\n                    }\n                  />\n                  {t('compress.arguments')}{' '}\n                  <Info>{t('Replace `arguments[index]` with function parameter name whenever possible.')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).assignments}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, assignments: target.checked } } })\n                    }\n                  />\n                  {t('compress.assignments')} <Info>{t('Apply optimizations to assignment expressions')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).booleans}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, booleans: target.checked } } })\n                    }\n                  />\n                  {t('compress.booleans')}{' '}\n                  <Info>{t('Various optimizations for boolean context, for example `!!a ? b : c → a ? b : c`')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).collapse_vars}\n                    onChange={({ target }) =>\n                      setOptions({\n                        ...options,\n                        ...{ compress: { ...options.compress, collapse_vars: target.checked } },\n                      })\n                    }\n                  />\n                  {t('compress.collapse_vars')}{' '}\n                  <Info>\n                    {t(\n                      'Apply certain optimizations to binary nodes, e.g. `!(a <= b) → a > b,` attempts to negate binary nodes, e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).conditionals}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, conditionals: target.checked } } })\n                    }\n                  />\n                  {t('compress.conditionals')}{' '}\n                  <Info>{t('Apply optimizations for `if-s` and conditional expressions.')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).dead_code}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, dead_code: target.checked } } })\n                    }\n                  />\n                  {t('compress.dead_code')} <Info>{t('Remove unreachable code')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).directives}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, directives: target.checked } } })\n                    }\n                  />\n                  {t('compress.directives')} <Info>{t('remove redundant or non-standard directives')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).drop_console}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, drop_console: target.checked } } })\n                    }\n                  />\n                  {t('compress.drop_console')} <Info>{t('Pass `true` to discard calls to console.* functions.')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).drop_debugger}\n                    onChange={({ target }) =>\n                      setOptions({\n                        ...options,\n                        ...{ compress: { ...options.compress, drop_debugger: target.checked } },\n                      })\n                    }\n                  />\n                  {t('compress.drop_debugger')} <Info>{t('Remove `debugger;` statements')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).evaluate}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, evaluate: target.checked } } })\n                    }\n                  />\n                  {t('compress.evaluate')} <Info>{t('Attempt to evaluate constant expressions')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).expression}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, expression: target.checked } } })\n                    }\n                  />\n                  {t('compress.expression')}{' '}\n                  <Info>\n                    {t(\n                      'Pass `true` to preserve completion values from terminal statements without `return`, e.g. in bookmarklets.',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).functions}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, functions: target.checked } } })\n                    }\n                  />\n                  {t('compress.functions')}{' '}\n                  <Info>{t('convert declarations from varto function whenever possible')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).hoist_exports}\n                    onChange={({ target }) =>\n                      setOptions({\n                        ...options,\n                        ...{ compress: { ...options.compress, hoist_exports: target.checked } },\n                      })\n                    }\n                  />\n                  {t('compress.hoist_exports')}{' '}\n                  <Info>\n                    {t('hoist `export` statements to facilitate various `compress` and `mangle` optimizations.')}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).hoist_funs}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, hoist_funs: target.checked } } })\n                    }\n                  />\n                  {t('compress.hoist_funs')}\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).hoist_props}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, hoist_props: target.checked } } })\n                    }\n                  />\n                  {t('compress.hoist_props')}{' '}\n                  <Info>\n                    {t(\n                      'Hoist properties from constant object and array literals into regular variables subject to a set of constraints.',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).hoist_vars}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, hoist_vars: target.checked } } })\n                    }\n                  />\n                  {t('compress.hoist_vars')}{' '}\n                  <Info>\n                    {t(\n                      'Hoist var declarations (this is `false` by default because it seems to increase the size of the output in general)',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).if_return}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, if_return: target.checked } } })\n                    }\n                  />\n                  {t('compress.if_return')} <Info>{t('Optimizations for if/return and if/continue')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).imports}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, imports: target.checked } } })\n                    }\n                  />\n                  {t('compress.imports')} <Info>{t('drop unreferenced import symbols when used with `unused`')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).inline}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, inline: target.checked } } })\n                    }\n                  />\n                  {t('compress.inline')} <Info>{t('Inline calls to function with simple/return statement')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).join_vars}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, join_vars: target.checked } } })\n                    }\n                  />\n                  {t('compress.join_vars')} <Info>{t('join consecutive `var` statements')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).keep_fnames}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, keep_fnames: target.checked } } })\n                    }\n                  />\n                  {t('compress.keep_fnames')}{' '}\n                  <Info>{t('Pass true to prevent the compressor from discarding function names.')}</Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).keep_fnames}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, keep_fnames: target.checked } } })\n                    }\n                  />\n                  {t('compress.keep_fnames')}{' '}\n                  <Info>\n                    {t(\n                      'Pass true to prevent Infinity from being compressed into `1/0`, which may cause performance issues on `Chrome`',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).loops}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, loops: target.checked } } })\n                    }\n                  />\n                  {t('compress.loops')}{' '}\n                  <Info>\n                    {t(\n                      'Optimizations for `do`, `while` and `for` loops when we can statically determine the condition.',\n                    )}\n                  </Info>\n                </span>\n              </label>\n              <label>\n                <span>\n                  <input\n                    type=\"checkbox\"\n                    checked={!!(options.compress || {}).merge_vars}\n                    onChange={({ target }) =>\n                      setOptions({ ...options, ...{ compress: { ...options.compress, merge_vars: target.checked } } })\n                    }\n                  />\n                  {t('compress.merge_vars')} <Info>{t('combine and reuse variables.')}</Info>\n                </span>\n              </label>\n              <Checkbox\n                checked={!!(options.compress || {}).negate_iife}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, negate_iife: target.checked } } })\n                }\n              >\n                {t('compress.negate_iife')}{' '}\n                <Info>\n                  {t(\n                    'negate `Immediately-Called Function Expressions` where the return value is discarded, to avoid the parens that the code generator would insert.',\n                  )}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).objects}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, objects: target.checked } } })\n                }\n              >\n                {t('compress.objects')} <Info>{t('compact duplicate keys in object literals')}</Info>\n              </Checkbox>\n              <label>\n                <span>\n                  {t('compress.passes')}{' '}\n                  <input\n                    type=\"number\"\n                    value={(options.compress || {}).passes || 1}\n                    onChange={({ target }) =>\n                      setOptions({\n                        ...options,\n                        ...(target.value ? { compress: { ...options.compress, passes: Number(target.value) } } : {}),\n                      })\n                    }\n                  />\n                  <Info>{t('The maximum number of times to run compress.')}</Info>\n                </span>\n              </label>\n              <Checkbox\n                checked={!!(options.compress || {}).properties}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, properties: target.checked } } })\n                }\n              >\n                {t('compress.properties')}{' '}\n                <Info>\n                  {t('Rewrite property access using the dot notation, for example `foo[\"bar\"]` to `foo.bar`')}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).reduce_funcs}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, reduce_funcs: target.checked } } })\n                }\n              >\n                {t('compress.reduce_funcs')}{' '}\n                <Info>\n                  {t(\n                    'Allows single-use functions to be inlined as function expressions when permissible allowing further optimization.',\n                  )}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).reduce_vars}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, reduce_vars: target.checked } } })\n                }\n              >\n                {t('compress.reduce_vars')}{' '}\n                <Info>{t('Improve optimization on variables assigned with and used as constant values.')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).sequences}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, sequences: target.checked } } })\n                }\n              >\n                {t('compress.sequences')}{' '}\n                <Info>{t('join consecutive simple statements using the comma operator.')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).side_effects}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, side_effects: target.checked } } })\n                }\n              >\n                {t('compress.side_effects')}{' '}\n                <Info>{t('Pass false to disable potentially dropping functions marked as \"pure\".')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).strings}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, strings: target.checked } } })\n                }\n              >\n                {t('compress.strings')} <Info>{t('compact string concatenations')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).switches}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, switches: target.checked } } })\n                }\n              >\n                {t('compress.switches')} <Info>{t('De-duplicate and remove unreachable `switch` branches.')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).templates}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, templates: target.checked } } })\n                }\n              >\n                {t('compress.templates')}{' '}\n                <Info>\n                  {t(\n                    'Compact template literals by embedding expressions and/or converting to string literals, e.g. `foo ${42}` → \"foo 42\"',\n                  )}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe: target.checked } } })\n                }\n              >\n                {t('compress.unsafe')} <Info>{t('apply \"unsafe\" transformations')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).toplevel}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, toplevel: target.checked } } })\n                }\n              >\n                {t('compress.toplevel')}{' '}\n                <Info>\n                  {t(\n                    'Drop unreferenced functions (\"funcs\") and/or variables (\"vars\") in the top level scope (false by default, true to drop both unreferenced functions and variables)',\n                  )}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).top_retain}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, top_retain: target.checked } } })\n                }\n              >\n                {t('compress.top_retain')}{' '}\n                <Info>\n                  {t(\n                    'Prevent specific toplevel functions and variables from unused removal (can be array, comma-separated, RegExp or function. Implies toplevel)',\n                  )}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).typeofs}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, typeofs: target.checked } } })\n                }\n              >\n                {t('compress.typeofs')} <Info>{t('Transforms typeof foo == \"undefined\" into foo === void 0.')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe_comps}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe_comps: target.checked } } })\n                }\n              >\n                {t('compress.unsafe_comps')}{' '}\n                <Info>\n                  {t('Compress expressions like a `<= b` assuming none of the operands can be (coerced to) `NaN`.')}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe_Function}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe_Function: target.checked } } })\n                }\n              >\n                {t('compress.unsafe_Function')}{' '}\n                <Info>\n                  {t('Compress and mangle `Function(args, code)` when both args and code are string literals.')}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe_math}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe_math: target.checked } } })\n                }\n              >\n                {t('compress.unsafe_math')}{' '}\n                <Info>\n                  {t(\n                    'Optimize numerical expressions like `2 * x * 3` into `6 * x`, which may give imprecise floating point results.',\n                  )}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe_proto}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe_proto: target.checked } } })\n                }\n              >\n                {t('compress.unsafe_proto')}{' '}\n                <Info>{t('Optimize expressions like `Array.prototype.slice.call(a)` into `[].slice.call(a)`')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe_regexp}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe_regexp: target.checked } } })\n                }\n              >\n                {t('compress.unsafe_regexp')}{' '}\n                <Info>\n                  {t('Enable substitutions of variables with `RegExp` values the same way as if they are constants.')}\n                </Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unsafe_undefined}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unsafe_undefined: target.checked } } })\n                }\n              >\n                {t('compress.unsafe_undefined')}{' '}\n                <Info>{t('substitute void 0 if there is a variable named undefined in scope')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).unused}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, unused: target.checked } } })\n                }\n              >\n                {t('compress.unused')} <Info>{t('drop unreferenced functions and variables')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).varify}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, varify: target.checked } } })\n                }\n              >\n                {t('compress.varify')}{' '}\n                <Info>{t('convert block-scoped declaractions into `var` whenever safe to do so')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!(options.compress || {}).webkit}\n                onChange={({ target }) =>\n                  setOptions({ ...options, ...{ compress: { ...options.compress, webkit: target.checked } } })\n                }\n              >\n                {t('compress.webkit')} <Info>{t('Support non-standard Safari/Webkit.')}</Info>\n              </Checkbox>\n            </Spacing>\n          </ResultCode>\n        </StyledLayout>\n      )}\n      {error && <ErrorLayout>{error}</ErrorLayout>}\n    </Wrapper>\n  );\n}\n","export const js = `function hello(who = \"world\") { console.log(\\`Hello, \\${who}!\\`) }`;\nexport const val = `function hello(who = \"world\") {\n  console.log(\\`Hello, \\${who}!\\`)\n\n  return \\`Hello, \\${who}!\\`\n}`;\n"],"names":["Info","styled","_templateObject","defaultOptions","mangle","toplevel","ie8","keep_fnames","parse","bare_returns","html5_comments","shebang","compress","arguments","assignments","booleans","collapse_vars","comparisons","conditionals","dead_code","directives","drop_console","drop_debugger","evaluate","expression","functions","global_defs","hoist_exports","hoist_funs","hoist_props","hoist_vars","if_return","imports","inline","join_vars","keep_fargs","pure_getters","keep_infinity","loops","merge_vars","negate_iife","objects","passes","properties","pure_funcs","reduce_funcs","reduce_vars","sequences","side_effects","strings","switches","templates","unsafe","top_retain","typeofs","unsafe_comps","unsafe_Function","unsafe_math","unsafe_proto","unsafe_regexp","unsafe_undefined","unused","varify","webkit","Checkbox","children","_ref","other","_objectWithoutPropertiesLoose","_jsx","_jsxs","type","JSONFormat","t","useTranslation","editor","useRef","useState","setType","options","setOptions","value","setValue","error","setError","tabWidth","setTabWidth","Wrapper","StyledLayout","title","extra","Fragment","Button","onClick","prettier","parser","printWidth","plugins","parserBabel","Error","message","handleFormat","ns","data","minify","code","handleMinify","onChange","evn","target","Number","CopyButton","current","view","focus","CodeEditor","ref","height","extensions","javascript","style","maxWidth","ResultCode","codeProps","overflow","margin","Spacing","checked","_options$parse","_options$parse2","_options$parse3","ErrorLayout"],"sourceRoot":""}