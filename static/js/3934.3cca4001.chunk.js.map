{"version":3,"file":"static/js/3934.3cca4001.chunk.js","mappings":"+NAAWA,EAAO,2kBACPC,EAAM,ilC,WCKF,SAASC,IACtB,OAAoBC,EAAAA,EAAAA,KAAKC,EAAAA,GAAuB,CAC9CC,OAAQA,EACRC,UAAW,CACTC,MAAO,OACPC,WAAY,EAACR,EAAAA,EAAAA,SACbS,YAAaR,IACX,IAAIS,EAAUC,KAAKC,MAAMX,GAKzB,OAJc,IAAIY,EAAAA,WAAW,CAC3BC,QAAQ,IAEWC,MAAML,EACd,GAGjBM,WAAY,CACVT,MAAO,MACPC,WAAY,EAACS,EAAAA,EAAAA,QACbC,aAAcjB,IACZ,IAAIkB,EAAS,IAAIC,EAAAA,UAAU,CAAC,GACxBC,EAASC,EAAAA,aAAaC,SAAStB,EAAK,CAAC,GACzC,GAAsB,mBAAXoB,GAAwBA,EAAOG,IACxC,MAAM,IAAIC,MAAM,QAAUJ,EAAOG,IAAIE,IAAM,WAAaL,EAAOG,IAAIG,KAAO,UAAYN,EAAOG,IAAII,KAGnG,OADcjB,KAAKkB,UAAUV,EAAOP,MAAMX,GAAM,KAAM,EACxC,IAItB,C","sources":["../../packages/json-xml/esm/sample.js","../../packages/json-xml/esm/index.js"],"sourcesContent":["export var json = \"{\\n  \\\"any_name\\\": {\\n    \\\"person\\\": {\\n      \\\"phone\\\": [\\n          122233344553,\\n          122233344554\\n      ],\\n      \\\"name\\\": \\\"Boris\\\",\\n      \\\"age\\\": 34,\\n      \\\"married\\\": \\\"Yes\\\",\\n      \\\"birthday\\\": \\\"Mon, 31 Aug 1970 02:03:04 +0300\\\",\\n      \\\"address\\\": [\\n          {\\n              \\\"city\\\": \\\"Moscow\\\",\\n              \\\"street\\\": \\\"Kahovka\\\",\\n              \\\"buildingNo\\\": 1,\\n              \\\"flatNo\\\": 2\\n          },\\n          {\\n              \\\"city\\\": \\\"Tula\\\",\\n              \\\"street\\\": \\\"Lenina\\\",\\n              \\\"buildingNo\\\": 3,\\n              \\\"flatNo\\\": 78\\n          }\\n      ]\\n    }\\n  }\\n}\";\nexport var val = \"<any_name>\\n  <person>\\n    <phone>+122233344550</phone>\\n    <name>Jack</name>\\n    <phone>+122233344551</phone>\\n    <age>33</age>\\n    <married firstTime=\\\"No\\\">Yes</married>\\n    <birthday>Wed, 28 Mar 1979 12:13:14 +0300</birthday>\\n    <address>\\n      <city>New York</city>\\n      <street>Park Ave</street>\\n      <buildingNo>1</buildingNo>\\n      <flatNo>1</flatNo>\\n    </address>\\n    <address>\\n      <city>Boston</city>\\n      <street>Centre St</street>\\n      <buildingNo>33</buildingNo>\\n      <flatNo>24</flatNo>\\n    </address>\\n  </person>\\n  <person>\\n    <phone>+122233344553</phone>\\n    <name>Boris</name>\\n    <phone>+122233344554</phone>\\n    <age>34</age>\\n    <married firstTime=\\\"Yes\\\">Yes</married>\\n    <birthday>Mon, 31 Aug 1970 02:03:04 +0300</birthday>\\n    <address>\\n      <city>Moscow</city>\\n      <street>Kahovka</street>\\n      <buildingNo>1</buildingNo>\\n      <flatNo>2</flatNo>\\n    </address>\\n    <address>\\n      <city>Tula</city>\\n      <street>Lenina</street>\\n      <buildingNo>3</buildingNo>\\n      <flatNo>78</flatNo>\\n    </address>\\n  </person>\\n</any_name>\";","import { LayoutEditorConverter } from '@wcj/tools-react-components';\nimport { XMLParser, XMLBuilder, XMLValidator } from 'fast-xml-parser';\nimport { json } from '@codemirror/lang-json';\nimport { xml } from '@codemirror/lang-xml';\nimport * as sample from './sample';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function JSON2XML() {\n  return /*#__PURE__*/_jsx(LayoutEditorConverter, {\n    sample: sample,\n    leftProps: {\n      title: 'JSON',\n      extensions: [json()],\n      onLeftInput: val => {\n        var jsonobj = JSON.parse(val);\n        var builder = new XMLBuilder({\n          format: true\n        });\n        var xmlStr = builder.build(jsonobj);\n        return xmlStr;\n      }\n    },\n    rightProps: {\n      title: 'XML',\n      extensions: [xml()],\n      onRightInput: val => {\n        var parser = new XMLParser({});\n        var result = XMLValidator.validate(val, {});\n        if (typeof result !== 'boolean' && result.err) {\n          throw new Error(\"XML: \" + result.err.msg + \", line: \" + result.err.line + \", col: \" + result.err.col);\n        }\n        var jsonStr = JSON.stringify(parser.parse(val), null, 2);\n        return jsonStr;\n      }\n    }\n  });\n}"],"names":["json","val","JSON2XML","_jsx","LayoutEditorConverter","sample","leftProps","title","extensions","onLeftInput","jsonobj","JSON","parse","XMLBuilder","format","build","rightProps","xml","onRightInput","parser","XMLParser","result","XMLValidator","validate","err","Error","msg","line","col","stringify"],"sourceRoot":""}