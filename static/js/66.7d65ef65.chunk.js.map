{"version":3,"file":"static/js/66.7d65ef65.chunk.js","mappings":"8LAOe,SAASA,EAAUC,GAChC,IAAQC,EAAkBD,EAAlBC,cACR,GAAsBC,EAAAA,EAAAA,YAAtB,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAmCF,EAAAA,EAAAA,YAAnC,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwBJ,EAAAA,EAAAA,UAA4B,OAApD,eAAOK,EAAP,KAAaC,EAAb,KACMC,EAAc,SAACC,QAAuB,IAAvBA,IAAAA,EAAgB,IACtB,QAATH,GACFH,EAAOM,GACPJ,EAAaK,mBAAmBD,KACd,YAATH,IACTH,EAAOQ,mBAAmBF,IAC1BJ,EAAaI,KAGjB,OACEG,EAAAA,EAAAA,MAACC,EAAAA,GAAD,CAAAC,SAAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CAAcC,MAAM,MAAMC,MAAOhB,IAAOa,EAAAA,EAAAA,KAACI,EAAAA,GAAD,CAAYV,MAAOP,IAA3DY,UACEC,EAAAA,EAAAA,KAACK,EAAAA,GAAD,CACEC,YAAY,EACZZ,MAAOP,EACPoB,QAAS,kBAAMf,EAAQ,QACvBgB,QAAUC,SAAAA,GAAD,OAAShB,EAAagB,EAAIC,OAA+BhB,aAGtEM,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CAAcC,MAAOjB,GAAiB,cAAekB,MAAOd,IAAcW,EAAAA,EAAAA,KAACI,EAAAA,GAAD,CAAYV,MAAOL,IAA7FU,UACEC,EAAAA,EAAAA,KAACK,EAAAA,GAAD,CACEC,YAAY,EACZZ,MAAOL,EACPkB,QAAS,kBAAMf,EAAQ,YACvBgB,QAAUC,SAAAA,GAAD,OAAShB,EAAagB,EAAIC,OAA+BhB","sources":["../../packages/url-encode/src/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton } from '@wcj/tools-react-components';\n\nexport interface URLEncodeProps {\n  locEncodedURL?: string;\n}\n\nexport default function URLEncode(props: URLEncodeProps) {\n  const { locEncodedURL } = props;\n  const [url, setUrl] = useState<string>();\n  const [encodedUrl, setEncodeUrl] = useState<string>();\n  const [type, setType] = useState<'raw' | 'encoded'>('raw');\n  const handleInput = (value: string = '') => {\n    if (type === 'raw') {\n      setUrl(value);\n      setEncodeUrl(encodeURIComponent(value));\n    } else if (type === 'encoded') {\n      setUrl(decodeURIComponent(value));\n      setEncodeUrl(value);\n    }\n  };\n  return (\n    <Wrapper>\n      <StyledLayout title=\"URL\" extra={url && <CopyButton value={url} />}>\n        <Textarea\n          spellCheck={false}\n          value={url}\n          onFocus={() => setType('raw')}\n          onInput={(evn) => handleInput((evn.target as HTMLTextAreaElement).value)}\n        />\n      </StyledLayout>\n      <StyledLayout title={locEncodedURL || 'Encoded URL'} extra={encodedUrl && <CopyButton value={encodedUrl} />}>\n        <Textarea\n          spellCheck={false}\n          value={encodedUrl}\n          onFocus={() => setType('encoded')}\n          onInput={(evn) => handleInput((evn.target as HTMLTextAreaElement).value)}\n        />\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["URLEncode","props","locEncodedURL","useState","url","setUrl","encodedUrl","setEncodeUrl","type","setType","handleInput","value","encodeURIComponent","decodeURIComponent","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","CopyButton","Textarea","spellCheck","onFocus","onInput","evn","target"],"sourceRoot":""}