{"version":3,"file":"static/js/8923.be4cd4e9.chunk.js","mappings":"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","sources":["../../node_modules/exifreader/src/utils.js","../../node_modules/exifreader/src/dataview.js","../../node_modules/exifreader/src/constants.js","../../node_modules/exifreader/src/tag-names-utils.js","../../node_modules/exifreader/src/byte-order.js","../../node_modules/exifreader/src/image-header-tiff.js","../../node_modules/exifreader/src/image-header-jpeg.js","../../node_modules/exifreader/src/image-header-png.js","../../node_modules/exifreader/src/image-header-heic.js","../../node_modules/exifreader/src/image-header-webp.js","../../node_modules/exifreader/src/image-header.js","../../node_modules/exifreader/src/types.js","../../node_modules/exifreader/src/tag-names-common.js","../../node_modules/exifreader/src/tag-names-0th-ifd.js","../../node_modules/exifreader/src/tag-names-gps-ifd.js","../../node_modules/exifreader/src/tag-names-interoperability-ifd.js","../../node_modules/exifreader/src/tag-names-mpf-ifd.js","../../node_modules/exifreader/src/tag-names.js","../../node_modules/exifreader/src/tag-names-exif-ifd.js","../../node_modules/exifreader/src/tags.js","../../node_modules/exifreader/src/file-tags.js","../../node_modules/exifreader/src/jfif-tags.js","../../node_modules/exifreader/src/iptc-tag-names.js","../../node_modules/exifreader/src/text-decoder.js","../../node_modules/exifreader/src/tag-decoder.js","../../node_modules/exifreader/src/iptc-tags.js","../../node_modules/exifreader/src/xmp-tag-names.js","../../node_modules/exifreader/src/dom-parser.js","../../node_modules/exifreader/src/xmp-tags.js","../../node_modules/exifreader/src/icc-tag-names.js","../../node_modules/exifreader/src/icc-tags.js","../../node_modules/exifreader/src/png-file-tags.js","../../node_modules/exifreader/src/thumbnail.js","../../node_modules/exifreader/src/errors.js","../../node_modules/exifreader/src/exif-reader.js","../../node_modules/@lezer/json/dist/index.es.js","../../node_modules/@codemirror/lang-json/dist/index.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_WEBP: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nconst PNG_CHUNK_TYPE_SIZE = 4;\nconst PNG_CHUNK_LENGTH_OFFSET = 0;\nconst PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nconst PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_INTERNATIONAL_TEXT = 'iTXt';\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_INTERNATIONAL_TEXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_ID = 'ftyp';\n    const HEIC_ID_OFFSET = 4;\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n    const HEIC_MAJOR_BRAND_LENGTH = 4;\n\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_ICC) {\n        const {offset: metaOffset, length: metaLength} = findMetaAtom(dataView);\n        if (metaOffset === undefined) {\n            return {hasAppMarkers: false};\n        }\n\n        const metaEndOffset = Math.min(metaOffset + metaLength, dataView.byteLength);\n        const {exifItemOffset, ilocOffset, colrOffset} = findMetaItems(dataView, metaOffset, metaEndOffset);\n\n        const exifOffset = findExifOffset(dataView, exifItemOffset, ilocOffset, metaEndOffset);\n        const iccChunks = findIccChunks(dataView, colrOffset, metaEndOffset);\n        return {\n            hasAppMarkers: (exifOffset !== undefined) || (iccChunks !== undefined),\n            tiffHeaderOffset: exifOffset,\n            iccChunks\n        };\n    }\n\n    return {hasAppMarkers: false};\n}\n\nfunction findMetaAtom(dataView) {\n    const ATOM_LENGTH_SIZE = 4;\n    const ATOM_TYPE_SIZE = 4;\n    const ATOM_MIN_LENGTH = 8;\n    const ATOM_TYPE_OFFSET = 4;\n\n    let offset = 0;\n\n    while (offset + ATOM_LENGTH_SIZE + ATOM_TYPE_SIZE <= dataView.byteLength) {\n        const atomLength = getAtomLength(dataView, offset);\n        if (atomLength >= ATOM_MIN_LENGTH) {\n            const atomType = getStringFromDataView(dataView, offset + ATOM_TYPE_OFFSET, ATOM_TYPE_SIZE);\n            if (atomType === 'meta') {\n                return {\n                    offset,\n                    length: atomLength\n                };\n            }\n        }\n\n        offset += atomLength;\n    }\n\n    return {\n        offset: undefined,\n        length: 0\n    };\n}\n\nfunction getAtomLength(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const atomLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(atomLength)) {\n        return dataView.byteLength - offset;\n    }\n    if (hasExtendedSize(atomLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_LOW_OFFSET);\n        }\n    }\n\n    return atomLength;\n}\n\nfunction extendsToEndOfFile(atomLength) {\n    return atomLength === 0;\n}\n\nfunction hasExtendedSize(atomLength) {\n    return atomLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_OFFSET) === 0;\n}\n\nfunction findMetaItems(dataView, offset, metaEndOffset) {\n    const STRING_SIZE = 4;\n    const ITEM_INDEX_REL_OFFSET = -4;\n    const offsets = {\n        ilocOffset: undefined,\n        exifItemOffset: undefined,\n        colrOffset: undefined\n    };\n\n    while ((offset + STRING_SIZE <= metaEndOffset)\n        && (!offsets.ilocOffset || !offsets.exifItemOffset || !offsets.colrOffset)) {\n        const itemName = getStringFromDataView(dataView, offset, STRING_SIZE);\n        if (Constants.USE_EXIF && (itemName === 'iloc')) {\n            offsets.ilocOffset = offset;\n        } else if (Constants.USE_EXIF && (itemName === 'Exif')) {\n            offsets.exifItemOffset = offset + ITEM_INDEX_REL_OFFSET;\n        } else if (Constants.USE_ICC && (itemName === 'colr')) {\n            offsets.colrOffset = offset + ITEM_INDEX_REL_OFFSET;\n        }\n\n        offset++;\n    }\n\n    return offsets;\n}\n\nfunction findExifOffset(dataView, exifItemOffset, offset, metaEndOffset) {\n    const EXIF_ITEM_OFFSET_SIZE = 2;\n    const ILOC_DATA_OFFSET = 12;\n    const EXIF_POINTER_OFFSET = 8;\n    const EXIF_POINTER_SIZE = 4;\n    const EXIF_PREFIX_LENGTH_OFFSET = 4;\n    const ILOC_ITEM_SIZE = 16;\n\n    if (!offset || !exifItemOffset || (exifItemOffset + EXIF_ITEM_OFFSET_SIZE > metaEndOffset)) {\n        return undefined;\n    }\n\n    const exifItemIndex = dataView.getUint16(exifItemOffset);\n    offset += ILOC_DATA_OFFSET;\n\n    while (offset + ILOC_ITEM_SIZE <= metaEndOffset) {\n        const itemIndex = dataView.getUint16(offset);\n        if (itemIndex === exifItemIndex) {\n            const exifPointer = dataView.getUint32(offset + EXIF_POINTER_OFFSET);\n            if (exifPointer + EXIF_POINTER_SIZE <= dataView.byteLength) {\n                const exifOffset = dataView.getUint32(exifPointer);\n                const prefixLength = exifOffset + EXIF_PREFIX_LENGTH_OFFSET;\n                return exifPointer + prefixLength;\n            }\n        }\n        offset += ILOC_ITEM_SIZE;\n    }\n\n    return undefined;\n}\n\nfunction findIccChunks(dataView, offset, metaEndOffset) {\n    const ITEM_TYPE_OFFSET = 8;\n    const ITEM_TYPE_SIZE = 4;\n    const ITEM_CONTENT_OFFSET = 12;\n\n    if (!offset || (offset + ITEM_CONTENT_OFFSET > metaEndOffset)) {\n        return undefined;\n    }\n\n    const colorType = getStringFromDataView(dataView, offset + ITEM_TYPE_OFFSET, ITEM_TYPE_SIZE);\n    if ((colorType !== 'prof') && (colorType !== 'rICC')) {\n        return undefined;\n    }\n\n    return [{\n        offset: offset + ITEM_CONTENT_OFFSET,\n        length: getAtomLength(dataView, offset) - ITEM_CONTENT_OFFSET,\n        chunkNumber: 1,\n        chunksTotal: 1\n    }];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Webp from './image-header-webp.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return Tiff.findTiffOffsets();\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return Jpeg.findJpegOffsets(dataView);\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return Png.findPngOffsets(dataView);\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return Heic.findHeicOffsets(dataView);\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return Webp.findOffsets(dataView);\n    }\n\n    throw new Error('Invalid image format');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] >= value[1]) {\n            return `${Math.round(value[0] / value[1])}`;\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport default {\n    '0th': tagNames0thExifIfds,\n    'exif': tagNames0thExifIfds,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd,\n    'mpf': Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport TagNames from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read,\n    readMpf\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readMpf(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, 'mpf', dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    const ENTRY_SIZE = 16;\n\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = isFirstIndividualImage(i) ? 0 : getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction isFirstIndividualImage(i) {\n    return i === 0;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0) {\n            tags['Thumbnail'] = readIfd(dataView, ifdType, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return DOMParser;\n    }\n    try {\n        return __non_webpack_require__('@xmldom/xmldom').DOMParser; // eslint-disable-line no-undef\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    if (typeof dataView === 'string') {\n        return readTags({}, dataView);\n    }\n    return extractCompleteChunks(dataView, chunks).reduce(readTags, {});\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        return objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n    } catch (error) {\n        return tags;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const Parser = DOMParser.get();\n    if (!Parser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const domParser = new Parser();\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2022  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options) {\n    if (isFilePathOrURL(data)) {\n        return loadFile(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename) {\n    if (typeof fetch !== 'undefined') {\n        return browserFetchRemoteFile(filename);\n    }\n\n    if (/^https?:\\/\\//.test(filename)) {\n        return nodeFetchRemoteFile(filename);\n    }\n\n    return loadLocalFile(filename);\n}\n\nfunction browserFetchRemoteFile(url) {\n    return fetch(url).then((response) => response.arrayBuffer());\n}\n\nfunction nodeFetchRemoteFile(url) {\n    return new Promise((resolve, reject) => {\n        const get = requireNodeGet(url);\n        get(url, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction loadLocalFile(filename) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const buffer = Buffer.alloc(stat.size);\n                        fs.read(fd, {buffer}, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, {expanded = false, includeUnknown = false} = {expanded: false, includeUnknown: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset\n    } = ImageHeader.parseAppMarkers(dataView);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = Tags.readMpf(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n"],"names":["getStringFromDataView","dataView","offset","length","chars","i","byteLength","push","getUint8","getStringValueFromArray","getUnicodeStringFromDataView","getUint16","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","key","initializer","initialized","Object","defineProperty","get","configurable","enumerable","value","apply","writable","getBase64Image","image","btoa","Array","prototype","reduce","call","Uint8Array","data","byte","Buffer","undefined","from","toString","DataView","buffer","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","this","littleEndian","getStringValue","getEncodedString","encoding","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","isTiffFile","TIFF_ID","TIFF_ID_OFFSET","ByteOrder","hasTiffMarker","findTiffOffsets","Constants","hasAppMarkers","isJpegFile","findJpegOffsets","fieldLength","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","appMarkerPosition","isSOF0Marker","isSOF2Marker","isApp0JfifMarker","isApp1ExifMarker","isApp1XmpMarker","getXmpChunkDetails","isApp1ExtendedXmpMarker","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","isApp2ICCMarker","iccDataOffset","iccDataLength","iccChunkNumber","ICC_CHUNK_NUMBER_OFFSET","iccChunksTotal","ICC_TOTAL_CHUNKS_OFFSET","chunkNumber","chunksTotal","isApp2MPFMarker","isAppMarker","fileDataOffset","APP2_ICC_IDENTIFIER","APP2_MPF_IDENTIFIER","APP1_MARKER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","markerIdLength","isXmpIdentifier","isExtendedXmpIdentifier","dataOffset","appMarker","isPngFile","PNG_ID","findPngOffsets","offsets","isPngImageHeaderChunk","pngHeaderOffset","PNG_CHUNK_LENGTH_SIZE","isPngXmpChunk","getPngXmpDataOffset","getUint32","PNG_XMP_PREFIX","numberOfNullSeparators","isHeicFile","HEIC_ID","heicMajorBrand","indexOf","findHeicOffsets","ATOM_LENGTH_SIZE","ATOM_TYPE_SIZE","ATOM_MIN_LENGTH","ATOM_TYPE_OFFSET","atomLength","getAtomLength","findMetaAtom","metaOffset","metaLength","metaEndOffset","Math","min","STRING_SIZE","ITEM_INDEX_REL_OFFSET","ilocOffset","exifItemOffset","colrOffset","itemName","findMetaItems","exifOffset","EXIF_ITEM_OFFSET_SIZE","ILOC_DATA_OFFSET","EXIF_POINTER_OFFSET","EXIF_POINTER_SIZE","EXIF_PREFIX_LENGTH_OFFSET","ILOC_ITEM_SIZE","exifItemIndex","exifPointer","findExifOffset","ITEM_TYPE_OFFSET","ITEM_TYPE_SIZE","ITEM_CONTENT_OFFSET","colorType","findIccChunks","extendsToEndOfFile","hasExtendedSize","ATOM_EXTENDED_SIZE_OFFSET","hasEmptyHighBits","isWebpFile","RIFF_ID","WEBP_MARKER","findOffsets","EXIF_IDENTIFIER","chunkId","chunkSize","parseAppMarkers","Tiff","Jpeg","Png","Heic","Webp","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getInt32","ApertureValue","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","description","TagNamesCommon","values","formats","isArray","sample","ref","num","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengths","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","getTagValueAt","Types","read","includeUnknown","tags","readIfd","get0thIfdOffset","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","readMpf","ENTRY_SIZE","images","ceil","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","isFirstIndividualImage","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","entries","size","flags","flagsDescription","imageFormat","type","ifdType","FIELD_COUNT_SIZE","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","nextIfdOffset","tagValue","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","error","decodeAsciiValue","string","j","splitNullSeparatedAsciiString","tagName","tagDescription","getDescriptionFromTagValue","count","forceByteType","valueIndex","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","TextDecoder","decode","Decoder","TAG_HEADER_SIZE","RESOURCE_BLOCK_HEADER_SIZE","BYTES_8BIM_SIZE","parseTags","resourceBlock","getResourceBlock","isNaaResourceBlock","naaBlock","getBlockPadding","getNaaResourceBlock","newDataOffset","endOfBlockOffset","tagSize","TAG_LEAD_BYTE","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","DOMParser","__non_webpack_require__","chunks","readTags","completeChunks","combineChunks","extractCompleteChunks","totalLength","chunk","combinedChunks","set","chunkDataView","Parser","console","warn","domParser","xmlString","doc","parseFromString","xmlSource","replace","documentElement","nodeName","textContent","raw","getDocument","_raw","parseXMPObject","convertToObject","getRDF","node","childNodes","isTopNode","getChildNodes","hasTextOnlyContent","getTextValue","getElementsFromNodes","elements","nodes","nodeValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","getDescriptionOfArray","XmpTagNames","getDescriptionOfObject","item","descriptions","getClearTextKey","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseNodeAttributes","parseNodeAsSimpleValue","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","iccData","totalIccProfileLength","sum","icc","iccBinaryData","getBuffer","iccDataChunk","find","chunkData","iccProfileKeys","profileEntry","sliceToString","ICC_SIGNATURE","ICC_TAG_COUNT_OFFSET","iccDoesNotHaveTagCount","tagHeaderOffset","hasTagsData","tagSignature","tagOffset","TAG_TYPE_DESC","tagValueSize","addTag","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","getBitDepth","getColorType","getCompression","getFilter","getInterlace","COMPRESSION_JPEG","thumbnailTags","Compression","includes","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","options","isFilePathOrURL","filename","fetch","then","response","arrayBuffer","url","Promise","resolve","reject","requireNodeGet","statusCode","on","concat","statusMessage","resume","nodeFetchRemoteFile","fs","requireNodeFs","open","fd","stat","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","file","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","loadView","errors","exifErrors","isBuffer","isNodeBuffer","DataViewWrapper","getDataView","expanded","foundMetaData","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Tags","Thumbnail","exif","addGpsGroup","hasIptcData","readIptcTags","IptcTags","iptc","hasXmpData","readXmpTags","XmpTags","xmp","hasIccData","readIccTags","IccTags","hasMpfData","readMpfTags","mpf","hasPngFileData","PngFileTags","pngFile","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","iccDataOffsets","pngFileDataOffset","jsonHighlighting","styleTags","PropertyName","Null","parser","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","e","SyntaxError","pos","m","match","line","getErrorPosition","severity","to","jsonLanguage","LRLanguage","configure","props","indentNodeProp","continuedIndent","except","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport"],"sourceRoot":""}