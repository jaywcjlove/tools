{"version":3,"file":"static/js/138.013eced2.chunk.js","mappings":"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","sources":["../../packages/generate-password/src/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton, Button } from '@wcj/tools-react-components';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 6px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  user-select: none;\n`;\n\nexport interface InputRangeProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n  ref?: any;\n  range?: number;\n}\n\nconst InputRange: React.FC<React.PropsWithChildren<InputRangeProps>> = (props) => {\n  return (\n    <Label>\n      <Input type=\"range\" min={8} max={50} style={{ flex: 1 }} {...props} defaultValue={props.range} />\n      <span>{props.range}</span>\n    </Label>\n  );\n};\n\nconst LOWERCASE = 'abcdefghijklmnopqrstuvwxyz';\nconst UPPERCASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst NUMERIC = '0123456789';\nconst SPECIAL_CHARACTER = '!@#$%^&*()_+~`|}{[]:;?><,./-=';\n\nfunction generatePassword(\n  len: number = 8,\n  lowerCase: boolean = true,\n  upperCase: boolean = true,\n  numeric: boolean = true,\n  special: boolean = true,\n) {\n  let password = '';\n  if (!lowerCase && !upperCase && !numeric && !special) {\n    return password;\n  }\n  while (password.length < len) {\n    const entity1 = Math.ceil(LOWERCASE.length * Math.random() * Math.random()) - 1;\n    const entity2 = Math.ceil(NUMERIC.length * Math.random() * Math.random()) - 1;\n    const entity3 = Math.ceil(SPECIAL_CHARACTER.length * Math.random() * Math.random()) - 1;\n    const entity4 = Math.ceil(UPPERCASE.length * Math.random() * Math.random()) - 1;\n    if (lowerCase && password.length < len) {\n      password += LOWERCASE.charAt(entity1);\n    }\n    if (upperCase && password.length < len) {\n      password += UPPERCASE.charAt(entity4);\n    }\n    if (numeric && password.length < len) {\n      password += NUMERIC.charAt(entity2);\n    }\n    if (special && password.length < len) {\n      password += SPECIAL_CHARACTER.charAt(entity3);\n    }\n  }\n  return password.trim();\n}\n\nexport default function GeneratePassword() {\n  const [range, setRange] = useState<number>(12);\n  const [lowerCase, setLowerCase] = useState<boolean>(true);\n  const [upperCase, setUpperCase] = useState<boolean>(true);\n  const [numeric, setNumeric] = useState<boolean>(true);\n  const [special, setSpecial] = useState<boolean>(true);\n  const [result, setResult] = useState<string>();\n  useEffect(() => {\n    setResult(generatePassword(range, lowerCase, upperCase, numeric, special));\n  }, [range, lowerCase, upperCase, numeric, special]);\n  return (\n    <Wrapper>\n      <StyledLayout title=\"Setting\">\n        <InputRange range={range} onChange={(evn) => setRange(Number((evn.target as HTMLInputElement).value))} />\n        <Label>\n          <Input type=\"checkbox\" checked={lowerCase} onChange={(evn) => setLowerCase(evn.target.checked)} />\n          Lower Case Letter(a..z)\n        </Label>\n        <Label>\n          <Input type=\"checkbox\" checked={upperCase} onChange={(evn) => setUpperCase(evn.target.checked)} />\n          Upper Case Letter(A..Z)\n        </Label>\n        <Label>\n          <Input type=\"checkbox\" checked={numeric} onChange={(evn) => setNumeric(evn.target.checked)} />\n          Number (0..9)\n        </Label>\n        <Label>\n          <Input type=\"checkbox\" checked={special} onChange={(evn) => setSpecial(evn.target.checked)} />\n          Special characters\n        </Label>\n        <Button\n          style={{ marginTop: 10 }}\n          onClick={() => setResult(generatePassword(range, lowerCase, upperCase, numeric, special))}\n        >\n          Generate Password\n        </Button>\n      </StyledLayout>\n      <StyledLayout title=\"Result\" extra={result && <CopyButton value={result} />}>\n        <Textarea spellCheck={false} value={result} readOnly />\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["Input","styled","_templateObject","Label","_templateObject2","InputRange","props","_jsxs","children","_jsx","type","min","max","style","flex","defaultValue","range","LOWERCASE","UPPERCASE","NUMERIC","SPECIAL_CHARACTER","generatePassword","len","lowerCase","upperCase","numeric","special","password","length","entity1","Math","ceil","random","entity2","entity3","entity4","charAt","trim","GeneratePassword","useState","setRange","setLowerCase","setUpperCase","setNumeric","setSpecial","result","setResult","useEffect","Wrapper","StyledLayout","title","onChange","evn","Number","target","value","checked","Button","marginTop","onClick","extra","CopyButton","Textarea","spellCheck","readOnly"],"sourceRoot":""}