{"version":3,"file":"static/js/40.6a55f471.chunk.js","mappings":"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","sources":["../../node_modules/@lezer/html/dist/index.es.js","../../node_modules/@lezer/css/dist/index.es.js","../../node_modules/@codemirror/lang-css/dist/index.js","../../node_modules/@lezer/javascript/dist/index.es.js","../../node_modules/@codemirror/lang-javascript/dist/index.js","../../node_modules/@codemirror/lang-html/dist/index.js","../../node_modules/@lezer/markdown/dist/index.js","../../node_modules/@codemirror/lang-markdown/dist/index.js","../../node_modules/hast-util-to-mdast/lib/all.js","../../node_modules/hast-util-to-mdast/lib/util/own.js","../../node_modules/hast-util-to-mdast/lib/util/wrap-text.js","../../node_modules/hast-util-to-mdast/lib/one.js","../../node_modules/mdast-util-phrasing/index.js","../../node_modules/hast-util-to-mdast/lib/util/wrap.js","../../node_modules/hast-util-to-mdast/lib/util/wrap-children.js","../../node_modules/hast-util-to-mdast/lib/util/resolve.js","../../node_modules/unist-util-find-after/index.js","../../node_modules/hast-util-to-text/index.js","../../node_modules/hast-util-to-mdast/lib/handlers/code.js","../../node_modules/trim-trailing-lines/index.js","../../node_modules/hast-util-to-mdast/lib/handlers/del.js","../../node_modules/hast-util-to-mdast/lib/util/list-items-spread.js","../../node_modules/hast-util-to-mdast/lib/util/wrap-list-items.js","../../node_modules/hast-util-to-mdast/lib/handlers/dl.js","../../node_modules/hast-util-to-mdast/lib/handlers/em.js","../../node_modules/hast-util-to-mdast/lib/handlers/heading.js","../../node_modules/hast-util-to-mdast/lib/handlers/img.js","../../node_modules/hast-util-to-mdast/lib/handlers/inline-code.js","../../node_modules/hast-util-to-mdast/lib/util/find-selected-options.js","../../node_modules/hast-util-to-mdast/lib/handlers/input.js","../../node_modules/hast-util-to-mdast/lib/handlers/li.js","../../node_modules/hast-util-to-mdast/lib/handlers/list.js","../../node_modules/hast-util-to-mdast/lib/handlers/media.js","../../node_modules/hast-util-to-mdast/lib/handlers/p.js","../../node_modules/hast-util-to-mdast/lib/handlers/strong.js","../../node_modules/hast-util-to-mdast/lib/handlers/table-cell.js","../../node_modules/hast-util-to-mdast/lib/handlers/table.js","../../node_modules/hast-util-to-mdast/lib/handlers/index.js","../../node_modules/hast-util-to-mdast/lib/handlers/root.js","../../node_modules/hast-util-to-mdast/lib/handlers/text.js","../../node_modules/hast-util-to-mdast/lib/handlers/comment.js","../../node_modules/hast-util-to-mdast/lib/handlers/a.js","../../node_modules/hast-util-to-mdast/lib/handlers/base.js","../../node_modules/hast-util-to-mdast/lib/handlers/blockquote.js","../../node_modules/hast-util-to-mdast/lib/handlers/br.js","../../node_modules/hast-util-to-mdast/lib/handlers/hr.js","../../node_modules/hast-util-to-mdast/lib/handlers/iframe.js","../../node_modules/hast-util-to-mdast/lib/handlers/q.js","../../node_modules/hast-util-to-mdast/lib/handlers/select.js","../../node_modules/hast-util-to-mdast/lib/handlers/textarea.js","../../node_modules/hast-util-to-mdast/lib/handlers/table-row.js","../../node_modules/hast-util-to-mdast/lib/handlers/wbr.js","../../node_modules/hast-util-to-mdast/lib/index.js","../../node_modules/rehype-remark/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/configure.js","../../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/longest-streak/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered-other.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../node_modules/mdast-util-to-markdown/lib/join.js","../../node_modules/mdast-util-to-markdown/lib/unsafe.js","../../node_modules/mdast-util-to-markdown/lib/index.js","../../node_modules/remark-stringify/index.js","../../node_modules/remark-stringify/lib/index.js"],"sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\nimport { parseMixed } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst scriptText = 53,\n  StartCloseScriptTag = 1,\n  styleText = 54,\n  StartCloseStyleTag = 2,\n  textareaText = 55,\n  StartCloseTextareaTag = 3,\n  StartTag = 4,\n  StartScriptTag = 5,\n  StartStyleTag = 6,\n  StartTextareaTag = 7,\n  StartSelfClosingTag = 8,\n  StartCloseTag = 9,\n  NoMatchStartCloseTag = 10,\n  MismatchedStartCloseTag = 11,\n  missingCloseTag = 56,\n  IncompleteCloseTag = 12,\n  commentContent$1 = 57,\n  Element = 18,\n  ScriptText = 27,\n  StyleText = 30,\n  TextareaText = 33,\n  OpenTag = 35,\n  Dialect_noMatch = 0;\n\n/* Hand-written tokenizers for HTML. */\n\nconst selfClosers = {\n  area: true, base: true, br: true, col: true, command: true,\n  embed: true, frame: true, hr: true, img: true, input: true,\n  keygen: true, link: true, meta: true, param: true, source: true,\n  track: true, wbr: true, menuitem: true\n};\n\nconst implicitlyClosed = {\n  dd: true, li: true, optgroup: true, option: true, p: true,\n  rp: true, rt: true, tbody: true, td: true, tfoot: true,\n  th: true, tr: true\n};\n\nconst closeOnOpen = {\n  dd: {dd: true, dt: true},\n  dt: {dd: true, dt: true},\n  li: {li: true},\n  option: {option: true, optgroup: true},\n  optgroup: {optgroup: true},\n  p: {\n    address: true, article: true, aside: true, blockquote: true, dir: true,\n    div: true, dl: true, fieldset: true, footer: true, form: true,\n    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,\n    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,\n    p: true, pre: true, section: true, table: true, ul: true\n  },\n  rp: {rp: true, rt: true},\n  rt: {rp: true, rt: true},\n  tbody: {tbody: true, tfoot: true},\n  td: {td: true, th: true},\n  tfoot: {tbody: true},\n  th: {td: true, th: true},\n  thead: {tbody: true, tfoot: true},\n  tr: {tr: true}\n};\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedPos == pos && cachedInput == input) return cachedName\n  let next = input.peek(offset);\n  while (isSpace(next)) next = input.peek(++offset);\n  let name = \"\";\n  for (;;) {\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    next = input.peek(++offset);\n  }\n  // Undefined to signal there's a <? or <!, null for just missing\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name ? name.toLowerCase() : next == question || next == bang ? undefined : null\n}\n\nconst lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33, dash = 45;\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst startTagTerms = [StartTag, StartSelfClosingTag, StartScriptTag, StartStyleTag, StartTextareaTag];\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst tagStart = new ExternalTokenizer((input, stack) => {\n  if (input.next != lessThan) {\n    // End of file, close any open tags\n    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);\n    return\n  }\n  input.advance();\n  let close = input.next == slash;\n  if (close) input.advance();\n  let name = tagNameAfter(input, 0);\n  if (name === undefined) return\n  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)\n\n  let parent = stack.context ? stack.context.name : null;\n  if (close) {\n    if (name == parent) return input.acceptToken(StartCloseTag)\n    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)\n    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return\n    input.acceptToken(MismatchedStartCloseTag);\n  } else {\n    if (name == \"script\") return input.acceptToken(StartScriptTag)\n    if (name == \"style\") return input.acceptToken(StartStyleTag)\n    if (name == \"textarea\") return input.acceptToken(StartTextareaTag)\n    if (selfClosers.hasOwnProperty(name)) return input.acceptToken(StartSelfClosingTag)\n    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);\n    else input.acceptToken(StartTag);\n  }\n}, {contextual: true});\n\nconst commentContent = new ExternalTokenizer(input => {\n  for (let dashes = 0, i = 0;; i++) {\n    if (input.next < 0) {\n      if (i) input.acceptToken(commentContent$1);\n      break\n    }\n    if (input.next == dash) {\n      dashes++;\n    } else if (input.next == greaterThan && dashes >= 2) {\n      if (i > 3) input.acceptToken(commentContent$1, -2);\n      break\n    } else {\n      dashes = 0;\n    }\n    input.advance();\n  }\n});\n\nfunction contentTokenizer(tag, textToken, endToken) {\n  let lastState = 2 + tag.length;\n  return new ExternalTokenizer(input => {\n    // state means:\n    // - 0 nothing matched\n    // - 1 '<' matched\n    // - 2 '</' + possibly whitespace matched\n    // - 3-(1+tag.length) part of the tag matched\n    // - lastState whole tag + possibly whitespace matched\n    for (let state = 0, matchedLen = 0, i = 0;; i++) {\n      if (input.next < 0) {\n        if (i) input.acceptToken(textToken);\n        break\n      }\n      if (state == 0 && input.next == lessThan ||\n          state == 1 && input.next == slash ||\n          state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {\n        state++;\n        matchedLen++;\n      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {\n        matchedLen++;\n      } else if (state == lastState && input.next == greaterThan) {\n        if (i > matchedLen)\n          input.acceptToken(textToken, -matchedLen);\n        else\n          input.acceptToken(endToken, -(matchedLen - 2));\n        break\n      } else if ((input.next == 10 /* '\\n' */ || input.next == 13 /* '\\r' */) && i) {\n        input.acceptToken(textToken, 1);\n        break\n      } else {\n        state = matchedLen = 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst scriptTokens = contentTokenizer(\"script\", scriptText, StartCloseScriptTag);\n\nconst styleTokens = contentTokenizer(\"style\", styleText, StartCloseStyleTag);\n\nconst textareaTokens = contentTokenizer(\"textarea\", textareaText, StartCloseTextareaTag);\n\nconst htmlHighlighting = styleTags({\n  \"Text RawText\": tags.content,\n  \"StartTag StartCloseTag SelfCloserEndTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/TagName\": [tags.tagName,  tags.invalid],\n  AttributeName: tags.attributeName,\n  \"AttributeValue UnquotedAttributeValue\": tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",xOVOxOOO!WQ!bO'#CoO!]Q!bO'#CyO!bQ!bO'#C|O!gQ!bO'#DPO!lQ!bO'#DRO!qOXO'#CnO!|OYO'#CnO#XO[O'#CnO$eOxO'#CnOOOW'#Cn'#CnO$lO!rO'#DSO$tQ!bO'#DUO$yQ!bO'#DVOOOW'#Dj'#DjOOOW'#DX'#DXQVOxOOO%OQ#tO,59ZO%WQ#tO,59eO%`Q#tO,59hO%hQ#tO,59kO%pQ#tO,59mOOOX'#D]'#D]O%xOXO'#CwO&TOXO,59YOOOY'#D^'#D^O&]OYO'#CzO&hOYO,59YOOO['#D_'#D_O&pO[O'#C}O&{O[O,59YOOOW'#D`'#D`O'TOxO,59YO'[Q!bO'#DQOOOW,59Y,59YOOO`'#Da'#DaO'aO!rO,59nOOOW,59n,59nO'iQ!bO,59pO'nQ!bO,59qOOOW-E7V-E7VO'sQ#tO'#CqOOQO'#DY'#DYO(OQ#tO1G.uOOOX1G.u1G.uO(WQ#tO1G/POOOY1G/P1G/PO(`Q#tO1G/SOOO[1G/S1G/SO(hQ#tO1G/VOOOW1G/V1G/VO(pQ#tO1G/XOOOW1G/X1G/XOOOX-E7Z-E7ZO(xQ!bO'#CxOOOW1G.t1G.tOOOY-E7[-E7[O(}Q!bO'#C{OOO[-E7]-E7]O)SQ!bO'#DOOOOW-E7^-E7^O)XQ!bO,59lOOO`-E7_-E7_OOOW1G/Y1G/YOOOW1G/[1G/[OOOW1G/]1G/]O)^Q&jO,59]OOQO-E7W-E7WOOOX7+$a7+$aOOOY7+$k7+$kOOO[7+$n7+$nOOOW7+$q7+$qOOOW7+$s7+$sO)iQ!bO,59dO)nQ!bO,59gO)sQ!bO,59jOOOW1G/W1G/WO)xO,UO'#CtO*WO7[O'#CtOOQO1G.w1G.wOOOW1G/O1G/OOOOW1G/R1G/ROOOW1G/U1G/UOOOO'#DZ'#DZO*fO,UO,59`OOQO,59`,59`OOOO'#D['#D[O*tO7[O,59`OOOO-E7X-E7XOOQO1G.z1G.zOOOO-E7Y-E7Y\",\n  stateData: \"+[~O!]OS~OSSOTPOUQOVROWTOY]OZ[O[^O^^O_^O`^Oa^Ow^Oz_O!cZO~OdaO~OdbO~OdcO~OddO~OdeO~O!VfOPkP!YkP~O!WiOQnP!YnP~O!XlORqP!YqP~OSSOTPOUQOVROWTOXqOY]OZ[O[^O^^O_^O`^Oa^Ow^O!cZO~O!YrO~P#dO!ZsO!duO~OdvO~OdwO~OfyOj|O~OfyOj!OO~OfyOj!QO~OfyOj!SO~OfyOj!UO~O!VfOPkX!YkX~OP!WO!Y!XO~O!WiOQnX!YnX~OQ!ZO!Y!XO~O!XlORqX!YqX~OR!]O!Y!XO~O!Y!XO~P#dOd!_O~O!ZsO!d!aO~Oj!bO~Oj!cO~Og!dOfeXjeX~OfyOj!fO~OfyOj!gO~OfyOj!hO~OfyOj!iO~OfyOj!jO~Od!kO~Od!lO~Od!mO~Oj!nO~Oi!qO!_!oO!a!pO~Oj!rO~Oj!sO~Oj!tO~O_!uO`!uO!_!wO!`!uO~O_!xO`!xO!a!wO!b!xO~O_!uO`!uO!_!{O!`!uO~O_!xO`!xO!a!{O!b!xO~O`_a!cwz!c~\",\n  goto: \"%o!_PPPPPPPPPPPPPPPPPP!`!fP!lPP!xPP!{#O#R#X#[#_#e#h#k#q#w!`P!`!`P#}$T$k$q$w$}%T%Z%aPPPPPPPP%gX^OX`pXUOX`pezabcde{}!P!R!TR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!TeZ!e{}!P!R!TQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp\",\n  nodeNames: \"⚠ StartCloseTag StartCloseTag StartCloseTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue EndTag ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl\",\n  maxTerm: 66,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", -11,1,2,3,4,5,6,7,8,9,10,11,\"EndTag\",-4,19,29,32,35,\"CloseTag\"],\n    [\"group\", -9,12,15,16,17,18,38,39,40,41,\"Entity\",14,\"Entity TextContent\",-3,27,30,33,\"TextContent Entity\"],\n    [\"openedBy\", 26,\"StartTag StartCloseTag\",-4,28,31,34,36,\"OpenTag\"]\n  ],\n  propSources: [htmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 9,\n  tokenData: \"!#b!aR!WOX$kXY)sYZ)sZ]$k]^)s^p$kpq)sqr$krs*zsv$kvw+dwx2yx}$k}!O3f!O!P$k!P!Q7_!Q![$k![!]8u!]!^$k!^!_>b!_!`!!p!`!a8T!a!c$k!c!}8u!}#R$k#R#S8u#S#T$k#T#o8u#o$f$k$f$g&R$g%W$k%W%o8u%o%p$k%p&a8u&a&b$k&b1p8u1p4U$k4U4d8u4d4e$k4e$IS8u$IS$I`$k$I`$Ib8u$Ib$Kh$k$Kh%#t8u%#t&/x$k&/x&Et8u&Et&FV$k&FV;'S8u;'S;:j<t;:j?&r$k?&r?Ah8u?Ah?BY$k?BY?Mn8u?Mn~$k!Z$vc^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g~$k!R&[V^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&Rq&xT^P!bpOv&qwx'Xx!^&q!^!_'g!_~&qP'^R^POv'Xw!^'X!_~'Xp'lQ!bpOv'gx~'ga'yU^P!``Or'rrs'Xsv'rw!^'r!^!_(]!_~'r`(bR!``Or(]sv(]w~(]!Q(rT!``!bpOr(krs'gsv(kwx(]x~(kW)WXiWOX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!a*O^^P!``!bp!]^OX&RXY)sYZ)sZ]&R]^)s^p&Rpq)sqr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!Z+TT!_h^P!bpOv&qwx'Xx!^&q!^!_'g!_~&q!Z+kbiWaPOX,sXZ.QZ],s]^.Q^p,sqr,srs.Qst/]tw,swx.Qx!P,s!P!Q.Q!Q!],s!]!^)R!^!a.Q!a$f,s$f$g.Q$g~,s!Z,xbiWOX,sXZ.QZ],s]^.Q^p,sqr,srs.Qst)Rtw,swx.Qx!P,s!P!Q.Q!Q!],s!]!^.i!^!a.Q!a$f,s$f$g.Q$g~,s!R.TTOp.Qqs.Qt!].Q!]!^.d!^~.Q!R.iO_!R!Z.pXiW_!ROX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!Z/baiWOX0gXZ1qZ]0g]^1q^p0gqr0grs1qsw0gwx1qx!P0g!P!Q1q!Q!]0g!]!^)R!^!a1q!a$f0g$f$g1q$g~0g!Z0laiWOX0gXZ1qZ]0g]^1q^p0gqr0grs1qsw0gwx1qx!P0g!P!Q1q!Q!]0g!]!^2V!^!a1q!a$f0g$f$g1q$g~0g!R1tSOp1qq!]1q!]!^2Q!^~1q!R2VO`!R!Z2^XiW`!ROX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!Z3SU!ax^P!``Or'rrs'Xsv'rw!^'r!^!_(]!_~'r!]3qe^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx}$k}!O5S!O!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g~$k!]5_d^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!`&R!`!a6m!a$f$k$f$g&R$g~$k!T6xV^P!``!bp!dQOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!X7hX^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_!`&R!`!a8T!a~&R!X8`VjU^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!a9U!YfSdQ^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx}$k}!O8u!O!P8u!P!Q&R!Q![8u![!]8u!]!^$k!^!_(k!_!a&R!a!c$k!c!}8u!}#R$k#R#S8u#S#T$k#T#o8u#o$f$k$f$g&R$g$}$k$}%O8u%O%W$k%W%o8u%o%p$k%p&a8u&a&b$k&b1p8u1p4U8u4U4d8u4d4e$k4e$IS8u$IS$I`$k$I`$Ib8u$Ib$Je$k$Je$Jg8u$Jg$Kh$k$Kh%#t8u%#t&/x$k&/x&Et8u&Et&FV$k&FV;'S8u;'S;:j<t;:j?&r$k?&r?Ah8u?Ah?BY$k?BY?Mn8u?Mn~$k!a=Pe^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g;=`$k;=`<%l8u<%l~$k!R>iW!``!bpOq(kqr?Rrs'gsv(kwx(]x!a(k!a!bKj!b~(k!R?YZ!``!bpOr(krs'gsv(kwx(]x}(k}!O?{!O!f(k!f!gAR!g#W(k#W#XGz#X~(k!R@SV!``!bpOr(krs'gsv(kwx(]x}(k}!O@i!O~(k!R@rT!``!bp!cPOr(krs'gsv(kwx(]x~(k!RAYV!``!bpOr(krs'gsv(kwx(]x!q(k!q!rAo!r~(k!RAvV!``!bpOr(krs'gsv(kwx(]x!e(k!e!fB]!f~(k!RBdV!``!bpOr(krs'gsv(kwx(]x!v(k!v!wBy!w~(k!RCQV!``!bpOr(krs'gsv(kwx(]x!{(k!{!|Cg!|~(k!RCnV!``!bpOr(krs'gsv(kwx(]x!r(k!r!sDT!s~(k!RD[V!``!bpOr(krs'gsv(kwx(]x!g(k!g!hDq!h~(k!RDxW!``!bpOrDqrsEbsvDqvwEvwxFfx!`Dq!`!aGb!a~DqqEgT!bpOvEbvxEvx!`Eb!`!aFX!a~EbPEyRO!`Ev!`!aFS!a~EvPFXOzPqF`Q!bpzPOv'gx~'gaFkV!``OrFfrsEvsvFfvwEvw!`Ff!`!aGQ!a~FfaGXR!``zPOr(]sv(]w~(]!RGkT!``!bpzPOr(krs'gsv(kwx(]x~(k!RHRV!``!bpOr(krs'gsv(kwx(]x#c(k#c#dHh#d~(k!RHoV!``!bpOr(krs'gsv(kwx(]x#V(k#V#WIU#W~(k!RI]V!``!bpOr(krs'gsv(kwx(]x#h(k#h#iIr#i~(k!RIyV!``!bpOr(krs'gsv(kwx(]x#m(k#m#nJ`#n~(k!RJgV!``!bpOr(krs'gsv(kwx(]x#d(k#d#eJ|#e~(k!RKTV!``!bpOr(krs'gsv(kwx(]x#X(k#X#YDq#Y~(k!RKqW!``!bpOrKjrsLZsvKjvwLowxNPx!aKj!a!b! g!b~KjqL`T!bpOvLZvxLox!aLZ!a!bM^!b~LZPLrRO!aLo!a!bL{!b~LoPMORO!`Lo!`!aMX!a~LoPM^OwPqMcT!bpOvLZvxLox!`LZ!`!aMr!a~LZqMyQ!bpwPOv'gx~'gaNUV!``OrNPrsLosvNPvwLow!aNP!a!bNk!b~NPaNpV!``OrNPrsLosvNPvwLow!`NP!`!a! V!a~NPa! ^R!``wPOr(]sv(]w~(]!R! nW!``!bpOrKjrsLZsvKjvwLowxNPx!`Kj!`!a!!W!a~Kj!R!!aT!``!bpwPOr(krs'gsv(kwx(]x~(k!V!!{VgS^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R\",\n  tokenizers: [scriptTokens, styleTokens, textareaTokens, tagStart, commentContent, 0, 1, 2, 3, 4, 5],\n  topRules: {\"Document\":[0,13]},\n  dialects: {noMatch: 0},\n  tokenPrec: 464\n});\n\nfunction getAttrs(element, input) {\n  let attrs = Object.create(null);\n  for (let att of element.firstChild.getChildren(\"Attribute\")) {\n    let name = att.getChild(\"AttributeName\"), value = att.getChild(\"AttributeValue\") || att.getChild(\"UnquotedAttributeValue\");\n    if (name) attrs[input.read(name.from, name.to)] =\n      !value ? \"\" : value.name == \"AttributeValue\" ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);\n  }\n  return attrs\n}\n\nfunction maybeNest(node, input, tags) {\n  let attrs;\n  for (let tag of tags) {\n    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent, input))))\n      return {parser: tag.parser}\n  }\n  return null\n}\n\n// tags: {\n//   tag: \"script\" | \"style\" | \"textarea\",\n//   attrs?: ({[attr: string]: string}) => boolean,\n//   parser: Parser\n// }[]\n \nfunction configureNesting(tags) {\n  let script = [], style = [], textarea = [];\n  for (let tag of tags) {\n    let array = tag.tag == \"script\" ? script : tag.tag == \"style\" ? style : tag.tag == \"textarea\" ? textarea : null;\n    if (!array) throw new RangeError(\"Only script, style, and textarea tags can host nested parsers\")\n    array.push(tag);\n  }\n  return parseMixed((node, input) => {\n    let id = node.type.id;\n    if (id == ScriptText) return maybeNest(node, input, script)\n    if (id == StyleText) return maybeNest(node, input, style)\n    if (id == TextareaText) return maybeNest(node, input, textarea)\n    return null\n  })\n}\n\nexport { configureNesting, parser };\n","import { ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst descendantOp = 93,\n  Unit = 1,\n  callee = 94,\n  identifier = 95,\n  VariableName = 2;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier);\n      break\n    }\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon || next == dash)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\nconst cssHighlighting = styleTags({\n  \"import charset namespace keyframes\": tags.definitionKeyword,\n  \"media supports\": tags.controlKeyword,\n  \"from to selector\": tags.keyword,\n  NamespaceName: tags.namespace,\n  KeyframeName: tags.labelName,\n  TagName: tags.tagName,\n  ClassName: tags.className,\n  PseudoClassName: tags.constant(tags.className),\n  IdName: tags.labelName,\n  \"FeatureName PropertyName\": tags.propertyName,\n  AttributeName: tags.attributeName,\n  NumberLiteral: tags.number,\n  KeywordQuery: tags.keyword,\n  UnaryQueryOp: tags.operatorKeyword,\n  \"CallTag ValueName\": tags.atom,\n  VariableName: tags.variableName,\n  Callee: tags.operatorKeyword,\n  Unit: tags.unit,\n  \"UniversalSelector NestingSelector\": tags.definitionOperator,\n  AtKeyword: tags.keyword,\n  MatchOp: tags.compareOperator,\n  \"ChildOp SiblingOp, LogicOp\": tags.logicOperator,\n  BinOp: tags.arithmeticOperator,\n  Important: tags.modifier,\n  Comment: tags.blockComment,\n  ParenthesizedContent: tags.special(tags.name),\n  ColorLiteral: tags.color,\n  StringLiteral: tags.string,\n  \":\": tags.punctuation,\n  \"PseudoOp #\": tags.derefOperator,\n  \"; ,\": tags.separator,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_callee = {__proto__:null,lang:32, \"nth-child\":32, \"nth-last-child\":32, \"nth-of-type\":32, dir:32, url:60, \"url-prefix\":60, domain:60, regexp:60, selector:134};\nconst spec_AtKeyword = {__proto__:null,\"@import\":114, \"@media\":138, \"@charset\":142, \"@namespace\":146, \"@keyframes\":152, \"@supports\":164};\nconst spec_identifier = {__proto__:null,not:128, only:128, from:158, to:160};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"7WOYQ[OOOOQP'#Cd'#CdOOQP'#Cc'#CcO!ZQ[O'#CfO!}QXO'#CaO#UQ[O'#ChO#aQ[O'#DPO#fQ[O'#DTOOQP'#Ec'#EcO#kQdO'#DeO$VQ[O'#DrO#kQdO'#DtO$hQ[O'#DvO$sQ[O'#DyO$xQ[O'#EPO%WQ[O'#EROOQS'#Eb'#EbOOQS'#ES'#ESQYQ[OOOOQP'#Cg'#CgOOQP,59Q,59QO!ZQ[O,59QO%_Q[O'#EVO%yQWO,58{O&RQ[O,59SO#aQ[O,59kO#fQ[O,59oO%_Q[O,59sO%_Q[O,59uO%_Q[O,59vO'bQ[O'#D`OOQS,58{,58{OOQP'#Ck'#CkOOQO'#C}'#C}OOQP,59S,59SO'iQWO,59SO'nQWO,59SOOQP'#DR'#DROOQP,59k,59kOOQO'#DV'#DVO'sQ`O,59oOOQS'#Cp'#CpO#kQdO'#CqO'{QvO'#CsO)VQtO,5:POOQO'#Cx'#CxO'iQWO'#CwO)kQWO'#CyOOQS'#Ef'#EfOOQO'#Dh'#DhO)pQ[O'#DoO*OQWO'#EiO$xQ[O'#DmO*^QWO'#DpOOQO'#Ej'#EjO%|QWO,5:^O*cQpO,5:`OOQS'#Dx'#DxO*kQWO,5:bO*pQ[O,5:bOOQO'#D{'#D{O*xQWO,5:eO*}QWO,5:kO+VQWO,5:mOOQS-E8Q-E8QOOQP1G.l1G.lO+yQXO,5:qOOQO-E8T-E8TOOQS1G.g1G.gOOQP1G.n1G.nO'iQWO1G.nO'nQWO1G.nOOQP1G/V1G/VO,WQ`O1G/ZO,qQXO1G/_O-XQXO1G/aO-oQXO1G/bO.VQXO'#CdO.zQWO'#DaOOQS,59z,59zO/PQWO,59zO/XQ[O,59zO/`QdO'#CoO/gQ[O'#DOOOQP1G/Z1G/ZO#kQdO1G/ZO/nQpO,59]OOQS,59_,59_O#kQdO,59aO/vQWO1G/kOOQS,59c,59cO/{Q!bO,59eO0TQWO'#DhO0`QWO,5:TO0eQWO,5:ZO$xQ[O,5:VO$xQ[O'#EYO0mQWO,5;TO0xQWO,5:XO%_Q[O,5:[OOQS1G/x1G/xOOQS1G/z1G/zOOQS1G/|1G/|O1ZQWO1G/|O1`QdO'#D|OOQS1G0P1G0POOQS1G0V1G0VOOQS1G0X1G0XOOQP7+$Y7+$YOOQP7+$u7+$uO#kQdO7+$uO#kQdO,59{O1nQ[O'#EXO1xQWO1G/fOOQS1G/f1G/fO1xQWO1G/fO2QQtO'#ETO2uQdO'#EeO3PQWO,59ZO3UQXO'#EhO3]QWO,59jO3bQpO7+$uOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%V7+%VO3jQWO1G/PO#kQdO1G/oOOQO1G/u1G/uOOQO1G/q1G/qO3oQWO,5:tOOQO-E8W-E8WO3}QXO1G/vOOQS7+%h7+%hO4UQYO'#CsO%|QWO'#EZO4^QdO,5:hOOQS,5:h,5:hO4lQpO<<HaO4tQtO1G/gOOQO,5:s,5:sO5XQ[O,5:sOOQO-E8V-E8VOOQS7+%Q7+%QO5cQWO7+%QOOQS-E8R-E8RO#kQdO'#EUO5kQWO,5;POOQT1G.u1G.uO5sQWO,5;SOOQP1G/U1G/UOOQP<<Ha<<HaOOQS7+$k7+$kO5{QdO7+%ZOOQO7+%b7+%bOOQS,5:u,5:uOOQS-E8X-E8XOOQS1G0S1G0SOOQPAN={AN={O6SQtO'#EWO#kQdO'#EWO6}QdO7+%ROOQO7+%R7+%ROOQO1G0_1G0_OOQS<<Hl<<HlO7_QdO,5:pOOQO-E8S-E8SOOQO<<Hu<<HuO7iQtO,5:rOOQS-E8U-E8UOOQO<<Hm<<Hm\",\n  stateData: \"8j~O#TOSROS~OUWOXWO]TO^TOtUOxVO!Y_O!ZXO!gYO!iZO!k[O!n]O!t^O#RPO#WRO~O#RcO~O]hO^hOpfOtiOxjO|kO!PmO#PlO#WeO~O!RnO~P!`O`sO#QqO#RpO~O#RuO~O#RwO~OQ!QObzOf!QOh!QOn!PO#Q}O#RyO#Z{O~Ob!SO!b!UO!e!VO#R!RO!R#]P~Oh![On!PO#R!ZO~O#R!^O~Ob!SO!b!UO!e!VO#R!RO~O!W#]P~P$VOUWOXWO]TO^TOtUOxVO#RPO#WRO~OpfO!RnO~O`!hO#QqO#RpO~OQ!pOUWOXWO]TO^TOtUOxVO!Y_O!ZXO!gYO!iZO!k[O!n]O!t^O#R!oO#WRO~O!Q!qO~P&^Ob!tO~Ob!uO~Ov!vOz!wO~OP!yObgXjgX!WgX!bgX!egX#RgXagXQgXfgXhgXngXpgX#QgX#ZgXvgX!QgX!VgX~Ob!SOj!zO!b!UO!e!VO#R!RO!W#]P~Ob!}O~Ob!SO!b!UO!e!VO#R#OO~Op#SO!`#RO!R#]X!W#]X~Ob#VO~Oj!zO!W#XO~O!W#YO~Oh#ZOn!PO~O!R#[O~O!RnO!`#RO~O!RnO!W#_O~O]hO^hOtiOxjO|kO!PmO#PlO#WeO~Op!ya!R!yaa!ya~P+_Ov#aOz#bO~O]hO^hOtiOxjO#WeO~Op{i|{i!P{i!R{i#P{ia{i~P,`Op}i|}i!P}i!R}i#P}ia}i~P,`Op!Oi|!Oi!P!Oi!R!Oi#P!Oia!Oi~P,`O]WX]!UX^WXpWXtWXxWX|WX!PWX!RWX#PWX#WWX~O]#cO~O!Q#fO!W#dO~O!Q#fO~P&^Oa#XP~P#kOa#[P~P%_Oa#nOj!zO~O!W#pO~Oh#qOo#qO~O]!^Xa![X!`![X~O]#rO~Oa#sO!`#RO~Op#SO!R#]a!W#]a~O!`#ROp!aa!R!aa!W!aaa!aa~O!W#xO~O!Q#|O!q#zO!r#zO#Z#yO~O!Q!{X!W!{X~P&^O!Q$SO!W#dO~Oj!zOQ!wXa!wXb!wXf!wXh!wXn!wXp!wX#Q!wX#R!wX#Z!wX~Op$VOa#XX~P#kOa$XO~Oa#[X~P!`Oa$ZO~Oj!zOv$[O~Oa$]O~O!`#ROp!|a!R!|a!W!|a~Oa$_O~P+_OP!yO!RgX~O!Q$bO!q#zO!r#zO#Z#yO~Oj!zOv$cO~Oj!zOp$eO!V$gO!Q!Ti!W!Ti~P#kO!Q!{a!W!{a~P&^O!Q$iO!W#dO~Op$VOa#Xa~OpfOa#[a~Oa$lO~P#kOj!zOQ!zXb!zXf!zXh!zXn!zXp!zX!Q!zX!V!zX!W!zX#Q!zX#R!zX#Z!zX~Op$eO!V$oO!Q!Tq!W!Tq~P#kOa!xap!xa~P#kOj!zOQ!zab!zaf!zah!zan!zap!za!Q!za!V!za!W!za#Q!za#R!za#Z!za~Oo#Zj!Pj~\",\n  goto: \",O#_PPPPP#`P#h#vP#h$U#hPP$[PPP$b$k$kP$}P$kP$k%e%wPPP&a&g#hP&mP#hP&sP#hP#h#hPPP&y']'iPP#`PP'o'o'y'oP'oP'o'oP#`P#`P#`P'|#`P(P(SPP#`P#`(V(e(s(y)T)Z)e)kPPPPPP)q)yP*e*hP+^+a+j]`Obn!s#d$QiWObfklmn!s!u#V#d$QiQObfklmn!s!u#V#d$QQdRR!ceQrTR!ghQ!gsQ!|!OR#`!hq!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jp!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jT#z#[#{q!OXZz!t!w!z#b#c#i#r$O$V$^$e$f$jp!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jQ![[R#Z!]QtTR!ihQ!gtR#`!iQvUR!jiQxVR!kjQoSQ!fgQ#W!XQ#^!`Q#_!aR$`#zQ!rnQ#g!sQ$P#dR$h$QX!pn!s#d$Qa!WY^_|!S!U#R#SR#P!SR!][R!_]R#]!_QbOU!bb!s$QQ!snR$Q#dQ#i!tU$U#i$^$jQ$^#rR$j$VQ$W#iR$k$WQgSS!eg$YR$Y#kQ$f$OR$n$fQ#e!rS$R#e$TR$T#gQ#T!TR#v#TQ#{#[R$a#{]aObn!s#d$Q[SObn!s#d$QQ!dfQ!lkQ!mlQ!nmQ#k!uR#w#VR#j!tQ|XQ!YZQ!xz[#h!t#i#r$V$^$jQ#m!wQ#o!zQ#}#bQ$O#cS$d$O$fR$m$eR#l!uQ!XYQ!a_R!{|U!TY_|Q!`^Q#Q!SQ#U!UQ#t#RR#u#S\",\n  nodeNames: \"⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent , PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList from to SupportsStatement supports AtRule\",\n  maxTerm: 106,\n  nodeProps: [\n    [\"openedBy\", 17,\"(\",48,\"{\"],\n    [\"closedBy\", 18,\")\",49,\"}\"]\n  ],\n  propSources: [cssHighlighting],\n  skippedNodes: [0,3],\n  repeatNodeCount: 8,\n  tokenData: \"Ay~R![OX$wX^%]^p$wpq%]qr(crs+}st,otu2Uuv$wvw2rwx2}xy3jyz3uz{3z{|4_|}8U}!O8a!O!P8x!P!Q9Z!Q![;e![!]<Y!]!^<x!^!_$w!_!`=T!`!a=`!a!b$w!b!c>O!c!}$w!}#O?[#O#P$w#P#Q?g#Q#R2U#R#T$w#T#U?r#U#c$w#c#d@q#d#o$w#o#pAQ#p#q2U#q#rA]#r#sAh#s#y$w#y#z%]#z$f$w$f$g%]$g#BY$w#BY#BZ%]#BZ$IS$w$IS$I_%]$I_$I|$w$I|$JO%]$JO$JT$w$JT$JU%]$JU$KV$w$KV$KW%]$KW&FU$w&FU&FV%]&FV~$wW$zQOy%Qz~%QW%VQoWOy%Qz~%Q~%bf#T~OX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q~&}f#T~oWOX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q^(fSOy%Qz#]%Q#]#^(r#^~%Q^(wSoWOy%Qz#a%Q#a#b)T#b~%Q^)YSoWOy%Qz#d%Q#d#e)f#e~%Q^)kSoWOy%Qz#c%Q#c#d)w#d~%Q^)|SoWOy%Qz#f%Q#f#g*Y#g~%Q^*_SoWOy%Qz#h%Q#h#i*k#i~%Q^*pSoWOy%Qz#T%Q#T#U*|#U~%Q^+RSoWOy%Qz#b%Q#b#c+_#c~%Q^+dSoWOy%Qz#h%Q#h#i+p#i~%Q^+wQ!VUoWOy%Qz~%Q~,QUOY+}Zr+}rs,ds#O+}#O#P,i#P~+}~,iOh~~,lPO~+}_,tWtPOy%Qz!Q%Q!Q![-^![!c%Q!c!i-^!i#T%Q#T#Z-^#Z~%Q^-cWoWOy%Qz!Q%Q!Q![-{![!c%Q!c!i-{!i#T%Q#T#Z-{#Z~%Q^.QWoWOy%Qz!Q%Q!Q![.j![!c%Q!c!i.j!i#T%Q#T#Z.j#Z~%Q^.qWfUoWOy%Qz!Q%Q!Q![/Z![!c%Q!c!i/Z!i#T%Q#T#Z/Z#Z~%Q^/bWfUoWOy%Qz!Q%Q!Q![/z![!c%Q!c!i/z!i#T%Q#T#Z/z#Z~%Q^0PWoWOy%Qz!Q%Q!Q![0i![!c%Q!c!i0i!i#T%Q#T#Z0i#Z~%Q^0pWfUoWOy%Qz!Q%Q!Q![1Y![!c%Q!c!i1Y!i#T%Q#T#Z1Y#Z~%Q^1_WoWOy%Qz!Q%Q!Q![1w![!c%Q!c!i1w!i#T%Q#T#Z1w#Z~%Q^2OQfUoWOy%Qz~%QY2XSOy%Qz!_%Q!_!`2e!`~%QY2lQzQoWOy%Qz~%QX2wQXPOy%Qz~%Q~3QUOY2}Zw2}wx,dx#O2}#O#P3d#P~2}~3gPO~2}_3oQbVOy%Qz~%Q~3zOa~_4RSUPjSOy%Qz!_%Q!_!`2e!`~%Q_4fUjS!PPOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%Q^4}SoWOy%Qz!Q%Q!Q![5Z![~%Q^5bWoW#ZUOy%Qz!Q%Q!Q![5Z![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%Q^6PWoWOy%Qz{%Q{|6i|}%Q}!O6i!O!Q%Q!Q![6z![~%Q^6nSoWOy%Qz!Q%Q!Q![6z![~%Q^7RSoW#ZUOy%Qz!Q%Q!Q![6z![~%Q^7fYoW#ZUOy%Qz!O%Q!O!P5Z!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%Q_8ZQpVOy%Qz~%Q^8fUjSOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%Q_8}S#WPOy%Qz!Q%Q!Q![5Z![~%Q~9`RjSOy%Qz{9i{~%Q~9nSoWOy9iyz9zz{:o{~9i~9}ROz9zz{:W{~9z~:ZTOz9zz{:W{!P9z!P!Q:j!Q~9z~:oOR~~:tUoWOy9iyz9zz{:o{!P9i!P!Q;W!Q~9i~;_QoWR~Oy%Qz~%Q^;jY#ZUOy%Qz!O%Q!O!P5Z!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QX<_S]POy%Qz![%Q![!]<k!]~%QX<rQ^PoWOy%Qz~%Q_<}Q!WVOy%Qz~%QY=YQzQOy%Qz~%QX=eS|POy%Qz!`%Q!`!a=q!a~%QX=xQ|PoWOy%Qz~%QX>RUOy%Qz!c%Q!c!}>e!}#T%Q#T#o>e#o~%QX>lY!YPoWOy%Qz}%Q}!O>e!O!Q%Q!Q![>e![!c%Q!c!}>e!}#T%Q#T#o>e#o~%QX?aQxPOy%Qz~%Q^?lQvUOy%Qz~%QX?uSOy%Qz#b%Q#b#c@R#c~%QX@WSoWOy%Qz#W%Q#W#X@d#X~%QX@kQ!`PoWOy%Qz~%QX@tSOy%Qz#f%Q#f#g@d#g~%QXAVQ!RPOy%Qz~%Q_AbQ!QVOy%Qz~%QZAmS!PPOy%Qz!_%Q!_!`2e!`~%Q\",\n  tokenizers: [descendant, unitToken, identifiers, 0, 1, 2, 3],\n  topRules: {\"StyleSheet\":[0,4]},\n  specialized: [{term: 94, get: value => spec_callee[value] || -1},{term: 56, get: value => spec_AtKeyword[value] || -1},{term: 95, get: value => spec_identifier[value] || -1}],\n  tokenPrec: 1078\n});\n\nexport { parser };\n","import { parser } from '@lezer/css';\nimport { syntaxTree, LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\nlet _properties = null;\nfunction properties() {\n    if (!_properties && typeof document == \"object\" && document.body) {\n        let names = [];\n        for (let prop in document.body.style) {\n            if (!/[A-Z]|^-|^(item|length)$/.test(prop))\n                names.push(prop);\n        }\n        _properties = names.sort().map(name => ({ type: \"property\", label: name }));\n    }\n    return _properties || [];\n}\nconst pseudoClasses = /*@__PURE__*/[\n    \"active\", \"after\", \"before\", \"checked\", \"default\",\n    \"disabled\", \"empty\", \"enabled\", \"first-child\", \"first-letter\",\n    \"first-line\", \"first-of-type\", \"focus\", \"hover\", \"in-range\",\n    \"indeterminate\", \"invalid\", \"lang\", \"last-child\", \"last-of-type\",\n    \"link\", \"not\", \"nth-child\", \"nth-last-child\", \"nth-last-of-type\",\n    \"nth-of-type\", \"only-of-type\", \"only-child\", \"optional\", \"out-of-range\",\n    \"placeholder\", \"read-only\", \"read-write\", \"required\", \"root\",\n    \"selection\", \"target\", \"valid\", \"visited\"\n].map(name => ({ type: \"class\", label: name }));\nconst values = /*@__PURE__*/[\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"after-white-space\",\n    \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\",\n    \"antialiased\", \"appworkspace\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\",\n    \"avoid-page\", \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\",\n    \"bidi-override\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"capitalize\",\n    \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\",\n    \"cjk-decimal\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"color\", \"color-burn\",\n    \"color-dodge\", \"column\", \"column-reverse\", \"compact\", \"condensed\", \"contain\", \"content\",\n    \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\",\n    \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\", \"destination-in\",\n    \"destination-out\", \"destination-over\", \"difference\", \"disc\", \"discard\", \"disclosure-closed\",\n    \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\",\n    \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\",\n    \"ethiopic-abegede-gez\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-gez\", \"ew-resize\", \"exclusion\",\n    \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\",\n    \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\", \"forwards\", \"from\",\n    \"geometricPrecision\", \"graytext\", \"grid\", \"groove\", \"hand\", \"hard-light\", \"help\", \"hidden\", \"hide\",\n    \"higher\", \"highlight\", \"highlighttext\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\",\n    \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-grid\",\n    \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"justify\", \"keep-all\",\n    \"landscape\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\", \"line-through\", \"linear\",\n    \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\",\n    \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lowercase\", \"ltr\", \"luminosity\", \"manipulation\",\n    \"match\", \"matrix\", \"matrix3d\", \"medium\", \"menu\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"n-resize\", \"narrower\",\n    \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\",\n    \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\",\n    \"oblique\", \"opacity\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"outset\", \"outside\",\n    \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\",\n    \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\",\n    \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\",\n    \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\",\n    \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\",\n    \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"saturation\",\n    \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\", \"scroll\", \"scrollbar\", \"scroll-position\",\n    \"se-resize\", \"self-start\", \"self-end\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\",\n    \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\",\n    \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"source-atop\", \"source-in\", \"source-out\",\n    \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\", \"start\",\n    \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\", \"subpixel-antialiased\", \"svg_masks\",\n    \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\", \"table-caption\", \"table-cell\",\n    \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\",\n    \"table-row-group\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thick\", \"thin\",\n    \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"to\", \"top\",\n    \"transform\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\",\n    \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\", \"upper-latin\",\n    \"uppercase\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\",\n    \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\",\n    \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\"\n].map(name => ({ type: \"keyword\", label: name })).concat(/*@__PURE__*/[\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n].map(name => ({ type: \"constant\", label: name })));\nconst tags = /*@__PURE__*/[\n    \"a\", \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"blockquote\", \"body\",\n    \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"dd\", \"del\",\n    \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\",\n    \"form\", \"header\", \"hgroup\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"html\", \"i\", \"iframe\",\n    \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"meter\", \"nav\", \"ol\", \"output\",\n    \"p\", \"pre\", \"ruby\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"sub\", \"summary\",\n    \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\", \"ul\"\n].map(name => ({ type: \"type\", label: name }));\nconst identifier = /^[\\w-]*/;\n/**\nCSS property and value keyword completion source.\n*/\nconst cssCompletionSource = context => {\n    let { state, pos } = context, node = syntaxTree(state).resolveInner(pos, -1);\n    if (node.name == \"PropertyName\")\n        return { from: node.from, options: properties(), validFor: identifier };\n    if (node.name == \"ValueName\")\n        return { from: node.from, options: values, validFor: identifier };\n    if (node.name == \"PseudoClassName\")\n        return { from: node.from, options: pseudoClasses, validFor: identifier };\n    if (node.name == \"TagName\") {\n        for (let { parent } = node; parent; parent = parent.parent)\n            if (parent.name == \"Block\")\n                return { from: node.from, options: properties(), validFor: identifier };\n        return { from: node.from, options: tags, validFor: identifier };\n    }\n    if (!context.explicit)\n        return null;\n    let above = node.resolve(pos), before = above.childBefore(pos);\n    if (before && before.name == \":\" && above.name == \"PseudoClassSelector\")\n        return { from: pos, options: pseudoClasses, validFor: identifier };\n    if (before && before.name == \":\" && above.name == \"Declaration\" || above.name == \"ArgList\")\n        return { from: pos, options: values, validFor: identifier };\n    if (above.name == \"Block\")\n        return { from: pos, options: properties(), validFor: identifier };\n    return null;\n};\n\n/**\nA language provider based on the [Lezer CSS\nparser](https://github.com/lezer-parser/css), extended with\nhighlighting and indentation information.\n*/\nconst cssLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Declaration: /*@__PURE__*/continuedIndent()\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Block: foldInside\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"-\"\n    }\n});\n/**\nLanguage support for CSS.\n*/\nfunction css() {\n    return new LanguageSupport(cssLanguage, cssLanguage.data.of({ autocomplete: cssCompletionSource }));\n}\n\nexport { css, cssCompletionSource, cssLanguage };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst noSemi = 281,\n  incdec = 1,\n  incdecPrefix = 2,\n  templateContent = 282,\n  InterpolationStart = 3,\n  templateEnd = 283,\n  insertSemi = 284,\n  TSExtends = 4,\n  spaces = 286,\n  newline = 287,\n  LineComment = 5,\n  BlockComment = 6,\n  Dialect_ts = 1;\n\n/* Hand-written tokenizers for JavaScript tokens that can't be\n   expressed by lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,\n               8201, 8202, 8232, 8233, 8239, 8287, 12288];\n\nconst braceR = 125, braceL = 123, semicolon = 59, slash = 47, star = 42,\n      plus = 43, minus = 45, dollar = 36, backtick = 96, backslash = 92;\n\nconst trackNewline = new ContextTracker({\n  start: false,\n  shift(context, term) {\n    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline\n  },\n  strict: false\n});\n\nconst insertSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if ((next == braceR || next == -1 || stack.context) && stack.canShift(insertSemi))\n    input.acceptToken(insertSemi);\n}, {contextual: true, fallback: true});\n\nconst noSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input, after;\n  if (space.indexOf(next) > -1) return\n  if (next == slash && ((after = input.peek(1)) == slash || after == star)) return\n  if (next != braceR && next != semicolon && next != -1 && !stack.context && stack.canShift(noSemi))\n    input.acceptToken(noSemi);\n}, {contextual: true});\n\nconst incdecToken = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == plus || next == minus) {\n    input.advance();\n    if (next == input.next) {\n      input.advance();\n      let mayPostfix = !stack.context && stack.canShift(incdec);\n      input.acceptToken(mayPostfix ? incdec : incdecPrefix);\n    }\n  }\n}, {contextual: true});\n\nconst template = new ExternalTokenizer(input => {\n  for (let afterDollar = false, i = 0;; i++) {\n    let {next} = input;\n    if (next < 0) {\n      if (i) input.acceptToken(templateContent);\n      break\n    } else if (next == backtick) {\n      if (i) input.acceptToken(templateContent);\n      else input.acceptToken(templateEnd, 1);\n      break\n    } else if (next == braceL && afterDollar) {\n      if (i == 1) input.acceptToken(InterpolationStart, 1);\n      else input.acceptToken(templateContent, -1);\n      break\n    } else if (next == 10 /* \"\\n\" */ && i) {\n      // Break up template strings on lines, to avoid huge tokens\n      input.advance();\n      input.acceptToken(templateContent);\n      break\n    } else if (next == backslash) {\n      input.advance();\n    }\n    afterDollar = next == dollar;\n    input.advance();\n  }\n});\n\nfunction tsExtends(value, stack) {\n  return value == \"extends\" && stack.dialectEnabled(Dialect_ts) ? TSExtends : -1\n}\n\nconst jsHighlight = styleTags({\n  \"get set async static\": tags.modifier,\n  \"for while do if else switch try catch finally return throw break continue default case\": tags.controlKeyword,\n  \"in of await yield void typeof delete instanceof\": tags.operatorKeyword,\n  \"let var const function class extends\": tags.definitionKeyword,\n  \"import export from\": tags.moduleKeyword,\n  \"with debugger as new\": tags.keyword,\n  TemplateString: tags.special(tags.string),\n  Super: tags.atom,\n  BooleanLiteral: tags.bool,\n  this: tags.self,\n  null: tags.null,\n  Star: tags.modifier,\n  VariableName: tags.variableName,\n  \"CallExpression/VariableName TaggedTemplateExpression/VariableName\": tags.function(tags.variableName),\n  VariableDefinition: tags.definition(tags.variableName),\n  Label: tags.labelName,\n  PropertyName: tags.propertyName,\n  PrivatePropertyName: tags.special(tags.propertyName),\n  \"CallExpression/MemberExpression/PropertyName\": tags.function(tags.propertyName),\n  \"FunctionDeclaration/VariableDefinition\": tags.function(tags.definition(tags.variableName)),\n  \"ClassDeclaration/VariableDefinition\": tags.definition(tags.className),\n  PropertyDefinition: tags.definition(tags.propertyName),\n  PrivatePropertyDefinition: tags.definition(tags.special(tags.propertyName)),\n  UpdateOp: tags.updateOperator,\n  LineComment: tags.lineComment,\n  BlockComment: tags.blockComment,\n  Number: tags.number,\n  String: tags.string,\n  ArithOp: tags.arithmeticOperator,\n  LogicOp: tags.logicOperator,\n  BitOp: tags.bitwiseOperator,\n  CompareOp: tags.compareOperator,\n  RegExp: tags.regexp,\n  Equals: tags.definitionOperator,\n  \"Arrow : Spread\": tags.punctuation,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace,\n  \"InterpolationStart InterpolationEnd\": tags.special(tags.brace),\n  \".\": tags.derefOperator,\n  \", ;\": tags.separator,\n\n  TypeName: tags.typeName,\n  TypeDefinition: tags.definition(tags.typeName),\n  \"type enum interface implements namespace module declare\": tags.definitionKeyword,\n  \"abstract global Privacy readonly override\": tags.modifier,\n  \"is keyof unique infer\": tags.operatorKeyword,\n\n  JSXAttributeValue: tags.attributeValue,\n  JSXText: tags.content,\n  \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": tags.angleBracket,\n  \"JSXIdentifier JSXNameSpacedName\": tags.tagName,\n  \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": tags.attributeName\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,export:18, as:23, from:29, default:32, async:37, function:38, this:48, true:56, false:56, void:66, typeof:70, null:86, super:88, new:122, await:139, yield:141, delete:142, class:152, extends:154, public:197, private:197, protected:197, readonly:199, instanceof:220, in:222, const:224, import:256, keyof:307, unique:311, infer:317, is:351, abstract:371, implements:373, type:375, let:378, var:380, interface:387, enum:391, namespace:397, module:399, declare:403, global:407, for:428, of:437, while:440, with:444, do:448, if:452, else:454, switch:458, case:464, try:470, catch:474, finally:478, return:482, throw:486, break:490, continue:494, debugger:498};\nconst spec_word = {__proto__:null,async:109, get:111, set:113, public:161, private:161, protected:161, static:163, abstract:165, override:167, readonly:173, new:355};\nconst spec_LessThan = {__proto__:null,\"<\":129};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$4|O`QYOOO'QQ$IfO'#ChO'XOSO'#DVO)dQYO'#D]O)tQYO'#DhO){QYO'#DrO-xQYO'#DxOOQO'#E]'#E]O.]QWO'#E[O.bQWO'#E[OOQ$IU'#Ef'#EfO0aQ$IfO'#ItO2wQ$IfO'#IuO3eQWO'#EzO3jQpO'#FaOOQ$IU'#FS'#FSO3rO!bO'#FSO4QQWO'#FhO5_QWO'#FgOOQ$IU'#Iu'#IuOOQ$IS'#It'#ItOOQQ'#J^'#J^O5dQWO'#HpO5iQ$I[O'#HqOOQQ'#Ih'#IhOOQQ'#Hr'#HrQ`QYOOO){QYO'#DjO5qQWO'#G[O5vQ#tO'#CmO6UQWO'#EZO6aQWO'#EgO6fQ#tO'#FRO7QQWO'#G[O7VQWO'#G`O7bQWO'#G`O7pQWO'#GcO7pQWO'#GdO7pQWO'#GfO5qQWO'#GiO8aQWO'#GlO9oQWO'#CdO:PQWO'#GyO:XQWO'#HPO:XQWO'#HRO`QYO'#HTO:XQWO'#HVO:XQWO'#HYO:^QWO'#H`O:cQ$I]O'#HfO){QYO'#HhO:nQ$I]O'#HjO:yQ$I]O'#HlO5iQ$I[O'#HnO){QYO'#DWOOOS'#Ht'#HtO;UOSO,59qOOQ$IU,59q,59qO=gQbO'#ChO=qQYO'#HuO>UQWO'#IvO@TQbO'#IvO'dQYO'#IvO@[QWO,59wO@rQ&jO'#DbOAkQWO'#E]OAxQWO'#JROBTQWO'#JQOBTQWO'#JQOB]QWO,5:yOBbQWO'#JPOBiQWO'#DyO5vQ#tO'#EZOBwQWO'#EZOCSQ`O'#FROOQ$IU,5:S,5:SOC[QYO,5:SOEYQ$IfO,5:^OEvQWO,5:dOFaQ$I[O'#JOO7VQWO'#I}OFhQWO'#I}OFpQWO,5:xOFuQWO'#I}OGTQYO,5:vOITQWO'#EWOJ_QWO,5:vOKnQWO'#DlOKuQYO'#DqOLPQ&jO,5;PO){QYO,5;POOQQ'#Er'#ErOOQQ'#Et'#EtO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;RO){QYO,5;ROOQQ'#Ex'#ExOLXQYO,5;cOOQ$IU,5;h,5;hOOQ$IU,5;i,5;iONXQWO,5;iOOQ$IU,5;j,5;jO){QYO'#IPON^Q$I[O,5<TONxQWO,5;RO){QYO,5;fO! bQpO'#JVO! PQpO'#JVO! iQpO'#JVO! zQpO,5;qOOOO,5;{,5;{O!!YQYO'#FcOOOO'#IO'#IOO3rO!bO,5;nO!!aQpO'#FeOOQ$IU,5;n,5;nO!!}Q,UO'#CrOOQ$IU'#Cu'#CuO!#bQWO'#CuO!#gOSO'#CyO!$TQ#tO,5<QO!$[QWO,5<SO!%hQWO'#FrO!%uQWO'#FsO!%zQWO'#FwO!&yQ&jO'#F{O!'lQ,UO'#IqOOQ$IU'#Iq'#IqO!'vQWO'#IpO!(UQWO'#IoOOQ$IU'#Cs'#CsOOQ$IU'#C|'#C|O!(^QWO'#DOOJdQWO'#FjOJdQWO'#FlO!(cQWO'#FnO!(hQWO'#FoO!(mQWO'#FuOJdQWO'#FzO!(rQWO'#E^O!)ZQWO,5<RO`QYO,5>[OOQQ'#Ik'#IkOOQQ,5>],5>]OOQQ-E;p-E;pO!+VQ$IfO,5:UOOQ$IS'#Cp'#CpO!+vQ#tO,5<vOOQO'#Cf'#CfO!,XQWO'#CqO!,aQ$I[O'#IlO5_QWO'#IlO:^QWO,59XO!,rQpO,59XO!,zQ#tO,59XO5vQ#tO,59XO!-VQWO,5:vO!-_QWO'#GxO!-mQWO'#JbO){QYO,5;kO!-uQ&jO,5;mO!-zQWO,5=cO!.PQWO,5=cO!.UQWO,5=cO5iQ$I[O,5=cO5qQWO,5<vO!.dQWO'#E_O!.xQ&jO'#E`OOQ$IS'#JP'#JPO!/ZQ$I[O'#J_O5iQ$I[O,5<zO7pQWO,5=QOOQO'#Cr'#CrO!/fQpO,5<}O!/nQ#tO,5=OO!/yQWO,5=QO!0OQ`O,5=TO:^QWO'#GnO5qQWO'#GpO!0WQWO'#GpO5vQ#tO'#GsO!0]QWO'#GsOOQQ,5=W,5=WO!0bQWO'#GtO!0jQWO'#CmO!0oQWO,59OO!0yQWO,59OO!2{QYO,59OOOQQ,59O,59OO!3YQ$I[O,59OO){QYO,59OO!3eQYO'#G{OOQQ'#G|'#G|OOQQ'#G}'#G}O`QYO,5=eO!3uQWO,5=eO){QYO'#DxO`QYO,5=kO`QYO,5=mO!3zQWO,5=oO`QYO,5=qO!4PQWO,5=tO!4UQYO,5=zOOQQ,5>Q,5>QO){QYO,5>QO5iQ$I[O,5>SOOQQ,5>U,5>UO!8VQWO,5>UOOQQ,5>W,5>WO!8VQWO,5>WOOQQ,5>Y,5>YO!8[Q`O,59rOOOS-E;r-E;rOOQ$IU1G/]1G/]O!8aQbO,5>aO'dQYO,5>aOOQO,5>f,5>fO!8kQYO'#HuOOQO-E;s-E;sO!8xQWO,5?bO!9QQbO,5?bO!9XQWO,5?lOOQ$IU1G/c1G/cO!9aQpO'#DTOOQO'#Ix'#IxO){QYO'#IxO!:OQpO'#IxO!:mQpO'#DcO!;OQ&jO'#DcO!=ZQYO'#DcO!=bQWO'#IwO!=jQWO,59|O!=oQWO'#EaO!=}QWO'#JSO!>VQWO,5:zO!>mQ&jO'#DcO){QYO,5?mO!>wQWO'#HzOOQO-E;x-E;xO!9XQWO,5?lOOQ$IS1G0e1G0eO!@TQ&jO'#D|OOQ$IU,5:e,5:eO){QYO,5:eOITQWO,5:eO!@[QWO,5:eO:^QWO,5:uO!,rQpO,5:uO!,zQ#tO,5:uO5vQ#tO,5:uOOQ$IU1G/n1G/nOOQ$IU1G0O1G0OOOQ$IS'#EV'#EVO){QYO,5?jO!@gQ$I[O,5?jO!@xQ$I[O,5?jO!APQWO,5?iO!AXQWO'#H|O!APQWO,5?iOOQ$IS1G0d1G0dO7VQWO,5?iOOQ$IU1G0b1G0bO!AsQ$IfO1G0bO!BdQ$IdO,5:rOOQ$IU'#Fq'#FqO!CQQ$IfO'#IqOGTQYO1G0bO!EPQ#tO'#IyO!EZQWO,5:WO!E`QbO'#IzO){QYO'#IzO!EjQWO,5:]OOQ$IU'#DT'#DTOOQ$IU1G0k1G0kO!EoQWO1G0kO!HQQ$IfO1G0mO!HXQ$IfO1G0mO!JlQ$IfO1G0mO!JsQ$IfO1G0mO!LzQ$IfO1G0mO!M_Q$IfO1G0mO#!OQ$IfO1G0mO#!VQ$IfO1G0mO#$jQ$IfO1G0mO#$qQ$IfO1G0mO#&fQ$IfO1G0mO#)`Q7^O'#ChO#+ZQ7^O1G0}O#-UQ7^O'#IuOOQ$IU1G1T1G1TO#-iQ$IfO,5>kOOQ$IS-E;}-E;}O#.YQ$IfO1G0mOOQ$IU1G0m1G0mO#0[Q$IfO1G1QO#0{QpO,5;sO#1QQpO,5;tO#1VQpO'#F[O#1kQWO'#FZOOQO'#JW'#JWOOQO'#H}'#H}O#1pQpO1G1]OOQ$IU1G1]1G1]OOOO1G1f1G1fO#2OQ7^O'#ItO#2YQWO,5;}OLXQYO,5;}OOOO-E;|-E;|OOQ$IU1G1Y1G1YOOQ$IU,5<P,5<PO#2_QpO,5<POOQ$IU,59a,59aOITQWO'#C{OOOS'#Hs'#HsO#2dOSO,59eOOQ$IU,59e,59eO){QYO1G1lO!(hQWO'#IRO#2oQWO,5<eOOQ$IU,5<b,5<bOOQO'#GV'#GVOJdQWO,5<pOOQO'#GX'#GXOJdQWO,5<rOJdQWO,5<tOOQO1G1n1G1nO#2zQ`O'#CpO#3_Q`O,5<^O#3fQWO'#JZO5qQWO'#JZO#3tQWO,5<`OJdQWO,5<_O#3yQ`O'#FqO#4WQ`O'#J[O#4bQWO'#J[OITQWO'#J[O#4gQWO,5<cOOQ$IS'#Dg'#DgO#4lQWO'#FtO#4wQpO'#F|O!&tQ&jO'#F|O!&tQ&jO'#GOO#5YQWO'#GPO!(mQWO'#GSO#5_Q$I[O'#ITO#5jQ&jO,5<gOOQ$IU,5<g,5<gO#5qQ&jO'#F|O#6PQ&jO'#F}O#6XQ&jO'#F}OOQ$IU,5<u,5<uOJdQWO,5?[OJdQWO,5?[O#6^QWO'#IUO#6iQWO,5?ZOOQ$IU'#Ch'#ChO#7]Q#tO,59jOOQ$IU,59j,59jO#8OQ#tO,5<UO#8qQ#tO,5<WO#8{QWO,5<YOOQ$IU,5<Z,5<ZO#9QQWO,5<aO#9VQ#tO,5<fOGTQYO1G1mO#9gQWO1G1mOOQQ1G3v1G3vOOQ$IU1G/p1G/pONXQWO1G/pOOQQ1G2b1G2bOITQWO1G2bO){QYO1G2bOITQWO1G2bO#9lQWO1G2bO#9zQWO,59]O#;TQWO'#EWOOQ$IS,5?W,5?WO#;_Q$I[O,5?WOOQQ1G.s1G.sO:^QWO1G.sO!,rQpO1G.sO!,zQ#tO1G.sO#;pQWO1G0bO#;uQWO'#ChO#<QQWO'#JcO#<YQWO,5=dO#<_QWO'#JcO#<dQWO'#JcO#<lQWO'#I^O#<zQWO,5?|O#=SQbO1G1VOOQ$IU1G1X1G1XO5qQWO1G2}O#=ZQWO1G2}O#=`QWO1G2}O#=eQWO1G2}OOQQ1G2}1G2}O#=jQ#tO1G2bO7VQWO'#JQO7VQWO'#EaO7VQWO'#IWO#={Q$I[O,5?yOOQQ1G2f1G2fO!/yQWO1G2lOITQWO1G2iO#>WQWO1G2iOOQQ1G2j1G2jOITQWO1G2jO#>]QWO1G2jO#>eQ&jO'#GhOOQQ1G2l1G2lO!&tQ&jO'#IYO!0OQ`O1G2oOOQQ1G2o1G2oOOQQ,5=Y,5=YO#>mQ#tO,5=[O5qQWO,5=[O#5YQWO,5=_O5_QWO,5=_O!,rQpO,5=_O!,zQ#tO,5=_O5vQ#tO,5=_O#?OQWO'#JaO#?ZQWO,5=`OOQQ1G.j1G.jO#?`Q$I[O1G.jO#?kQWO1G.jO#?pQWO1G.jO5iQ$I[O1G.jO#?xQbO,5@OO#@SQWO,5@OO#@_QYO,5=gO#@fQWO,5=gO7VQWO,5@OOOQQ1G3P1G3PO`QYO1G3POOQQ1G3V1G3VOOQQ1G3X1G3XO:XQWO1G3ZO#@kQYO1G3]O#DfQYO'#H[OOQQ1G3`1G3`O#DsQWO'#HbO:^QWO'#HdOOQQ1G3f1G3fO#D{QYO1G3fO5iQ$I[O1G3lOOQQ1G3n1G3nOOQ$IS'#Fx'#FxO5iQ$I[O1G3pO5iQ$I[O1G3rOOOS1G/^1G/^O#HyQ`O,5<TO#IRQbO1G3{OOQO1G4Q1G4QO){QYO,5>aO#I]QWO1G4|O#IeQWO1G5WO#ImQWO,5?dOLXQYO,5:{O7VQWO,5:{O:^QWO,59}OLXQYO,59}O!,rQpO,59}O#IrQ7^O,59}OOQO,5:{,5:{O#I|Q&jO'#HvO#JdQWO,5?cOOQ$IU1G/h1G/hO#JlQ&jO'#H{O#KQQWO,5?nOOQ$IS1G0f1G0fO!;OQ&jO,59}O#KYQbO1G5XO7VQWO,5>fOOQ$IS'#ES'#ESO#KdQ$ItO'#ETO!?{Q&jO'#D}OOQO'#Hy'#HyO#LOQ&jO,5:hOOQ$IU,5:h,5:hO#LVQ&jO'#D}O#LhQ&jO'#D}O#LoQ&jO'#EYO#LrQ&jO'#ETO#MPQ&jO'#ETO!?{Q&jO'#ETO#MdQWO1G0PO#MiQ`O1G0POOQ$IU1G0P1G0PO){QYO1G0POITQWO1G0POOQ$IU1G0a1G0aO:^QWO1G0aO!,rQpO1G0aO!,zQ#tO1G0aO#MpQ$IfO1G5UO){QYO1G5UO#NQQ$I[O1G5UO#NcQWO1G5TO7VQWO,5>hOOQO,5>h,5>hO#NkQWO,5>hOOQO-E;z-E;zO#NcQWO1G5TO#NyQ$IfO,59jO$!xQ$IfO,5<UO$$zQ$IfO,5<WO$&|Q$IfO,5<fOOQ$IU7+%|7+%|O$)UQ$IfO7+%|O$)uQWO'#HwO$*PQWO,5?eOOQ$IU1G/r1G/rO$*XQYO'#HxO$*fQWO,5?fO$*nQbO,5?fOOQ$IU1G/w1G/wOOQ$IU7+&V7+&VO$*xQ7^O,5:^O){QYO7+&iO$+SQ7^O,5:UOOQO1G1_1G1_OOQO1G1`1G1`O$+aQMhO,5;vOLXQYO,5;uOOQO-E;{-E;{OOQ$IU7+&w7+&wOOOO7+'Q7+'QOOOO1G1i1G1iO$+lQWO1G1iOOQ$IU1G1k1G1kO$+qQ`O,59gOOOS-E;q-E;qOOQ$IU1G/P1G/PO$+xQ$IfO7+'WOOQ$IU,5>m,5>mO$,iQWO,5>mOOQ$IU1G2P1G2PP$,nQWO'#IRPOQ$IU-E<P-E<PO$-_Q#tO1G2[O$.QQ#tO1G2^O$.[Q#tO1G2`OOQ$IU1G1x1G1xO$.cQWO'#IQO$.qQWO,5?uO$.qQWO,5?uO$.yQWO,5?uO$/UQWO,5?uOOQO1G1z1G1zO$/dQ#tO1G1yO$/tQWO'#ISO$0UQWO,5?vOITQWO,5?vO$0^Q`O,5?vOOQ$IU1G1}1G1}OOQ$IS,5<h,5<hOOQ$IS,5<i,5<iO$0hQWO,5<iO#5TQWO,5<iO!,rQpO,5<hO$0mQWO,5<jOOQ$IS,5<k,5<kO$0hQWO,5<nOOQO,5>o,5>oOOQO-E<R-E<ROOQ$IU1G2R1G2RO!&tQ&jO,5<hO$0uQWO,5<iO!&tQ&jO,5<jO!&tQ&jO,5<iO$1QQ#tO1G4vO$1[Q#tO1G4vOOQO,5>p,5>pOOQO-E<S-E<SO!-uQ&jO,59lO){QYO,59lO$1iQWO1G1tOJdQWO1G1{O$1nQ$IfO7+'XOOQ$IU7+'X7+'XOGTQYO7+'XOOQ$IU7+%[7+%[O$2_Q`O'#J]O#MdQWO7+'|O$2iQWO7+'|O$2qQ`O7+'|OOQQ7+'|7+'|OITQWO7+'|O){QYO7+'|OITQWO7+'|OOQO1G.w1G.wO$2{Q$IdO'#ChO$3`Q$IdO,5<lO$4QQWO,5<lOOQ$IS1G4r1G4rOOQQ7+$_7+$_O:^QWO7+$_O!,rQpO7+$_OGTQYO7+%|O$4VQWO'#I]O$4hQWO,5?}OOQO1G3O1G3OO5qQWO,5?}O$4hQWO,5?}O$4pQWO,5?}OOQO,5>x,5>xOOQO-E<[-E<[OOQ$IU7+&q7+&qO$4uQWO7+(iO5iQ$I[O7+(iO5qQWO7+(iO$4zQWO7+(iO$5PQWO7+'|OOQ$IS,5>r,5>rOOQ$IS-E<U-E<UOOQQ7+(W7+(WO$5_Q$IdO7+(TOITQWO7+(TO$5iQ`O7+(UOOQQ7+(U7+(UOITQWO7+(UO$5pQWO'#J`O$5{QWO,5=SOOQO,5>t,5>tOOQO-E<W-E<WOOQQ7+(Z7+(ZO$6uQ&jO'#GqOOQQ1G2v1G2vOITQWO1G2vO){QYO1G2vOITQWO1G2vO$6|QWO1G2vO$7[Q#tO1G2vO5iQ$I[O1G2yO#5YQWO1G2yO5_QWO1G2yO!,rQpO1G2yO!,zQ#tO1G2yO$7mQWO'#I[O$7xQWO,5?{O$8QQ&jO,5?{OOQ$IS1G2z1G2zOOQQ7+$U7+$UO$8YQWO7+$UO5iQ$I[O7+$UO$8_QWO7+$UO){QYO1G5jO){QYO1G5kO$8dQYO1G3RO$8kQWO1G3RO$8pQYO1G3RO$8wQ$I[O1G5jOOQQ7+(k7+(kO5iQ$I[O7+(uO`QYO7+(wOOQQ'#Jf'#JfOOQQ'#I_'#I_O$9RQYO,5=vOOQQ,5=v,5=vO){QYO'#H]O$9`QWO'#H_OOQQ,5=|,5=|O7VQWO,5=|OOQQ,5>O,5>OOOQQ7+)Q7+)QOOQQ7+)W7+)WOOQQ7+)[7+)[OOQQ7+)^7+)^OOQO1G5O1G5OO$9eQ7^O1G0gO$9oQWO1G0gOOQO1G/i1G/iO$9zQ7^O1G/iO:^QWO1G/iOLXQYO'#DcOOQO,5>b,5>bOOQO-E;t-E;tOOQO,5>g,5>gOOQO-E;y-E;yO!,rQpO1G/iO:^QWO,5:iOOQO,5:o,5:oO){QYO,5:oO$:UQ$I[O,5:oO$:aQ$I[O,5:oO!,rQpO,5:iOOQO-E;w-E;wOOQ$IU1G0S1G0SO!?{Q&jO,5:iO$:oQ&jO,5:iO$;QQ$ItO,5:oO$;lQ&jO,5:iO!?{Q&jO,5:oOOQO,5:t,5:tO$;sQ&jO,5:oO$<QQ$I[O,5:oOOQ$IU7+%k7+%kO#MdQWO7+%kO#MiQ`O7+%kOOQ$IU7+%{7+%{O:^QWO7+%{O!,rQpO7+%{O$<fQ$IfO7+*pO){QYO7+*pOOQO1G4S1G4SO7VQWO1G4SO$<vQWO7+*oO$=OQ$IfO1G2[O$?QQ$IfO1G2^O$ASQ$IfO1G1yO$C[Q#tO,5>cOOQO-E;u-E;uO$CfQbO,5>dO){QYO,5>dOOQO-E;v-E;vO$CpQWO1G5QO$CxQ7^O1G0bO$FPQ7^O1G0mO$FWQ7^O1G0mO$HXQ7^O1G0mO$H`Q7^O1G0mO$JTQ7^O1G0mO$JhQ7^O1G0mO$LuQ7^O1G0mO$L|Q7^O1G0mO$N}Q7^O1G0mO% UQ7^O1G0mO%!yQ7^O1G0mO%#^Q$IfO<<JTO%#}Q7^O1G0mO%&UQ7^O'#IqO%'nQ7^O1G1QOLXQYO'#F^OOQO'#JX'#JXOOQO1G1b1G1bO%'{QWO1G1aO%(QQ7^O,5>kOOOO7+'T7+'TOOOS1G/R1G/ROOQ$IU1G4X1G4XOJdQWO7+'zO%([QWO,5>lO5qQWO,5>lOOQO-E<O-E<OO%(jQWO1G5aO%(jQWO1G5aO%(rQWO1G5aO%(}Q`O,5>nO%)XQWO,5>nOITQWO,5>nOOQO-E<Q-E<QO%)^Q`O1G5bO%)hQWO1G5bOOQ$IS1G2T1G2TO$0hQWO1G2TOOQ$IS1G2S1G2SO%)pQWO1G2UOITQWO1G2UOOQ$IS1G2Y1G2YO!,rQpO1G2SO#5TQWO1G2TO%)uQWO1G2UO%)}QWO1G2TOJdQWO7+*bOOQ$IU1G/W1G/WO%*YQWO1G/WOOQ$IU7+'`7+'`O%*_Q#tO7+'gO%*oQ$IfO<<JsOOQ$IU<<Js<<JsOITQWO'#IVO%+`QWO,5?wOOQQ<<Kh<<KhOITQWO<<KhO#MdQWO<<KhO%+hQWO<<KhO%+pQ`O<<KhOITQWO1G2WOOQQ<<Gy<<GyO:^QWO<<GyO%+zQ$IfO<<IhOOQ$IU<<Ih<<IhOOQO,5>w,5>wO%,kQWO,5>wO%,pQWO,5>wOOQO-E<Z-E<ZO%,xQWO1G5iO%,xQWO1G5iO5qQWO1G5iO%-QQWO<<LTOOQQ<<LT<<LTO%-VQWO<<LTO5iQ$I[O<<LTO){QYO<<KhOITQWO<<KhOOQQ<<Ko<<KoO$5_Q$IdO<<KoOOQQ<<Kp<<KpO$5iQ`O<<KpO%-[Q&jO'#IXO%-gQWO,5?zOLXQYO,5?zOOQQ1G2n1G2nO#KdQ$ItO'#ETO!?{Q&jO'#GrOOQO'#IZ'#IZO%-oQ&jO,5=]OOQQ,5=],5=]O%-vQ&jO'#ETO%.RQ&jO'#ETO%.jQ&jO'#ETO%.tQ&jO'#GrO%/VQWO7+(bO%/[QWO7+(bO%/dQ`O7+(bOOQQ7+(b7+(bOITQWO7+(bO){QYO7+(bOITQWO7+(bO%/nQWO7+(bOOQQ7+(e7+(eO5iQ$I[O7+(eO#5YQWO7+(eO5_QWO7+(eO!,rQpO7+(eO%/|QWO,5>vOOQO-E<Y-E<YOOQO'#Gu'#GuO%0XQWO1G5gO5iQ$I[O<<GpOOQQ<<Gp<<GpO%0aQWO<<GpO%0fQWO7++UO%0kQWO7++VOOQQ7+(m7+(mO%0pQWO7+(mO%0uQYO7+(mO%0|QWO7+(mO){QYO7++UO){QYO7++VOOQQ<<La<<LaOOQQ<<Lc<<LcOOQQ-E<]-E<]OOQQ1G3b1G3bO%1RQWO,5=wOOQQ,5=y,5=yO%1WQWO1G3hOLXQYO7+&ROOQO7+%T7+%TO%1]Q7^O1G5XO:^QWO7+%TOOQO1G0T1G0TO%1gQ$IfO1G0ZOOQO1G0Z1G0ZO){QYO1G0ZO%1qQ$I[O1G0ZO:^QWO1G0TO!,rQpO1G0TO!?{Q&jO1G0TO%1|Q$I[O1G0ZO%2[Q&jO1G0TO%2mQ$I[O1G0ZO%3RQ$ItO1G0ZO%3]Q&jO1G0TO!?{Q&jO1G0ZOOQ$IU<<IV<<IVOOQ$IU<<Ig<<IgO:^QWO<<IgO%3dQ$IfO<<N[OOQO7+)n7+)nO%3tQ$IfO7+'gO%5|QbO1G4OO%6WQ7^O7+%|O%6|Q7^O,59jO%8zQ7^O,5<UO%:{Q7^O,5<WO%<hQ7^O,5<fO%>WQ7^O7+'WO%>eQ7^O7+'XO%>rQWO,5;xOOQO7+&{7+&{O%>wQ#tO<<KfOOQO1G4W1G4WO%?XQWO1G4WO%?dQWO1G4WO%?rQWO7+*{O%?rQWO7+*{OITQWO1G4YO%?zQ`O1G4YO%@UQWO7+*|OOQ$IS7+'o7+'oO$0hQWO7+'pO%@^Q`O7+'pOOQ$IS7+'n7+'nO$0hQWO7+'oO%@eQWO7+'pOITQWO7+'pO#5TQWO7+'oO%@jQ#tO<<M|OOQ$IU7+$r7+$rO%@tQ`O,5>qOOQO-E<T-E<TO#MdQWOANASOOQQANASANASOITQWOANASO%AOQ$IdO7+'rOOQQAN=eAN=eO5qQWO1G4cOOQO1G4c1G4cO%A`QWO1G4cO%AeQWO7++TO%AeQWO7++TO5iQ$I[OANAoO%AmQWOANAoOOQQANAoANAoO%ArQWOANASO%AzQ`OANASOOQQANAZANAZOOQQANA[ANA[O%BUQWO,5>sOOQO-E<V-E<VO%BaQ7^O1G5fO#5YQWO,5=^O5_QWO,5=^O!,rQpO,5=^OOQO-E<X-E<XOOQQ1G2w1G2wO$;QQ$ItO,5:oO!?{Q&jO,5=^O%BkQ&jO,5=^O%B|Q&jO,5:oOOQQ<<K|<<K|OITQWO<<K|O%/VQWO<<K|O%CWQWO<<K|O%C`Q`O<<K|O){QYO<<K|OITQWO<<K|OOQQ<<LP<<LPO5iQ$I[O<<LPO#5YQWO<<LPO5_QWO<<LPO%CjQ&jO1G4bO%CrQWO7++ROOQQAN=[AN=[O5iQ$I[OAN=[OOQQ<<Np<<NpOOQQ<<Nq<<NqOOQQ<<LX<<LXO%CzQWO<<LXO%DPQYO<<LXO%DWQWO<<NpO%D]QWO<<NqOOQQ1G3c1G3cO:^QWO7+)SO%DbQ7^O<<ImOOQO<<Ho<<HoOOQO7+%u7+%uO%1gQ$IfO7+%uO){QYO7+%uOOQO7+%o7+%oO:^QWO7+%oO!,rQpO7+%oO%DlQ$I[O7+%uO!?{Q&jO7+%oO%DwQ$I[O7+%uO%EVQ&jO7+%oO%EhQ$I[O7+%uOOQ$IUAN?RAN?RO%E|Q$IfO<<KfO%HUQ7^O<<JTO%HcQ7^O1G1yO%JgQ7^O1G2[O%LhQ7^O1G2^O%NTQ7^O<<JsO%NbQ7^O<<IhOOQO1G1d1G1dOOQO7+)r7+)rO%NoQWO7+)rO%NzQWO<<NgO& SQ`O7+)tOOQ$IS<<K[<<K[O$0hQWO<<K[OOQ$IS<<KZ<<KZO& ^Q`O<<K[O$0hQWO<<KZOOQQG26nG26nO#MdQWOG26nOOQO7+)}7+)}O5qQWO7+)}O& eQWO<<NoOOQQG27ZG27ZO5iQ$I[OG27ZOITQWOG26nOLXQYO1G4_O& mQWO7++QO5iQ$I[O1G2xO#5YQWO1G2xO5_QWO1G2xO!,rQpO1G2xO!?{Q&jO1G2xO%3RQ$ItO1G0ZO& uQ&jO1G2xO%/VQWOANAhOOQQANAhANAhOITQWOANAhO&!WQWOANAhO&!`Q`OANAhOOQQANAkANAkO5iQ$I[OANAkO#5YQWOANAkOOQO'#Gv'#GvOOQO7+)|7+)|OOQQG22vG22vOOQQANAsANAsO&!jQWOANAsOOQQAND[AND[OOQQAND]AND]OOQQ<<Ln<<LnOOQO<<Ia<<IaO%1gQ$IfO<<IaOOQO<<IZ<<IZO:^QWO<<IZO){QYO<<IaO!,rQpO<<IZO&!oQ$I[O<<IaO!?{Q&jO<<IZO&!zQ$I[O<<IaO&#YQ7^O7+'gOOQO<<M^<<M^OOQ$ISAN@vAN@vO$0hQWOAN@vOOQ$ISAN@uAN@uOOQQLD,YLD,YOOQO<<Mi<<MiOOQQLD,uLD,uO#MdQWOLD,YO&$xQ7^O7+)yOOQO7+(d7+(dO5iQ$I[O7+(dO#5YQWO7+(dO5_QWO7+(dO!,rQpO7+(dO!?{Q&jO7+(dOOQQG27SG27SO%/VQWOG27SOITQWOG27SOOQQG27VG27VO5iQ$I[OG27VOOQQG27_G27_OOQOAN>{AN>{OOQOAN>uAN>uO%1gQ$IfOAN>{O:^QWOAN>uO){QYOAN>{O!,rQpOAN>uO&%SQ$I[OAN>{O&%_Q7^O<<KfOOQ$ISG26bG26bOOQQ!$( t!$( tOOQO<<LO<<LOO5iQ$I[O<<LOO#5YQWO<<LOO5_QWO<<LOO!,rQpO<<LOOOQQLD,nLD,nO%/VQWOLD,nOOQQLD,qLD,qOOQOG24gG24gOOQOG24aG24aO%1gQ$IfOG24gO:^QWOG24aO){QYOG24gO&&}QMhO,5:rO&'tQ!LQO'#IqOOQOANAjANAjO5iQ$I[OANAjO#5YQWOANAjO5_QWOANAjOOQQ!$(!Y!$(!YOOQOLD*RLD*ROOQOLD){LD){O%1gQ$IfOLD*RO&(hQMhO,59jO&)[QMhO,5<UO&*OQMhO,5<WO&*rQMhO,5<fOOQOG27UG27UO5iQ$I[OG27UO#5YQWOG27UOOQO!$'Mm!$'MmO&+iQMhO1G2[O&,]QMhO1G2^O&-PQMhO1G1yOOQOLD,pLD,pO5iQ$I[OLD,pO&-vQMhO7+'gOOQO!$(![!$(![O&.mQMhO<<KfOLXQYO'#DrO&/dQbO'#ItOLXQYO'#DjO&/kQ$IfO'#ChO&0UQbO'#ChO&0fQYO,5:vO&2fQWO'#EWOLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO,5;ROLXQYO'#IPO&3pQWO,5<TO&5SQWO,5;ROLXQYO,5;fO!(^QWO'#DOO!(^QWO'#DOO!(^QWO'#DOOITQWO'#FjO&2fQWO'#FjO&3xQWO'#FjOITQWO'#FlO&2fQWO'#FlO&3xQWO'#FlOITQWO'#FzO&2fQWO'#FzO&3xQWO'#FzOLXQYO,5?mO&0fQYO1G0bO&5ZQ7^O'#ChOLXQYO1G1lOITQWO,5<pO&2fQWO,5<pO&3xQWO,5<pOITQWO,5<rO&2fQWO,5<rO&3xQWO,5<rOITQWO,5<_O&2fQWO,5<_O&3xQWO,5<_O&0fQYO1G1mOLXQYO7+&iOITQWO1G1{O&2fQWO1G1{O&3xQWO1G1{O&0fQYO7+'XO&0fQYO7+%|OITQWO7+'zO&2fQWO7+'zO&3xQWO7+'zO&5eQWO7+'pO&5eQWO<<K[O&5eQWOAN@vO&5jQWO'#E[O&5oQWO'#E[O&5wQWO'#EzO&5|QWO'#EgO&6RQWO'#JRO&6^QWO'#JPO&6iQWO,5:vO&6nQ#tO,5<QO&6uQWO'#FsO&6zQWO'#FsO&7PQWO'#FsO&7UQWO,5<RO&7^QWO,5:vO&7fQ7^O1G0}O&7mQWO,5<aO&7rQWO,5<aO&7wQWO,5<aO&7|QWO1G1mO&8RQWO1G0bO&8WQ#tO1G2`O&8_Q#tO1G2`O&8fQ#tO1G2`O&8mQWO1G2UO&8rQ`O7+'pO&8yQWO7+'pO&9OQ`O<<K[O4QQWO'#FhO5_QWO'#FgOBwQWO'#EZOLXQYO,5;cO!(mQWO'#FuO!(mQWO'#FuO!(mQWO'#FuOJdQWO,5<tOJdQWO,5<tOJdQWO,5<tO&9VQWO,5<jOITQWO1G2UO&9_QWO1G2UOITQWO7+'pO!&tQ&jO'#GOO!&tQ&jO,5<j\",\n  stateData: \"&:]~O'YOS'ZOSTOSUOS~OPTOQTOXyO]cO_hObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#dsO#tpO#x^O%PqO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO%axO%nzO%t{O%v|O%x}O%z!OO%}!PO&T!QO&Z!RO&]!SO&_!TO&a!UO&c!VO']PO'fQO'oYO'|aO~OP[XZ[X_[Xj[Xu[Xv[Xx[X!R[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'W[X'f[X'p[X'w[X'x[X~O!]$lX~P$zOR!WO'U!XO'V!ZO~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O']![O'fQO'oYO'|aO~O!Q!`O!R!]O!O'jP!O'tP~P'dO!S!mO~P`OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O']9WO'fQO'oYO'|aO~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!T!bO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O'fQO'oYO'|aO~O!Q!rO#U!uO#V!rO']9XO!c'qP~P+{O#W!vO~O!]!wO#W!vO~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!R#bO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'fQO'p#[O'w!}O'x#OO~O_'hX'W'hX!c'hX!O'hX!T'hX%Q'hX!]'hX~P.jO!{#eO#o#eOP'iXZ'iX_'iXj'iXu'iXv'iXx'iX!R'iX!a'iX!b'iX!d'iX!j'iX#['iX#]'iX#^'iX#_'iX#`'iX#a'iX#b'iX#e'iX#g'iX#i'iX#j'iX'f'iX'p'iX'w'iX'x'iX~O#c'iX'W'iX!O'iX!c'iXn'iX!T'iX%Q'iX!]'iX~P0zO!{#eO~O#z#fO$R#jO~O!T#kO#x^O$U#lO$W#nO~O]#qOh$OOj#rOk#qOl#qOq$POs$QOx#xO!T#yO!_$VO!d#vO#V$WO#t$TO$_$RO$a$SO$d$UO']#pO'f#sO'a'cP~O!d$XO~O!]$ZO~O_$[O'W$[O~O']$`O~O!d$XO']$`O'^$bO'b$cO~Oc$iO!d$XO']$`O~O#c#TO~O]$rOu$nO!T$kO!d$mO%R$qO']$`O'^$bO^(UP~O!n$sO~Ox$tO!T$uO']$`O~Ox$tO!T$uO%Z$yO']$`O~O']$zO~O#dsO%RtO%TrO%UrO%XuO%ZvO%^wO%_wO~Ob%TOc%SO!n%QO%P%RO%c%PO~P7uOb%WOcmO!T%VO!nlO#dsO%PqO%TrO%UrO%XuO%ZvO%^wO%_wO%axO~O`%ZO!{%^O%R%XO'^$bO~P8tO!d%_O!g%cO~O!d%dO~O!TSO~O_$[O'T%lO'W$[O~O_$[O'T%oO'W$[O~O_$[O'T%qO'W$[O~OR!WO'U!XO'V%uO~OP[XZ[Xj[Xu[Xv[Xx[X!R[X!RdX!a[X!b[X!d[X!j[X!{[X!{dX#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'f[X'p[X'w[X'x[X~O!O[X!OdX~P;aO!Q%wO!O&iX!O&nX!R&iX!R&nX~P'dO!R%yO!O'jX~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!R%yO!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'fQO'p#[O'w!}O'x#OO~O!O'jX~P>^O!O&OO~Ox&RO!W&]O!X&UO!Y&UO'^$bO~O]&SOk&SO!Q&VO'g&PO!S'kP!S'vP~P@aO!O'sX!R'sX!]'sX!c'sX'p'sX~O!{'sX#W#PX!S'sX~PAYO!{&^O!O'uX!R'uX~O!R&_O!O'tX~O!O&bO~O!{#eO~PAYOS&fO!T&cO!o&eO']$`O~Oc&kO!d$XO']$`O~Ou$nO!d$mO~O!S&lO~P`Ou!{Ov!{Ox!|O!b!yO!d!zO'fQOP!faZ!faj!fa!R!fa!a!fa!j!fa#[!fa#]!fa#^!fa#_!fa#`!fa#a!fa#b!fa#c!fa#e!fa#g!fa#i!fa#j!fa'p!fa'w!fa'x!fa~O_!fa'W!fa!O!fa!c!fan!fa!T!fa%Q!fa!]!fa~PCcO!c&mO~O!]!wO!{&oO'p&nO!R'rX_'rX'W'rX~O!c'rX~PE{O!R&sO!c'qX~O!c&uO~Ox$tO!T$uO#V&vO']$`O~OPTOQTO]cOb!kOc!jOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!TSO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!n!iO#t!lO#x^O']9WO'fQO'oYO'|aO~O]#qOh$OOj#rOk#qOl#qOq$POs9kOx#xO!T#yO!_;RO!d#vO#V9tO#t$TO$_9nO$a9qO$d$UO']&zO'f#sO~O#W&|O~O]#qOh$OOj#rOk#qOl#qOq$POs$QOx#xO!T#yO!_$VO!d#vO#V$WO#t$TO$_$RO$a$SO$d$UO']&zO'f#sO~O'a'mP~PJdO!Q'QO!c'nP~P){O'g'SO'oYO~OP9TOQ9TO]cOb;POc!jOhcOj9TOkcOlcOq9TOs9TOxRO{cO|cO}cO!T!bO!_9VO!dUO!g9TO!h9TO!i9TO!j9TO!k9TO!n!iO#t!lO#x^O']'bO'fQO'oYO'|:}O~O!d!zO~O!R#bO_$]a'W$]a!c$]a!O$]a!T$]a%Q$]a!]$]a~O#d'iO~PITO!]'kO!T'yX#w'yX#z'yX$R'yX~Ou'lO~P! POu'lO!T'yX#w'yX#z'yX$R'yX~O!T'nO#w'rO#z'mO$R'sO~O!Q'vO~PLXO#z#fO$R'yO~Ou$eXx$eX!b$eX'p$eX'w$eX'x$eX~OSfX!RfX!{fX'afX'a$eX~P!!iOk'{O~OR'|O'U'}O'V(PO~Ou(ROx(SO'p#[O'w(UO'x(WO~O'a(QO~P!#rO'a(ZO~O]#qOh$OOj#rOk#qOl#qOq$POs9kOx#xO!T#yO!_;RO!d#vO#V9tO#t$TO$_9nO$a9qO$d$UO'f#sO~O!Q(_O']([O!c'}P~P!$aO#W(aO~O!Q(eO'](bO!O(OP~P!$aOj(sOx(kO!W(qO!X(jO!Y(jO!d(hO!x(rO$w(mO'^$bO'g(gO~O!S(pO~P!&XO!b!yOu'eXx'eX'p'eX'w'eX'x'eX!R'eX!{'eX~O'a'eX#m'eX~P!'QOS(vO!{(uO!R'dX'a'dX~O!R(wO'a'cX~O'](yO~O!d)OO~O']&zO~O!d(hO~Ox$tO!Q!rO!T$uO#U!uO#V!rO']$`O!c'qP~O!]!wO#W)SO~OP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO#j#ZO'fQO'p#[O'w!}O'x#OO~O_!^a!R!^a'W!^a!O!^a!c!^an!^a!T!^a%Q!^a!]!^a~P!)cOS)[O!T&cO!o)ZO%Q)YO'b$cO~O']$zO'a'cP~O!])_O!T'`X_'`X!R'`X'W'`X~O!d$XO'b$cO~O!d$XO']$`O'b$cO~O!]!wO#W&|O~O])jO%R)kO'])gO!S(VP~O!R)lO^(UX~O'g'SO~OZ)pO~O^)qO~O!T$kO']$`O'^$bO^(UP~Ox$tO!Q)vO!R&_O!T$uO']$`O!O'tP~O]&YOk&YO!Q)wO'g'SO!S'vP~O!R)xO_(RX'W(RX~O!{)|O'b$cO~OS*PO!T#yO'b$cO~O!T*RO~Ou*TO!TSO~O!n*YO~Oc*_O~O'](yO!S(TP~Oc$iO~O%RtO']$zO~P8tOZ*eO^*dO~OPTOQTO]cObnOcmOhcOjTOkcOlcOqTOsTOxRO{cO|cO}cO!_kO!dUO!gTO!hTO!iTO!jTO!kTO!nlO#x^O%PqO'fQO'oYO'|aO~O!T!bO#t!lO']9WO~P!1RO^*dO_$[O'W$[O~O_*iO#d*kO%T*kO%U*kO~P){O!d%_O~O%t*pO~O!T*rO~O&V*tO&X*uOP&SaQ&SaX&Sa]&Sa_&Sab&Sac&Sah&Saj&Sak&Sal&Saq&Sas&Sax&Sa{&Sa|&Sa}&Sa!T&Sa!_&Sa!d&Sa!g&Sa!h&Sa!i&Sa!j&Sa!k&Sa!n&Sa#d&Sa#t&Sa#x&Sa%P&Sa%R&Sa%T&Sa%U&Sa%X&Sa%Z&Sa%^&Sa%_&Sa%a&Sa%n&Sa%t&Sa%v&Sa%x&Sa%z&Sa%}&Sa&T&Sa&Z&Sa&]&Sa&_&Sa&a&Sa&c&Sa'S&Sa']&Sa'f&Sa'o&Sa'|&Sa!S&Sa%{&Sa`&Sa&Q&Sa~O']*zO~On*}O~O!O&ia!R&ia~P!)cO!Q+RO!O&iX!R&iX~P){O!R%yO!O'ja~O!O'ja~P>^O!R&_O!O'ta~O!RwX!R!ZX!SwX!S!ZX!]wX!]!ZX!d!ZX!{wX'b!ZX~O!]+WO!{+VO!R#TX!R'lX!S#TX!S'lX!]'lX!d'lX'b'lX~O!]+YO!d$XO'b$cO!R!VX!S!VX~O]&QOk&QOx&RO'g(gO~OP9TOQ9TO]cOb;POc!jOhcOj9TOkcOlcOq9TOs9TOxRO{cO|cO}cO!T!bO!_9VO!dUO!g9TO!h9TO!i9TO!j9TO!k9TO!n!iO#t!lO#x^O'fQO'oYO'|:}O~O']9yO~P!;^O!R+^O!S'kX~O!S+`O~O!]+WO!{+VO!R#TX!S#TX~O!R+aO!S'vX~O!S+cO~O]&QOk&QOx&RO'^$bO'g(gO~O!X+dO!Y+dO~P!>[Ox$tO!Q+fO!T$uO']$`O!O&nX!R&nX~O_+jO!W+mO!X+iO!Y+iO!r+qO!s+oO!t+pO!u+nO!x+rO'^$bO'g(gO'o+gO~O!S+lO~P!?]OS+wO!T&cO!o+vO~O!{+}O!R'ra!c'ra_'ra'W'ra~O!]!wO~P!@gO!R&sO!c'qa~Ox$tO!Q,QO!T$uO#U,SO#V,QO']$`O!R&pX!c&pX~O_#Oi!R#Oi'W#Oi!O#Oi!c#Oin#Oi!T#Oi%Q#Oi!]#Oi~P!)cO#W!za!R!za!c!za!{!za!T!za_!za'W!za!O!za~P!#rO#W'eXP'eXZ'eX_'eXj'eXv'eX!a'eX!d'eX!j'eX#['eX#]'eX#^'eX#_'eX#`'eX#a'eX#b'eX#c'eX#e'eX#g'eX#i'eX#j'eX'W'eX'f'eX!c'eX!O'eX!T'eXn'eX%Q'eX!]'eX~P!'QO!R,]O'a'mX~P!#rO'a,_O~O!R,`O!c'nX~P!)cO!c,cO~O!O,dO~OP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'fQOZ#Zi_#Zij#Zi!R#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'w#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O#[#Zi~P!EtO#[#PO~P!EtOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO'fQOZ#Zi_#Zi!R#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'w#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~Oj#Zi~P!H`Oj#RO~P!H`OP#^Oj#ROu!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO'fQO_#Zi!R#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'w#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P!JzOZ#dO!a#TO#a#TO#b#TO#c#TO~P!JzOP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO'fQO_#Zi!R#Zi#g#Zi#i#Zi#j#Zi'W#Zi'p#Zi'x#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'w#Zi~P!MrO'w!}O~P!MrOP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO'fQO'w!}O_#Zi!R#Zi#i#Zi#j#Zi'W#Zi'p#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~O'x#Zi~P#!^O'x#OO~P#!^OP#^OZ#dOj#ROu!{Ov!{Ox!|O!a#TO!b!yO!d!zO!j#^O#[#PO#]#QO#^#QO#_#QO#`#SO#a#TO#b#TO#c#TO#e#UO#g#WO#i#YO'fQO'w!}O'x#OO~O_#Zi!R#Zi#j#Zi'W#Zi'p#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P#$xOP[XZ[Xj[Xu[Xv[Xx[X!a[X!b[X!d[X!j[X!{[X#WdX#[[X#][X#^[X#_[X#`[X#a[X#b[X#c[X#e[X#g[X#i[X#j[X#o[X'f[X'p[X'w[X'x[X!R[X!S[X~O#m[X~P#']OP#^OZ9iOj9^Ou!{Ov!{Ox!|O!a9`O!b!yO!d!zO!j#^O#[9[O#]9]O#^9]O#_9]O#`9_O#a9`O#b9`O#c9`O#e9aO#g9cO#i9eO#j9fO'fQO'p#[O'w!}O'x#OO~O#m,fO~P#)gOP'iXZ'iXj'iXu'iXv'iXx'iX!a'iX!b'iX!d'iX!j'iX#['iX#]'iX#^'iX#_'iX#`'iX#a'iX#b'iX#e'iX#g'iX#i'iX#j'iX'f'iX'p'iX'w'iX'x'iX!R'iX~O!{9jO#o9jO#c'iX#m'iX!S'iX~P#+bO_&sa!R&sa'W&sa!c&san&sa!O&sa!T&sa%Q&sa!]&sa~P!)cOP#ZiZ#Zi_#Zij#Ziv#Zi!R#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi'W#Zi'f#Zi!O#Zi!c#Zin#Zi!T#Zi%Q#Zi!]#Zi~P!#rO_#ni!R#ni'W#ni!O#ni!c#nin#ni!T#ni%Q#ni!]#ni~P!)cO#z,hO~O#z,iO~O!]'kO!{,jO!T$OX#w$OX#z$OX$R$OX~O!Q,kO~O!T'nO#w,mO#z'mO$R,nO~O!R9gO!S'hX~P#)gO!S,oO~O$R,qO~OR'|O'U'}O'V,tO~O],wOk,wO!O,xO~O!RdX!]dX!cdX!c$eX'pdX~P!!iO!c-OO~P!#rO!R-PO!]!wO'p&nO!c'}X~O!c-UO~O!O$eX!R$eX!]$lX~P!!iO!R-WO!O(OX~P!#rO!]-YO~O!O-[O~O!Q(_O']$`O!c'}P~Oj-`O!]!wO!d$XO'b$cO'p&nO~O!])_O~O_$[O!R-eO'W$[O~O!S-gO~P!&XO!X-hO!Y-hO'^$bO'g(gO~Ox-jO'g(gO~O!x-kO~O']$zO!R&xX'a&xX~O!R(wO'a'ca~Ou-pOv-pOx-qO'pra'wra'xra!Rra!{ra~O'ara#mra~P#6qOu(ROx(SO'p$^a'w$^a'x$^a!R$^a!{$^a~O'a$^a#m$^a~P#7gOu(ROx(SO'p$`a'w$`a'x$`a!R$`a!{$`a~O'a$`a#m$`a~P#8YO]-rO~O#W-sO~O'a$na!R$na#m$na!{$na~P!#rO#W-vO~OS.PO!T&cO!o.OO%Q-}O~O'a.QO~O]#qOj#rOk#qOl#qOq$POs9kOx#xO!T#yO!_;RO!d#vO#V9tO#t$TO$_9nO$a9qO$d$UO'f#sO~Oh.SO'].RO~P#:PO!])_O!T'`a_'`a!R'`a'W'`a~O#W.YO~OZ[X!RdX!SdX~O!R.ZO!S(VX~O!S.]O~OZ.^O~O].`O'])gO~O!T$kO']$`O^'QX!R'QX~O!R)lO^(Ua~O!c.cO~P!)cO].eO~OZ.fO~O^.gO~OS.PO!T&cO!o.OO%Q-}O'b$cO~O!R)xO_(Ra'W(Ra~O!{.mO~OS.pO!T#yO~O'g'SO!S(SP~OS.zO!T.vO!o.yO%Q.xO'b$cO~OZ/UO!R/SO!S(TX~O!S/VO~O^/XO_$[O'W$[O~O]/YO~O]/ZO'](yO~O#c/[O%r/]O~P0zO!{#eO#c/[O%r/]O~O_/^O~P){O_/`O~O%{/dOP%yiQ%yiX%yi]%yi_%yib%yic%yih%yij%yik%yil%yiq%yis%yix%yi{%yi|%yi}%yi!T%yi!_%yi!d%yi!g%yi!h%yi!i%yi!j%yi!k%yi!n%yi#d%yi#t%yi#x%yi%P%yi%R%yi%T%yi%U%yi%X%yi%Z%yi%^%yi%_%yi%a%yi%n%yi%t%yi%v%yi%x%yi%z%yi%}%yi&T%yi&Z%yi&]%yi&_%yi&a%yi&c%yi'S%yi']%yi'f%yi'o%yi'|%yi!S%yi`%yi&Q%yi~O`/jO!S/hO&Q/iO~P`O!TSO!d/lO~O&X*uOP&SiQ&SiX&Si]&Si_&Sib&Sic&Sih&Sij&Sik&Sil&Siq&Sis&Six&Si{&Si|&Si}&Si!T&Si!_&Si!d&Si!g&Si!h&Si!i&Si!j&Si!k&Si!n&Si#d&Si#t&Si#x&Si%P&Si%R&Si%T&Si%U&Si%X&Si%Z&Si%^&Si%_&Si%a&Si%n&Si%t&Si%v&Si%x&Si%z&Si%}&Si&T&Si&Z&Si&]&Si&_&Si&a&Si&c&Si'S&Si']&Si'f&Si'o&Si'|&Si!S&Si%{&Si`&Si&Q&Si~O!R#bOn$]a~O!O&ii!R&ii~P!)cO!R%yO!O'ji~O!R&_O!O'ti~O!O/rO~O!R!Va!S!Va~P#)gO]&QOk&QO!Q/xO'g(gO!R&jX!S&jX~P@aO!R+^O!S'ka~O]&YOk&YO!Q)wO'g'SO!R&oX!S&oX~O!R+aO!S'va~O!O'ui!R'ui~P!)cO_$[O!]!wO!d$XO!j0SO!{0QO'W$[O'b$cO'p&nO~O!S0VO~P!?]O!X0WO!Y0WO'^$bO'g(gO'o+gO~O!W0XO~P#LVO!TSO!W0XO!u0ZO!x0[O~P#LVO!W0XO!s0^O!t0^O!u0ZO!x0[O~P#LVO!T&cO~O!T&cO~P!#rO!R'ri!c'ri_'ri'W'ri~P!)cO!{0gO!R'ri!c'ri_'ri'W'ri~O!R&sO!c'qi~Ox$tO!T$uO#V0iO']$`O~O#WraPraZra_rajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra'Wra'fra!cra!Ora!Tranra%Qra!]ra~P#6qO#W$^aP$^aZ$^a_$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a'W$^a'f$^a!c$^a!O$^a!T$^an$^a%Q$^a!]$^a~P#7gO#W$`aP$`aZ$`a_$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a'W$`a'f$`a!c$`a!O$`a!T$`an$`a%Q$`a!]$`a~P#8YO#W$naP$naZ$na_$naj$nav$na!R$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na'W$na'f$na!c$na!O$na!T$na!{$nan$na%Q$na!]$na~P!#rO_#Oq!R#Oq'W#Oq!O#Oq!c#Oqn#Oq!T#Oq%Q#Oq!]#Oq~P!)cO!R&kX'a&kX~PJdO!R,]O'a'ma~O!Q0qO!R&lX!c&lX~P){O!R,`O!c'na~O!R,`O!c'na~P!)cO#m!fa!S!fa~PCcO#m!^a!R!^a!S!^a~P#)gO!T1UO#x^O$P1VO~O!S1ZO~On1[O~P!#rO_$Yq!R$Yq'W$Yq!O$Yq!c$Yqn$Yq!T$Yq%Q$Yq!]$Yq~P!)cO!O1]O~O],wOk,wO~Ou(ROx(SO'x(WO'p$xi'w$xi!R$xi!{$xi~O'a$xi#m$xi~P$,vOu(ROx(SO'p$zi'w$zi'x$zi!R$zi!{$zi~O'a$zi#m$zi~P$-iO#m1^O~P!#rO!Q1`O']$`O!R&tX!c&tX~O!R-PO!c'}a~O!R-PO!]!wO!c'}a~O!R-PO!]!wO'p&nO!c'}a~O'a$gi!R$gi#m$gi!{$gi~P!#rO!Q1gO'](bO!O&vX!R&vX~P!$aO!R-WO!O(Oa~O!R-WO!O(Oa~P!#rO!]!wO~O!]!wO#c1oO~Oj1rO!]!wO'p&nO~O!R'di'a'di~P!#rO!{1uO!R'di'a'di~P!#rO!c1xO~O_$Zq!R$Zq'W$Zq!O$Zq!c$Zqn$Zq!T$Zq%Q$Zq!]$Zq~P!)cO!R1|O!T(PX~P!#rO!T&cO%Q2PO~O!T&cO%Q2PO~P!#rO!T$eX$u[X_$eX!R$eX'W$eX~P!!iO$u2TOugXxgX!TgX'pgX'wgX'xgX_gX!RgX'WgX~O$u2TO~O]2ZO%R2[O'])gO!R'PX!S'PX~O!R.ZO!S(Va~OZ2`O~O^2aO~O]2dO~OS2fO!T&cO!o2eO%Q2PO~O_$[O'W$[O~P!#rO!T#yO~P!#rO!R2kO!{2mO!S(SX~O!S2nO~Ox;]O!W2wO!X2pO!Y2pO!r2vO!s2uO!t2uO!x2tO'^$bO'g(gO'o+gO~O!S2sO~P$6QOS3OO!T.vO!o2}O%Q2|O~OS3OO!T.vO!o2}O%Q2|O'b$cO~O'](yO!R'OX!S'OX~O!R/SO!S(Ta~O]3YO'g3XO~O]3ZO~O^3]O~O!c3`O~P){O_3bO~O_3bO~P){O#c3dO%r3eO~PE{O`/jO!S3iO&Q/iO~P`O!]3kO~O!R#Ti!S#Ti~P#)gO!{3mO!R#Ti!S#Ti~O!R!Vi!S!Vi~P#)gO_$[O!{3tO'W$[O~O_$[O!]!wO!{3tO'W$[O~O!X3xO!Y3xO'^$bO'g(gO'o+gO~O_$[O!]!wO!d$XO!j3yO!{3tO'W$[O'b$cO'p&nO~O!W3zO~P$:oO!W3zO!u3}O!x4OO~P$:oO_$[O!]!wO!j3yO!{3tO'W$[O'p&nO~O!R'rq!c'rq_'rq'W'rq~P!)cO!R&sO!c'qq~O#W$xiP$xiZ$xi_$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi'W$xi'f$xi!c$xi!O$xi!T$xin$xi%Q$xi!]$xi~P$,vO#W$ziP$ziZ$zi_$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi'W$zi'f$zi!c$zi!O$zi!T$zin$zi%Q$zi!]$zi~P$-iO#W$giP$giZ$gi_$gij$giv$gi!R$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi'W$gi'f$gi!c$gi!O$gi!T$gi!{$gin$gi%Q$gi!]$gi~P!#rO!R&ka'a&ka~P!#rO!R&la!c&la~P!)cO!R,`O!c'ni~O#m#Oi!R#Oi!S#Oi~P#)gOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O'fQOZ#Zij#Zi!a#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'w#Zi'x#Zi!R#Zi!S#Zi~O#[#Zi~P$DVO#[9[O~P$DVOP#^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9[O#]9]O#^9]O#_9]O'fQOZ#Zi!a#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'w#Zi'x#Zi!R#Zi!S#Zi~Oj#Zi~P$F_Oj9^O~P$F_OP#^Oj9^Ou!{Ov!{Ox!|O!b!yO!d!zO!j#^O#[9[O#]9]O#^9]O#_9]O#`9_O'fQO#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'w#Zi'x#Zi!R#Zi!S#Zi~OZ#Zi!a#Zi#a#Zi#b#Zi#c#Zi~P$HgOZ9iO!a9`O#a9`O#b9`O#c9`O~P$HgOP#^OZ9iOj9^Ou!{Ov!{Ox!|O!a9`O!b!yO!d!zO!j#^O#[9[O#]9]O#^9]O#_9]O#`9_O#a9`O#b9`O#c9`O#e9aO'fQO#g#Zi#i#Zi#j#Zi#m#Zi'p#Zi'x#Zi!R#Zi!S#Zi~O'w#Zi~P$J{O'w!}O~P$J{OP#^OZ9iOj9^Ou!{Ov!{Ox!|O!a9`O!b!yO!d!zO!j#^O#[9[O#]9]O#^9]O#_9]O#`9_O#a9`O#b9`O#c9`O#e9aO#g9cO'fQO'w!}O#i#Zi#j#Zi#m#Zi'p#Zi!R#Zi!S#Zi~O'x#Zi~P$MTO'x#OO~P$MTOP#^OZ9iOj9^Ou!{Ov!{Ox!|O!a9`O!b!yO!d!zO!j#^O#[9[O#]9]O#^9]O#_9]O#`9_O#a9`O#b9`O#c9`O#e9aO#g9cO#i9eO'fQO'w!}O'x#OO~O#j#Zi#m#Zi'p#Zi!R#Zi!S#Zi~P% ]O_#ky!R#ky'W#ky!O#ky!c#kyn#ky!T#ky%Q#ky!]#ky~P!)cOP#ZiZ#Zij#Ziv#Zi!a#Zi!b#Zi!d#Zi!j#Zi#[#Zi#]#Zi#^#Zi#_#Zi#`#Zi#a#Zi#b#Zi#c#Zi#e#Zi#g#Zi#i#Zi#j#Zi#m#Zi'f#Zi!R#Zi!S#Zi~P!#rO!b!yOu'eXx'eX'p'eX'w'eX'x'eX!S'eX~OP'eXZ'eXj'eXv'eX!a'eX!d'eX!j'eX#['eX#]'eX#^'eX#_'eX#`'eX#a'eX#b'eX#c'eX#e'eX#g'eX#i'eX#j'eX#m'eX'f'eX!R'eX~P%%mO#m#ni!R#ni!S#ni~P#)gO!S4`O~O!R&sa!S&sa~P#)gO!]!wO'p&nO!R&ta!c&ta~O!R-PO!c'}i~O!R-PO!]!wO!c'}i~O!O&va!R&va~P!#rO!]4gO~O!R-WO!O(Oi~P!#rO!R-WO!O(Oi~O!O4kO~O!]!wO#c4pO~Oj4qO!]!wO'p&nO~O!O4sO~O'a$iq!R$iq#m$iq!{$iq~P!#rO_$Zy!R$Zy'W$Zy!O$Zy!c$Zyn$Zy!T$Zy%Q$Zy!]$Zy~P!)cO!R1|O!T(Pa~O!T&cO%Q4xO~O!T&cO%Q4xO~P!#rO_#Oy!R#Oy'W#Oy!O#Oy!c#Oyn#Oy!T#Oy%Q#Oy!]#Oy~P!)cOZ4{O~O]4}O'])gO~O!R.ZO!S(Vi~O]5QO~O^5RO~O'g'SO!R&{X!S&{X~O!R2kO!S(Sa~O!S5`O~P$6QOx;^O'g(gO'o+gO~O!W5cO!X5bO!Y5bO!x0[O'^$bO'g(gO'o+gO~O!s5dO!t5dO~P%.RO!X5bO!Y5bO'^$bO'g(gO'o+gO~O!T.vO~O!T.vO%Q5fO~O!T.vO%Q5fO~P!#rOS5kO!T.vO!o5jO%Q5fO~OZ5pO!R'Oa!S'Oa~O!R/SO!S(Ti~O]5sO~O!c5tO~O!c5uO~O!c5vO~O!c5vO~P){O_5xO~O!]5{O~O!c5|O~O!R'ui!S'ui~P#)gO_$[O'W$[O~P!)cO_$[O!{6RO'W$[O~O_$[O!]!wO!{6RO'W$[O~O!X6WO!Y6WO'^$bO'g(gO'o+gO~O_$[O!]!wO!j6XO!{6RO'W$[O'p&nO~O!d$XO'b$cO~P%2mO!W6YO~P%2[O!R'ry!c'ry_'ry'W'ry~P!)cO#W$iqP$iqZ$iq_$iqj$iqv$iq!R$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq'W$iq'f$iq!c$iq!O$iq!T$iq!{$iqn$iq%Q$iq!]$iq~P!#rO!R&li!c&li~P!)cO#m#Oq!R#Oq!S#Oq~P#)gOu-pOv-pOx-qO'pra'wra'xra!Sra~OPraZrajra!ara!bra!dra!jra#[ra#]ra#^ra#_ra#`ra#ara#bra#cra#era#gra#ira#jra#mra'fra!Rra~P%6eOu(ROx(SO'p$^a'w$^a'x$^a!S$^a~OP$^aZ$^aj$^av$^a!a$^a!b$^a!d$^a!j$^a#[$^a#]$^a#^$^a#_$^a#`$^a#a$^a#b$^a#c$^a#e$^a#g$^a#i$^a#j$^a#m$^a'f$^a!R$^a~P%8fOu(ROx(SO'p$`a'w$`a'x$`a!S$`a~OP$`aZ$`aj$`av$`a!a$`a!b$`a!d$`a!j$`a#[$`a#]$`a#^$`a#_$`a#`$`a#a$`a#b$`a#c$`a#e$`a#g$`a#i$`a#j$`a#m$`a'f$`a!R$`a~P%:gOP$naZ$naj$nav$na!a$na!b$na!d$na!j$na#[$na#]$na#^$na#_$na#`$na#a$na#b$na#c$na#e$na#g$na#i$na#j$na#m$na'f$na!R$na!S$na~P!#rO#m$Yq!R$Yq!S$Yq~P#)gO#m$Zq!R$Zq!S$Zq~P#)gO!S6dO~O'a$|y!R$|y#m$|y!{$|y~P!#rO!]!wO!R&ti!c&ti~O!]!wO'p&nO!R&ti!c&ti~O!R-PO!c'}q~O!O&vi!R&vi~P!#rO!R-WO!O(Oq~O!O6jO~P!#rO!O6jO~O!R'dy'a'dy~P!#rO!R&ya!T&ya~P!#rO!T$tq_$tq!R$tq'W$tq~P!#rOZ6qO~O!R.ZO!S(Vq~O]6tO~O!T&cO%Q6uO~O!T&cO%Q6uO~P!#rO!{6vO!R&{a!S&{a~O!R2kO!S(Si~P#)gO!X6|O!Y6|O'^$bO'g(gO'o+gO~O!W7OO!x4OO~P%BkO!T.vO%Q7RO~O!T.vO%Q7RO~P!#rO]7YO'g7XO~O!R/SO!S(Tq~O!c7[O~O!c7[O~P){O!c7^O~O!c7_O~O!R#Ty!S#Ty~P#)gO_$[O!{7eO'W$[O~O_$[O!]!wO!{7eO'W$[O~O!X7hO!Y7hO'^$bO'g(gO'o+gO~O_$[O!]!wO!j7iO!{7eO'W$[O'p&nO~O#W$|yP$|yZ$|y_$|yj$|yv$|y!R$|y!a$|y!b$|y!d$|y!j$|y#[$|y#]$|y#^$|y#_$|y#`$|y#a$|y#b$|y#c$|y#e$|y#g$|y#i$|y#j$|y'W$|y'f$|y!c$|y!O$|y!T$|y!{$|yn$|y%Q$|y!]$|y~P!#rO#m#ky!R#ky!S#ky~P#)gOP$giZ$gij$giv$gi!a$gi!b$gi!d$gi!j$gi#[$gi#]$gi#^$gi#_$gi#`$gi#a$gi#b$gi#c$gi#e$gi#g$gi#i$gi#j$gi#m$gi'f$gi!R$gi!S$gi~P!#rOu(ROx(SO'x(WO'p$xi'w$xi!S$xi~OP$xiZ$xij$xiv$xi!a$xi!b$xi!d$xi!j$xi#[$xi#]$xi#^$xi#_$xi#`$xi#a$xi#b$xi#c$xi#e$xi#g$xi#i$xi#j$xi#m$xi'f$xi!R$xi~P%JROu(ROx(SO'p$zi'w$zi'x$zi!S$zi~OP$ziZ$zij$ziv$zi!a$zi!b$zi!d$zi!j$zi#[$zi#]$zi#^$zi#_$zi#`$zi#a$zi#b$zi#c$zi#e$zi#g$zi#i$zi#j$zi#m$zi'f$zi!R$zi~P%LSO#m$Zy!R$Zy!S$Zy~P#)gO#m#Oy!R#Oy!S#Oy~P#)gO!]!wO!R&tq!c&tq~O!R-PO!c'}y~O!O&vq!R&vq~P!#rO!O7mO~P!#rO!R.ZO!S(Vy~O!R2kO!S(Sq~O!X7yO!Y7yO'^$bO'g(gO'o+gO~O!T.vO%Q7|O~O!T.vO%Q7|O~P!#rO!c8PO~O_$[O!{8UO'W$[O~O_$[O!]!wO!{8UO'W$[O~OP$iqZ$iqj$iqv$iq!a$iq!b$iq!d$iq!j$iq#[$iq#]$iq#^$iq#_$iq#`$iq#a$iq#b$iq#c$iq#e$iq#g$iq#i$iq#j$iq#m$iq'f$iq!R$iq!S$iq~P!#rO!R&{q!S&{q~P#)gO_$[O!{8hO'W$[O~OP$|yZ$|yj$|yv$|y!a$|y!b$|y!d$|y!j$|y#[$|y#]$|y#^$|y#_$|y#`$|y#a$|y#b$|y#c$|y#e$|y#g$|y#i$|y#j$|y#m$|y'f$|y!R$|y!S$|y~P!#rO!S!za!W!za!X!za!Y!za!r!za!s!za!t!za!x!za'^!za'g!za'o!za~P!#rO!W'eX!X'eX!Y'eX!r'eX!s'eX!t'eX!x'eX'^'eX'g'eX'o'eX~P%%mO!Wra!Xra!Yra!rra!sra!tra!xra'^ra'gra'ora~P%6eO!W$^a!X$^a!Y$^a!r$^a!s$^a!t$^a!x$^a'^$^a'g$^a'o$^a~P%8fO!W$`a!X$`a!Y$`a!r$`a!s$`a!t$`a!x$`a'^$`a'g$`a'o$`a~P%:gO!S$na!W$na!X$na!Y$na!r$na!s$na!t$na!x$na'^$na'g$na'o$na~P!#rO!W$xi!X$xi!Y$xi!r$xi!s$xi!t$xi!x$xi'^$xi'g$xi'o$xi~P%JRO!W$zi!X$zi!Y$zi!r$zi!s$zi!t$zi!x$zi'^$zi'g$zi'o$zi~P%LSO!S$gi!W$gi!X$gi!Y$gi!r$gi!s$gi!t$gi!x$gi'^$gi'g$gi'o$gi~P!#rO!S$iq!W$iq!X$iq!Y$iq!r$iq!s$iq!t$iq!x$iq'^$iq'g$iq'o$iq~P!#rO!S$|y!W$|y!X$|y!Y$|y!r$|y!s$|y!t$|y!x$|y'^$|y'g$|y'o$|y~P!#rOn'hX~P.jOn[X!O[X!c[X%r[X!T[X%Q[X!][X~P$zO!]dX!c[X!cdX'pdX~P;aOP9TOQ9TO]cOb;POc!jOhcOj9TOkcOlcOq9TOs9TOxRO{cO|cO}cO!TSO!_9VO!dUO!g9TO!h9TO!i9TO!j9TO!k9TO!n!iO#t!lO#x^O']'bO'fQO'oYO'|:}O~O]#qOh$OOj#rOk#qOl#qOq$POs9lOx#xO!T#yO!_;SO!d#vO#V9uO#t$TO$_9oO$a9rO$d$UO']&zO'f#sO~O!R9gO!S$]a~O]#qOh$OOj#rOk#qOl#qOq$POs9mOx#xO!T#yO!_;TO!d#vO#V9vO#t$TO$_9pO$a9sO$d$UO']&zO'f#sO~O#d'iO~P&3xO!S[X!SdX~P;aO!]9ZO~O#W9YO~O!]!wO#W9YO~O!{9jO~O#c9`O~O!{9wO!R'uX!S'uX~O!{9jO!R'sX!S'sX~O#W9xO~O'a9zO~P!#rO#W:RO~O#W:SO~O#W:TO~O!]!wO#W:UO~O!]!wO#W9xO~O#m:VO~P#)gO#W:WO~O#W:XO~O#W:YO~O#W:ZO~O#W:[O~O#m:]O~P!#rO#m:^O~P!#rO#m:_O~P!#rO!O:`O~O!O:aO~P!#rO!O:aO~O!O:bO~P!#rO!]!wO#c;YO~O!]!wO#c;[O~O#x~!b!r!t!u#U#V'|$_$a$d$u%P%Q%R%X%Z%^%_%a%c~UT#x'|#]}'Y'Z#z'Y']'g~\",\n  goto: \"#Hc(ZPPPPPPPP([P(lP*`PPPP-zPP.a3s5g5zP5zPPP5zP7t5zP5zP7xPP8OP8d<uPPPP<yPPPP<y?kPPP?qBSP<yPDgPPPPF`<yPPPPPHX<yPPKYLVPPPPLZMsPM{N|PLV<y<y!$^!'X!+z!+z!/ZPPP!/b!2W<yPPPPPPPPPP!4}P!6`PP<y!7mP<yP<y<y<y<yP<y!:[PP!=TP!?x!@Q!@U!@UP!=QP!@Y!@YP!B}P!CR<y<y!CX!E{5zP5zP5z5zP!GO5z5z!IU5z!Ki5z!Mi5z5z!NV#!]#!]#!a#!]#!iP#!]P5z##e5z#$y5z5z-zPPP#&cPP#&{#&{P#&{P#'b#&{PP#'hP#'_P#'_#'zMw#'_#(i#(o#(r([#(u([P#(|#(|#(|P([P([P([P([PP([P#)S#)VP#)V([P#)ZP#)^P([P([P([P([P([P([([#)d#)n#)t#)z#*Y#*`#*f#*p#*v#+V#+]#+k#+q#+w#,V#,l#.[#.j#.p#.v#.|#/S#/^#/d#/j#/t#0W#0^PPPPPPPP#0dPP#1W#4`PP#5v#5}#6VPP#;X#=l#Ch#Ck#Cn#Cy#C|PP#DP#DT#Dr#Ei#Em#FRPP#FV#F]#FaP#Fd#Fh#Fk#GZ#Gq#Gv#Gy#G|#HS#HV#HZ#H_mhOSj}!n$Z%b%e%f%h*m*r/d/gQ$hmQ$opQ%YyS&U!b+^Q&j!jS(j#y(oQ)e$iQ)r$qQ*^%SQ+d&]S+i&c+kQ+{&kQ-h(qQ/R*_Y0W+m+n+o+p+qS2p.v2rU3x0X0Z0^U5b2u2v2wS6W3z3}S6|5c5dQ7h6YR7y7O$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8h!j'd#]#k&V'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QQ(z$QQ)j$kQ*`%VQ*g%_Q,V9kQ.T)_Q.`)kQ/Z*eQ2Z.ZQ3V/SQ4X9mQ4}2[R8s9lpeOSjy}!n$Z%X%b%e%f%h*m*r/d/gR*b%Z&WVOSTjkn}!S!W!k!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%y&R&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;P;Q[!cRU!]!`%w&VQ$alQ$gmS$lp$qv$vrs!r!u$X$t&_&s&v)v)w)x*k+W+f,Q,S/l0iQ%OwQ&g!iQ&i!jS(^#v(hS)d$h$iQ)h$kQ)u$sQ*X%QQ*]%SS+z&j&kQ-T(_Q.X)eQ._)kQ.a)lQ.d)pQ.|*YS/Q*^*_Q0e+{Q1_-PQ2Y.ZQ2^.^Q2c.fQ3U/RQ4d1`Q4|2[Q5P2`Q6p4{R7p6q!Y$em!j$g$h$i&T&i&j&k(i)d)e+Z+h+z+{-a.X/}0T0Y0e1q3w3|6U7f8VQ)]$aQ)}${Q*Q$|Q*[%SQ.h)uQ.{*XU/P*]*^*_Q3P.|S3T/Q/RQ5]2oQ5o3US6z5^5aS7w6{6}Q8_7xR8n8`W#|a$c(w:}S${t%XQ$|uQ$}vR){$y$o#{a!w!y#d#v#x$R$S$W&f'|(V(X(Y(a(e(u(v)Y)[)_)|*P+w,]-W-Y-s-}.P.m.p.x.z1^1g1o1u1|2P2T2f2|3O4g4p4x5f5k6u7R7|9Z9i9n9o9p9q9r9s9t9u9v9{9|9}:O:P:Q:R:S:T:W:X:Y:]:^:_:};U;V;W;Y;[T'}#s(OX({$Q9k9l9mU&Y!b$u+aQ'T!{Q)o$nQ.q*RQ1v-pR5X2k&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;Q$]#aZ!_!o$_%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n+P+[+e+|,[,b,e,g,u-t/s/v0f0p0t0u0v0w0x0y0z0{0|0}1O1P1Q1T1Y1z2W3o3r4S4V4W4]4^5Z5}6Q6^6b6c7b7s8S8f8r9U:pT!XQ!Y&_cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QQ&W!bR/y+^Y&Q!b&U&]+^+dS(i#y(oS+h&c+kS-a(j(qQ-b(kQ-i(rQ.s*TU0T+i+m+nU0Y+o+p+qS0_+r2tQ1q-hQ1s-jQ1t-kS2o.v2rU3w0W0X0ZQ3{0[Q3|0^S5^2p2wS5a2u2vU6U3x3z3}Q6Z4OS6{5b5cQ6}5dS7f6W6YS7x6|7OQ8V7hQ8`7yQ;X;]R;Z;^lhOSj}!n$Z%b%e%f%h*m*r/d/gQ%j!QS&w!v9YQ)b$fQ*V%OQ*W%PQ+x&hS,Z&|9xS-u)S:UQ.V)cQ.u*UQ/k*tQ/m*uQ/u+XQ0]+oQ0c+yS1{-v:ZQ2U.WS2X.Y:[Q3n/wQ3q0OQ4Q0dQ4z2VQ6O3pQ6S3vQ6[4RQ7`5|Q7c6TQ8R7dQ8e8TR8q8g$W#`Z!_!o%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n+P+[+e+|,[,b,e,u-t/s/v0f0p0t0u0v0w0x0y0z0{0|0}1O1P1Q1T1Y1z2W3o3r4S4V4W4]4^5Z5}6Q6^6b6c7b7s8S8f8r9U:pW(t#z&{1S8jT)W$_,g$W#_Z!_!o%v%|&x'P'V'W'X'Y'Z'[']'^'_'`'a'c'f'j't)n+P+[+e+|,[,b,e,u-t/s/v0f0p0t0u0v0w0x0y0z0{0|0}1O1P1Q1T1Y1z2W3o3r4S4V4W4]4^5Z5}6Q6^6b6c7b7s8S8f8r9U:pQ'e#`S)V$_,gR-w)W&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QQ%e{Q%f|Q%h!OQ%i!PR/c*pQ&d!iQ)X$aQ+u&gS-|)])uS0`+s+tW2O-y-z-{.hS4P0a0bU4w2Q2R2SU6n4v5T5UQ7o6oR8Z7rT+j&c+kS+h&c+kU0T+i+m+nU0Y+o+p+qS0_+r2tS2o.v2rU3w0W0X0ZQ3{0[Q3|0^S5^2p2wS5a2u2vU6U3x3z3}Q6Z4OS6{5b5cQ6}5dS7f6W6YS7x6|7OQ8V7hR8`7yS+j&c+kT2q.v2rS&q!q/aQ-S(^Q-_(iS0S+h2oQ1d-TS1l-`-iU3y0Y0_5aQ4c1_S4n1r1tU6X3{3|6}Q6f4dQ6m4qR7i6ZQ!xXS&p!q/aQ)T$YQ)`$dQ)f$jQ,O&qQ-R(^Q-^(iQ-c(lQ.U)aQ.}*ZS0R+h2oS1c-S-TS1k-_-iQ1n-bQ1p-dQ3R/OW3u0S0Y0_5aQ4b1_Q4f1dS4j1l1tQ4o1sQ5m3SW6V3y3{3|6}S6e4c4dS6i4k:`Q6k4nQ6x5[Q7V5nS7g6X6ZQ7k6fS7l6j:aQ7n6mQ7u6yQ8O7WQ8W7iS8Y7m:bQ8]7vQ8l8^Q8x8mQ9P8yQ:i:dQ:t:nQ:u:oQ:y;XR:{;Z$rWORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8hS!xn!k!j:c#]#k&V'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QR:i;P$rXORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8hQ$Yb!Y$dm!j$g$h$i&T&i&j&k(i)d)e+Z+h+z+{-a.X/}0T0Y0e1q3w3|6U7f8VS$jn!kQ)a$eQ*Z%SW/O*[*]*^*_U3S/P/Q/RQ5[2oS5n3T3UU6y5]5^5aQ7W5oU7v6z6{6}S8^7w7xS8m8_8`Q8y8n!j:d#]#k&V'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QQ:n;OR:o;P$f]OSTjk}!S!W!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8hY!hRU!]!`%wv$vrs!r!u$X$t&_&s&v)v)w)x*k+W+f,Q,S/l0iQ*h%_!h:e#]#k'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QR:h&VS&Z!b$uR/{+a$p[ORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8h!j'd#]#k&V'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QR*g%_$roORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8hQ'T!{!k:f#]#k&V'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;Q!h#VZ!_$_%v%|&x'P'^'_'`'a'f'j)n+P+e+|,[,b,u-t0f0p1Q1z2W3r4S4V6Q7b8S8f8r9U!R9b'c't+[,g/s/v0t0|0}1O1P1T1Y3o4W4]4^5Z5}6^6b6c7s:p!d#XZ!_$_%v%|&x'P'`'a'f'j)n+P+e+|,[,b,u-t0f0p1Q1z2W3r4S4V6Q7b8S8f8r9U}9d'c't+[,g/s/v0t1O1P1T1Y3o4W4]4^5Z5}6^6b6c7s:p!`#]Z!_$_%v%|&x'P'f'j)n+P+e+|,[,b,u-t0f0p1Q1z2W3r4S4V6Q7b8S8f8r9Un(Y#t&})R,}-V-l-m0n1y4a4r:j:v:w:xx;Q'c't+[,g/s/v0t1T1Y3o4W4]4^5Z5}6^6b6c7s:p!d;U&y'h(](c+t,Y,r-Z-x-{.l.n0b0m1e1i2S2h2j2z4U4h4l4t4y5U5i6]6h6l7T:z:|Y;V8i8v8}9Q9SZ;W1R4[6_7j8X&^cORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QS#l`#mR1V,j&e_ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,j,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QS#g^#nT'm#i'qT#h^#nT'o#i'q&e`ORSTU`jk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#]#b#e#k#m$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&V&^&e&o&|'Q'v(Q)S)Z*i*m*r+R+V+Y+v+},`,f,j,k-q-v.O.Y.y/[/]/^/`/d/g/i/x0Q0g0q1U2e2m2}3b3d3e3m3t5j5x6R6v7e8U8h9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;QT#l`#mQ#o`R'x#m$rbORSTUjk}!S!W!]!`!n!v!z!|#P#Q#R#S#T#U#V#W#X#Y#Z#b#e$Z$m%Z%^%_%b%d%e%f%h%l%w%y&R&^&e&o&|'Q(Q)S)Z*i*m*r+R+v+},`,f-q-v.O.Y.y/[/]/^/`/d/g/i0Q0g0q2e2}3b3d3e3t5j5x6R7e8U8h!k;O#]#k&V'v+V+Y,k/x1U2m3m6v9T9V9Y9[9]9^9_9`9a9b9c9d9e9f9g9j9w9x9z:U:V:Z:[;Q#RdOSUj}!S!W!n!|#k$Z%Z%^%_%b%d%e%f%h%l&R&e'v)Z*i*m*r+v,k-q.O.y/[/]/^/`/d/g/i1U2e2}3b3d3e5j5xv#za!y$R$S$W(V(X(Y(a(u(v,]-s1^1u:};U;V;W#Q&{!w#d#v#x&f'|(e)Y)[)_)|*P+w-W-Y-}.P.m.p.x.z1g1o1|2P2T2f2|3O4g4p4x5f5k6u7R7|9n9q9t9{:O:R:W:];Y;[Q)P$UQ,v(Rb1S9i9p9s9v9}:Q:T:Y:_c8j9Z9o9r9u9|:P:S:X:^v#wa!y$R$S$W(V(X(Y(a(u(v,]-s1^1u:};U;V;WS(l#y(oQ)Q$VQ-d(m#Q:k!w#d#v#x&f'|(e)Y)[)_)|*P+w-W-Y-}.P.m.p.x.z1g1o1|2P2T2f2|3O4g4p4x5f5k6u7R7|9n9q9t9{:O:R:W:];Y;[b:l9Z9o9r9u9|:P:S:X:^b:m9i9p9s9v9}:Q:T:Y:_Q:q;RQ:r;SR:s;Tv#za!y$R$S$W(V(X(Y(a(u(v,]-s1^1u:};U;V;W#Q&{!w#d#v#x&f'|(e)Y)[)_)|*P+w-W-Y-}.P.m.p.x.z1g1o1|2P2T2f2|3O4g4p4x5f5k6u7R7|9n9q9t9{:O:R:W:];Y;[b1S9i9p9s9v9}:Q:T:Y:_c8j9Z9o9r9u9|:P:S:X:^lfOSj}!n$Z%b%e%f%h*m*r/d/gQ(d#xQ*{%oQ*|%qR1f-W$n#{a!w!y#d#v#x$R$S$W&f'|(V(X(Y(a(e(u(v)Y)[)_)|*P+w,]-W-Y-s-}.P.m.p.x.z1^1g1o1u1|2P2T2f2|3O4g4p4x5f5k6u7R7|9Z9i9n9o9p9q9r9s9t9u9v9{9|9}:O:P:Q:R:S:T:W:X:Y:]:^:_:};U;V;W;Y;[Q*O$|Q.o*QQ2i.nR5W2jT(n#y(oS(n#y(oT2q.v2rQ)`$dQ-c(lQ.U)aQ.}*ZQ3R/OQ5m3SQ6x5[Q7V5nQ7u6yQ8O7WQ8]7vQ8l8^Q8x8mR9P8yn(V#t&})R,}-V-l-m0n1y4a4r:j:v:w:x!d9{&y'h(](c+t,Y,r-Z-x-{.l.n0b0m1e1i2S2h2j2z4U4h4l4t4y5U5i6]6h6l7T:z:|Y9|8i8v8}9Q9SZ9}1R4[6_7j8Xp(X#t&})R,{,}-V-l-m0n1y4a4r:j:v:w:x!f:O&y'h(](c+t,Y,r-Z-x-{.l.n0b0k0m1e1i2S2h2j2z4U4h4l4t4y5U5i6]6h6l7T:z:|[:P8i8v8{8}9Q9S]:Q1R4[6_6`7j8XpeOSjy}!n$Z%X%b%e%f%h*m*r/d/gQ%UxR*i%_peOSjy}!n$Z%X%b%e%f%h*m*r/d/gR%UxQ*S$}R.k){qeOSjy}!n$Z%X%b%e%f%h*m*r/d/gQ.w*XS2{.{.|W5e2x2y2z3PU7Q5g5h5iU7z7P7S7TQ8a7{R8o8bQ%]yR*c%XR3Y/UR7Y5pS$lp$qR.a)lQ%bzR*m%cR*s%iT/e*r/gR*w%jQ*v%jR/n*wQjOQ!nST$^j!nQ(O#sR,s(OQ!YQR%t!YQ!^RU%z!^%{+SQ%{!_R+S%|Q+_&WR/z+_Q,^&}R0o,^Q,a'PS0r,a0sR0s,bQ+k&cR0U+kS!eR$tU&`!e&a+TQ&a!fR+T%}Q+b&ZR/|+bQ&t!sQ,P&rU,T&t,P0jR0j,UQ'q#iR,l'qQ#m`R'w#mQ#cZU'g#c+O9hQ+O9UR9h'tQ-Q(^W1a-Q1b4e6gU1b-R-S-TS4e1c1dR6g4f$Z(T#t&y&}'h(](c(|(})R+t,W,X,Y,r,{,|,}-V-Z-l-m-x-{.l.n0b0k0l0m0n1R1e1i1y2S2h2j2z4U4Y4Z4[4a4h4l4r4t4y5U5i6]6_6`6a6h6l7T7j8X8i8t8u8v8{8|8}9Q9S:j:v:w:x:z:|Q-X(cU1h-X1j4iQ1j-ZR4i1iQ(o#yR-f(oQ(x#}R-o(xQ1}-xR4u1}Q)y$wR.j)yQ2l.qS5Y2l6wR6w5ZQ*U%OR.t*UQ2r.vR5_2rQ/T*`S3W/T5qR5q3YQ.[)hW2].[2_5O6rQ2_._Q5O2^R6r5PQ)m$lR.b)mQ/g*rR3h/gWiOSj!nQ%g}Q)U$ZQ*l%bQ*n%eQ*o%fQ*q%hQ/b*mS/e*r/gR3g/dQ$]gQ%k!RQ%n!TQ%p!UQ%r!VQ)t$rQ)z$xQ*b%]Q*y%mQ-e(nS/W*c*fQ/o*xQ/p*{Q/q*|S0P+h2oQ2b.eQ2g.lQ3Q.}Q3[/YQ3f/cY3s0R0S0Y0_5aQ5S2dQ5V2hQ5l3RQ5r3Z[6P3r3u3y3{3|6}Q6s5QQ7U5mQ7Z5sW7a6Q6V6X6ZQ7q6tQ7t6xQ7}7VU8Q7b7g7iQ8[7uQ8c8OS8d8S8WQ8k8]Q8p8fQ8w8lQ8z8rQ9O8xR9R9PQ$fmQ&h!jU)c$g$h$iQ+X&TU+y&i&j&kQ-](iS.W)d)eQ/w+ZQ0O+hS0d+z+{Q1m-aQ2V.XQ3p/}S3v0T0YQ4R0eQ4m1qS6T3w3|Q7d6UQ8T7fR8g8VS#ua:}R)^$cU#}a$c:}R-n(wQ#taS&y!w)_Q&}!yQ'h#dQ(]#vQ(c#xQ(|$RQ(}$SQ)R$WQ+t&fQ,W9nQ,X9qQ,Y9tQ,r'|Q,{(VQ,|(XQ,}(YQ-V(aQ-Z(eQ-l(uQ-m(vd-x)Y-}.x2P2|4x5f6u7R7|Q-{)[Q.l)|Q.n*PQ0b+wQ0k9{Q0l:OQ0m:RQ0n,]Q1R9iQ1e-WQ1i-YQ1y-sQ2S.PQ2h.mQ2j.pQ2z.zQ4U:WQ4Y9pQ4Z9sQ4[9vQ4a1^Q4h1gQ4l1oQ4r1uQ4t1|Q4y2TQ5U2fQ5i3OQ6]:]Q6_:TQ6`9}Q6a:QQ6h4gQ6l4pQ7T5kQ7j:YQ8X:_Q8i9ZQ8t9oQ8u9rQ8v9uQ8{9|Q8|:PQ8}:SQ9Q:XQ9S:^Q:j:}Q:v;UQ:w;VQ:x;WQ:z;YR:|;[lgOSj}!n$Z%b%e%f%h*m*r/d/gS!pU%dQ%m!SQ%s!WQ'U!|Q'u#kS*f%Z%^Q*j%_Q*x%lQ+U&RQ+s&eQ,p'vQ-z)ZQ/_*iQ0a+vQ1X,kQ1w-qQ2R.OQ2y.yQ3^/[Q3_/]Q3a/^Q3c/`Q3j/iQ4_1UQ5T2eQ5h2}Q5w3bQ5y3dQ5z3eQ7S5jR7]5x!vZOSUj}!S!n!|$Z%Z%^%_%b%d%e%f%h%l&R&e)Z*i*m*r+v-q.O.y/[/]/^/`/d/g/i2e2}3b3d3e5j5xQ!_RQ!oTQ$_kS%v!]%yQ%|!`Q&x!vQ'P!zQ'V#PQ'W#QQ'X#RQ'Y#SQ'Z#TQ'[#UQ']#VQ'^#WQ'_#XQ'`#YQ'a#ZQ'c#]Q'f#bQ'j#eW't#k'v,k1UQ)n$mS+P%w+RS+[&V/xQ+e&^Q+|&oQ,[&|Q,b'QQ,e9TQ,g9VQ,u(QQ-t)SQ/s+VQ/v+YQ0f+}Q0p,`Q0t9YQ0u9[Q0v9]Q0w9^Q0x9_Q0y9`Q0z9aQ0{9bQ0|9cQ0}9dQ1O9eQ1P9fQ1Q,fQ1T9jQ1Y9gQ1z-vQ2W.YQ3o9wQ3r0QQ4S0gQ4V0qQ4W9xQ4]9zQ4^:UQ5Z2mQ5}3mQ6Q3tQ6^:VQ6b:ZQ6c:[Q7b6RQ7s6vQ8S7eQ8f8UQ8r8hQ9U!WR:p;QR!aRR&X!bS&T!b+^S+Z&U&]R/}+dR'O!yR'R!zT!tU$XS!sU$XU$wrs*kS&r!r!uQ,R&sQ,U&vQ.i)xS0h,Q,SR4T0i`!dR!]!`$t%w&_)v+fh!qUrs!r!u$X&s&v)x,Q,S0iQ/a*kQ/t+WQ3l/lT:g&V)wT!gR$tS!fR$tS%x!]&_S%}!`)vS+Q%w+fT+]&V)wT&[!b$uQ#i^R'z#nT'p#i'qR1W,jT(`#v(hR(f#xQ-y)YQ2Q-}Q2x.xQ4v2PQ5g2|Q6o4xQ7P5fQ7r6uQ7{7RR8b7|lhOSj}!n$Z%b%e%f%h*m*r/d/gQ%[yR*b%XV$xrs*kR.r*RR*a%VQ$ppR)s$qR)i$kT%`z%cT%az%cT/f*r/g\",\n  nodeNames: \"⚠ ArithOp ArithOp InterpolationStart extends LineComment BlockComment Script ExportDeclaration export Star as VariableName String from ; default FunctionDeclaration async function VariableDefinition TypeParamList TypeDefinition ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Interpolation null super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression await yield delete LogicOp BitOp ParenthesizedExpression ClassExpression class extends ClassBody MethodDeclaration Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression PrivatePropertyName BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody MethodDeclaration AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement\",\n  maxTerm: 332,\n  context: trackNewline,\n  nodeProps: [\n    [\"closedBy\", 3,\"InterpolationEnd\",40,\"]\",51,\"}\",66,\")\",132,\"JSXSelfCloseEndTag JSXEndTag\",146,\"JSXEndTag\"],\n    [\"group\", -26,8,15,17,58,184,188,191,192,194,197,200,211,213,219,221,223,225,228,234,240,242,244,246,248,250,251,\"Statement\",-30,12,13,24,27,28,41,43,44,45,47,52,60,68,74,75,91,92,101,103,119,122,124,125,126,127,129,130,148,149,151,\"Expression\",-22,23,25,29,32,34,152,154,156,157,159,160,161,163,164,165,167,168,169,178,180,182,183,\"Type\",-3,79,85,90,\"ClassItem\"],\n    [\"openedBy\", 30,\"InterpolationStart\",46,\"[\",50,\"{\",65,\"(\",131,\"JSXStartTag\",141,\"JSXStartTag JSXStartCloseTag\"]\n  ],\n  propSources: [jsHighlight],\n  skippedNodes: [0,5,6],\n  repeatNodeCount: 28,\n  tokenData: \"!C}~R!`OX%TXY%cYZ'RZ[%c[]%T]^'R^p%Tpq%cqr'crs(kst0htu2`uv4pvw5ewx6cxy<yyz=Zz{=k{|>k|}?O}!O>k!O!P?`!P!QCl!Q!R!0[!R![!1q![!]!7s!]!^!8V!^!_!8g!_!`!9d!`!a!:[!a!b!<R!b!c%T!c!}2`!}#O!=d#O#P%T#P#Q!=t#Q#R!>U#R#S2`#S#T!>i#T#o2`#o#p!>y#p#q!?O#q#r!?f#r#s!?x#s$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$I|2`$I|$I}!Bq$I}$JO!Bq$JO$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`W%YR$UWO!^%T!_#o%T#p~%T7Z%jg$UW'Y7ROX%TXY%cYZ%TZ[%c[p%Tpq%cq!^%T!_#o%T#p$f%T$f$g%c$g#BY%T#BY#BZ%c#BZ$IS%T$IS$I_%c$I_$JT%T$JT$JU%c$JU$KV%T$KV$KW%c$KW&FU%T&FU&FV%c&FV?HT%T?HT?HU%c?HU~%T7Z'YR$UW'Z7RO!^%T!_#o%T#p~%T$T'jS$UW!j#{O!^%T!_!`'v!`#o%T#p~%T$O'}S#e#v$UWO!^%T!_!`(Z!`#o%T#p~%T$O(bR#e#v$UWO!^%T!_#o%T#p~%T'u(rZ$UW]!ROY(kYZ)eZr(krs*rs!^(k!^!_+U!_#O(k#O#P-b#P#o(k#o#p+U#p~(k&r)jV$UWOr)ers*Ps!^)e!^!_*a!_#o)e#o#p*a#p~)e&r*WR$P&j$UWO!^%T!_#o%T#p~%T&j*dROr*ars*ms~*a&j*rO$P&j'u*{R$P&j$UW]!RO!^%T!_#o%T#p~%T'm+ZV]!ROY+UYZ*aZr+Urs+ps#O+U#O#P+w#P~+U'm+wO$P&j]!R'm+zROr+Urs,Ts~+U'm,[U$P&j]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R,sU]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R-[O]!R!R-_PO~,n'u-gV$UWOr(krs-|s!^(k!^!_+U!_#o(k#o#p+U#p~(k'u.VZ$P&j$UW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/PZ$UW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/yR$UW]!RO!^%T!_#o%T#p~%T!Z0XT$UWO!^.x!^!_,n!_#o.x#o#p,n#p~.x2k0mZ$UWOt%Ttu1`u!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`2k1g]$UW'o2cOt%Ttu1`u!Q%T!Q![1`![!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`7Z2k_$UW#zS']%k'g2bOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`[3q_$UW#zSOt%Ttu3ju}%T}!O3j!O!Q%T!Q![3j![!^%T!_!c%T!c!}3j!}#R%T#R#S3j#S#T%T#T#o3j#p$g%T$g~3j$O4wS#^#v$UWO!^%T!_!`5T!`#o%T#p~%T$O5[R$UW#o#vO!^%T!_#o%T#p~%T6d5lU'x6[$UWOv%Tvw6Ow!^%T!_!`5T!`#o%T#p~%T$O6VS$UW#i#vO!^%T!_!`5T!`#o%T#p~%T'u6jZ$UW]!ROY6cYZ7]Zw6cwx*rx!^6c!^!_8T!_#O6c#O#P:T#P#o6c#o#p8T#p~6c&r7bV$UWOw7]wx*Px!^7]!^!_7w!_#o7]#o#p7w#p~7]&j7zROw7wwx*mx~7w'm8YV]!ROY8TYZ7wZw8Twx+px#O8T#O#P8o#P~8T'm8rROw8Twx8{x~8T'm9SU$P&j]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R9kU]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R:QPO~9f'u:YV$UWOw6cwx:ox!^6c!^!_8T!_#o6c#o#p8T#p~6c'u:xZ$P&j$UW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z;rZ$UW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z<jT$UWO!^;k!^!_9f!_#o;k#o#p9f#p~;k%V=QR!d$}$UWO!^%T!_#o%T#p~%TZ=bR!cR$UWO!^%T!_#o%T#p~%T5s=tU'^2s#_#v$UWOz%Tz{>W{!^%T!_!`5T!`#o%T#p~%T$O>_S#[#v$UWO!^%T!_!`5T!`#o%T#p~%T$u>rSj$m$UWO!^%T!_!`5T!`#o%T#p~%T&i?VR!R&a$UWO!^%T!_#o%T#p~%T7Z?gVu6`$UWO!O%T!O!P?|!P!Q%T!Q![@r![!^%T!_#o%T#p~%Ty@RT$UWO!O%T!O!P@b!P!^%T!_#o%T#p~%Ty@iR!Qq$UWO!^%T!_#o%T#p~%Ty@yZ$UWkqO!Q%T!Q![@r![!^%T!_!g%T!g!hAl!h#R%T#R#S@r#S#X%T#X#YAl#Y#o%T#p~%TyAqZ$UWO{%T{|Bd|}%T}!OBd!O!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyBiV$UWO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyCVV$UWkqO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T7ZCs`$UW#]#vOYDuYZ%TZzDuz{Jl{!PDu!P!Q!-e!Q!^Du!^!_Fx!_!`!.^!`!a!/]!a!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXD|[$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXEy_$UW}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%TPF}V}POYFxZ!PFx!P!QGd!Q!}Fx!}#OG{#O#PHh#P~FxPGiU}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGdPHOTOYG{Z#OG{#O#PH_#P#QFx#Q~G{PHbQOYG{Z~G{PHkQOYFxZ~FxXHvY$UWOYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~HqXIkV$UWOYHqYZ%TZ!^Hq!^!_G{!_#oHq#o#pG{#p~HqXJVV$UWOYDuYZ%TZ!^Du!^!_Fx!_#oDu#o#pFx#p~Du7ZJs^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q!,R!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl7ZKtV$UWOzKoz{LZ{!^Ko!^!_M]!_#oKo#o#pM]#p~Ko7ZL`X$UWOzKoz{LZ{!PKo!P!QL{!Q!^Ko!^!_M]!_#oKo#o#pM]#p~Ko7ZMSR$UWU7RO!^%T!_#o%T#p~%T7RM`ROzM]z{Mi{~M]7RMlTOzM]z{Mi{!PM]!P!QM{!Q~M]7RNQOU7R7ZNX^$UW}POYJlYZKoZzJlz{NQ{!PJl!P!Q! T!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl7Z! ^_$UWU7R}PO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%T7R!!bY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!&x!Q!}!!]!}#O!$`#O#P!&f#P~!!]7R!#VY}POY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!#u!Q!}!!]!}#O!$`#O#P!&f#P~!!]7R!#|UU7R}P#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGd7R!$cWOY!$`YZM]Zz!$`z{!${{#O!$`#O#P!&S#P#Q!!]#Q~!$`7R!%OYOY!$`YZM]Zz!$`z{!${{!P!$`!P!Q!%n!Q#O!$`#O#P!&S#P#Q!!]#Q~!$`7R!%sTU7ROYG{Z#OG{#O#PH_#P#QFx#Q~G{7R!&VTOY!$`YZM]Zz!$`z{!${{~!$`7R!&iTOY!!]YZM]Zz!!]z{!#Q{~!!]7R!&}_}POzM]z{Mi{#ZM]#Z#[!&x#[#]M]#]#^!&x#^#aM]#a#b!&x#b#gM]#g#h!&x#h#iM]#i#j!&x#j#mM]#m#n!&x#n~M]7Z!(R[$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|7Z!(|^$UWOY!'|YZKoZz!'|z{!(w{!P!'|!P!Q!)x!Q!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|7Z!*PY$UWU7ROYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~Hq7Z!*tX$UWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#o!'|#o#p!$`#p~!'|7Z!+fX$UWOYJlYZKoZzJlz{NQ{!^Jl!^!_!!]!_#oJl#o#p!!]#p~Jl7Z!,Yc$UW}POzKoz{LZ{!^Ko!^!_M]!_#ZKo#Z#[!,R#[#]Ko#]#^!,R#^#aKo#a#b!,R#b#gKo#g#h!,R#h#iKo#i#j!,R#j#mKo#m#n!,R#n#oKo#o#pM]#p~Ko7Z!-lV$UWT7ROY!-eYZ%TZ!^!-e!^!_!.R!_#o!-e#o#p!.R#p~!-e7R!.WQT7ROY!.RZ~!.R$P!.g[$UW#o#v}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Du]!/f[#wS$UW}POYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Duy!0cd$UWkqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#U%T#U#V!3X#V#X%T#X#YAl#Y#b%T#b#c!2w#c#d!4m#d#l%T#l#m!5{#m#o%T#p~%Ty!1x_$UWkqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#X%T#X#YAl#Y#b%T#b#c!2w#c#o%T#p~%Ty!3OR$UWkqO!^%T!_#o%T#p~%Ty!3^W$UWO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#o%T#p~%Ty!3}Y$UWkqO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#b%T#b#c!2w#c#o%T#p~%Ty!4rV$UWO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#o%T#p~%Ty!5`X$UWkqO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#b%T#b#c!2w#c#o%T#p~%Ty!6QZ$UWO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#o%T#p~%Ty!6z]$UWkqO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#b%T#b#c!2w#c#o%T#p~%T%w!7|R!]V$UW#m%hO!^%T!_#o%T#p~%T!P!8^R_w$UWO!^%T!_#o%T#p~%T6i!8rR'bd!a0`#x&s'|P!P!Q!8{!^!_!9Q!_!`!9_W!9QO$WW#v!9VP#`#v!_!`!9Y#v!9_O#o#v#v!9dO#a#v%w!9kT!{%o$UWO!^%T!_!`'v!`!a!9z!a#o%T#p~%T$P!:RR#W#w$UWO!^%T!_#o%T#p~%T%w!:gT'a!s#a#v$RS$UWO!^%T!_!`!:v!`!a!;W!a#o%T#p~%T$O!:}R#a#v$UWO!^%T!_#o%T#p~%T$O!;_T#`#v$UWO!^%T!_!`5T!`!a!;n!a#o%T#p~%T$O!;uS#`#v$UWO!^%T!_!`5T!`#o%T#p~%T6i!<YV'p6a$UWO!O%T!O!P!<o!P!^%T!_!a%T!a!b!=P!b#o%T#p~%T)z!<vRv)r$UWO!^%T!_#o%T#p~%T$O!=WS$UW#j#vO!^%T!_!`5T!`#o%T#p~%T7V!=kRx6}$UWO!^%T!_#o%T#p~%TZ!={R!OR$UWO!^%T!_#o%T#p~%T$O!>]S#g#v$UWO!^%T!_!`5T!`#o%T#p~%T$P!>pR$UW'f#wO!^%T!_#o%T#p~%T~!?OO!T~6d!?VT'w6[$UWO!^%T!_!`5T!`#o%T#p#q!=P#q~%T5g!?oR!S5]nQ$UWO!^%T!_#o%T#p~%TX!@PR!kP$UWO!^%T!_#o%T#p~%T7Z!@gr$UW'Y7R#zS']%k'g2bOX%TXY%cYZ%TZ[%c[p%Tpq%cqt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`7Z!CO_$UW'Z7R#zS']%k'g2bOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`\",\n  tokenizers: [noSemicolon, incdecToken, template, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, insertSemicolon],\n  topRules: {\"Script\":[0,7]},\n  dialects: {jsx: 11707, ts: 11709},\n  dynamicPrecedences: {\"149\":1,\"176\":1},\n  specialized: [{term: 289, get: (value, stack) => (tsExtends(value, stack) << 1)},{term: 289, get: value => spec_identifier[value] || -1},{term: 299, get: value => spec_word[value] || -1},{term: 63, get: value => spec_LessThan[value] || -1}],\n  tokenPrec: 11730\n});\n\nexport { parser };\n","import { parser } from '@lezer/javascript';\nimport { LRLanguage, indentNodeProp, continuedIndent, flatIndent, delimitedIndent, foldNodeProp, foldInside, syntaxTree, LanguageSupport } from '@codemirror/language';\nimport { EditorSelection } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { snippetCompletion, ifNotIn, completeFromList } from '@codemirror/autocomplete';\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => -1,\n                \"Statement Property\": /*@__PURE__*/continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"ts\" });\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"jsx\" });\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"jsx ts\" });\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\ncompletion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    return new LanguageSupport(lang, [\n        javascriptLanguage.data.of({\n            autocomplete: ifNotIn([\"LineComment\", \"BlockComment\", \"String\"], completeFromList(snippets))\n        }),\n        config.jsx ? autoCloseTags : [],\n    ]);\n}\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let name = tree.getChild(\"JSXIdentifier\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\n/**\nExtension that will automatically insert JSX close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly ||\n        from != to || (text != \">\" && text != \"/\") ||\n        !javascriptLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let { state } = view;\n    let changes = state.changeByRange(range => {\n        var _a, _b, _c;\n        let { head } = range, around = syntaxTree(state).resolveInner(head, -1), name;\n        if (around.name == \"JSXStartTag\")\n            around = around.parent;\n        if (text == \">\" && around.name == \"JSXFragmentTag\") {\n            return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `><>` } };\n        }\n        else if (text == \">\" && around.name == \"JSXIdentifier\") {\n            if (((_b = (_a = around.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"JSXEndTag\" && (name = elementName(state.doc, around.parent, head)))\n                return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `></${name}>` } };\n        }\n        else if (text == \"/\" && around.name == \"JSXFragmentTag\") {\n            let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;\n            if (empty.from == head - 1 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"JSXEndTag\" && (name = elementName(state.doc, base === null || base === void 0 ? void 0 : base.firstChild, head))) {\n                let insert = `/${name}>`;\n                return { range: EditorSelection.cursor(head + insert.length), changes: { from: head, insert } };\n            }\n        }\n        return { range };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { userEvent: \"input.type\", scrollIntoView: true });\n    return true;\n});\n\n/**\nConnects an [ESLint](https://eslint.org/) linter to CodeMirror's\n[lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the\n[`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\nclass, and `config` an optional ESLint configuration. The return\nvalue of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)\nto create a JavaScript linting extension.\n\nNote that ESLint targets node, and is tricky to run in the\nbrowser. The [eslint4b](https://github.com/mysticatea/eslint4b)\nand\n[eslint4b-prebuilt](https://github.com/marijnh/eslint4b-prebuilt/)\npackages may help with that.\n*/\nfunction esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"jshint:\" + input.ruleId : \"jshint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n\nexport { autoCloseTags, esLint, javascript, javascriptLanguage, jsxLanguage, snippets, tsxLanguage, typescriptLanguage };\n","import { parser, configureNesting } from '@lezer/html';\nimport { cssLanguage, css } from '@codemirror/lang-css';\nimport { javascriptLanguage, javascript } from '@codemirror/lang-javascript';\nimport { EditorView } from '@codemirror/view';\nimport { EditorSelection } from '@codemirror/state';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, LanguageSupport } from '@codemirror/language';\n\nconst Targets = [\"_blank\", \"_self\", \"_top\", \"_parent\"];\nconst Charsets = [\"ascii\", \"utf-8\", \"utf-16\", \"latin1\", \"latin1\"];\nconst Methods = [\"get\", \"post\", \"put\", \"delete\"];\nconst Encs = [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"];\nconst Bool = [\"true\", \"false\"];\nconst S = {}; // Empty tag spec\nconst Tags = {\n    a: {\n        attrs: {\n            href: null, ping: null, type: null,\n            media: null,\n            target: Targets,\n            hreflang: null\n        }\n    },\n    abbr: S,\n    acronym: S,\n    address: S,\n    applet: S,\n    area: {\n        attrs: {\n            alt: null, coords: null, href: null, target: null, ping: null,\n            media: null, hreflang: null, type: null,\n            shape: [\"default\", \"rect\", \"circle\", \"poly\"]\n        }\n    },\n    article: S,\n    aside: S,\n    audio: {\n        attrs: {\n            src: null, mediagroup: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"none\", \"metadata\", \"auto\"],\n            autoplay: [\"autoplay\"],\n            loop: [\"loop\"],\n            controls: [\"controls\"]\n        }\n    },\n    b: S,\n    base: { attrs: { href: null, target: Targets } },\n    basefont: S,\n    bdi: S,\n    bdo: S,\n    big: S,\n    blockquote: { attrs: { cite: null } },\n    body: S,\n    br: S,\n    button: {\n        attrs: {\n            form: null, formaction: null, name: null, value: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"autofocus\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            type: [\"submit\", \"reset\", \"button\"]\n        }\n    },\n    canvas: { attrs: { width: null, height: null } },\n    caption: S,\n    center: S,\n    cite: S,\n    code: S,\n    col: { attrs: { span: null } },\n    colgroup: { attrs: { span: null } },\n    command: {\n        attrs: {\n            type: [\"command\", \"checkbox\", \"radio\"],\n            label: null, icon: null, radiogroup: null, command: null, title: null,\n            disabled: [\"disabled\"],\n            checked: [\"checked\"]\n        }\n    },\n    data: { attrs: { value: null } },\n    datagrid: { attrs: { disabled: [\"disabled\"], multiple: [\"multiple\"] } },\n    datalist: { attrs: { data: null } },\n    dd: S,\n    del: { attrs: { cite: null, datetime: null } },\n    details: { attrs: { open: [\"open\"] } },\n    dfn: S,\n    dir: S,\n    div: S,\n    dl: S,\n    dt: S,\n    em: S,\n    embed: { attrs: { src: null, type: null, width: null, height: null } },\n    eventsource: { attrs: { src: null } },\n    fieldset: { attrs: { disabled: [\"disabled\"], form: null, name: null } },\n    figcaption: S,\n    figure: S,\n    font: S,\n    footer: S,\n    form: {\n        attrs: {\n            action: null, name: null,\n            \"accept-charset\": Charsets,\n            autocomplete: [\"on\", \"off\"],\n            enctype: Encs,\n            method: Methods,\n            novalidate: [\"novalidate\"],\n            target: Targets\n        }\n    },\n    frame: S,\n    frameset: S,\n    h1: S, h2: S, h3: S, h4: S, h5: S, h6: S,\n    head: {\n        children: [\"title\", \"base\", \"link\", \"style\", \"meta\", \"script\", \"noscript\", \"command\"]\n    },\n    header: S,\n    hgroup: S,\n    hr: S,\n    html: {\n        attrs: { manifest: null }\n    },\n    i: S,\n    iframe: {\n        attrs: {\n            src: null, srcdoc: null, name: null, width: null, height: null,\n            sandbox: [\"allow-top-navigation\", \"allow-same-origin\", \"allow-forms\", \"allow-scripts\"],\n            seamless: [\"seamless\"]\n        }\n    },\n    img: {\n        attrs: {\n            alt: null, src: null, ismap: null, usemap: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"]\n        }\n    },\n    input: {\n        attrs: {\n            alt: null, dirname: null, form: null, formaction: null,\n            height: null, list: null, max: null, maxlength: null, min: null,\n            name: null, pattern: null, placeholder: null, size: null, src: null,\n            step: null, value: null, width: null,\n            accept: [\"audio/*\", \"video/*\", \"image/*\"],\n            autocomplete: [\"on\", \"off\"],\n            autofocus: [\"autofocus\"],\n            checked: [\"checked\"],\n            disabled: [\"disabled\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            multiple: [\"multiple\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            type: [\"hidden\", \"text\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"datetime\", \"date\", \"month\",\n                \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\",\n                \"file\", \"submit\", \"image\", \"reset\", \"button\"]\n        }\n    },\n    ins: { attrs: { cite: null, datetime: null } },\n    kbd: S,\n    keygen: {\n        attrs: {\n            challenge: null, form: null, name: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            keytype: [\"RSA\"]\n        }\n    },\n    label: { attrs: { for: null, form: null } },\n    legend: S,\n    li: { attrs: { value: null } },\n    link: {\n        attrs: {\n            href: null, type: null,\n            hreflang: null,\n            media: null,\n            sizes: [\"all\", \"16x16\", \"16x16 32x32\", \"16x16 32x32 64x64\"]\n        }\n    },\n    map: { attrs: { name: null } },\n    mark: S,\n    menu: { attrs: { label: null, type: [\"list\", \"context\", \"toolbar\"] } },\n    meta: {\n        attrs: {\n            content: null,\n            charset: Charsets,\n            name: [\"viewport\", \"application-name\", \"author\", \"description\", \"generator\", \"keywords\"],\n            \"http-equiv\": [\"content-language\", \"content-type\", \"default-style\", \"refresh\"]\n        }\n    },\n    meter: { attrs: { value: null, min: null, low: null, high: null, max: null, optimum: null } },\n    nav: S,\n    noframes: S,\n    noscript: S,\n    object: {\n        attrs: {\n            data: null, type: null, name: null, usemap: null, form: null, width: null, height: null,\n            typemustmatch: [\"typemustmatch\"]\n        }\n    },\n    ol: { attrs: { reversed: [\"reversed\"], start: null, type: [\"1\", \"a\", \"A\", \"i\", \"I\"] },\n        children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    optgroup: { attrs: { disabled: [\"disabled\"], label: null } },\n    option: { attrs: { disabled: [\"disabled\"], label: null, selected: [\"selected\"], value: null } },\n    output: { attrs: { for: null, form: null, name: null } },\n    p: S,\n    param: { attrs: { name: null, value: null } },\n    pre: S,\n    progress: { attrs: { value: null, max: null } },\n    q: { attrs: { cite: null } },\n    rp: S,\n    rt: S,\n    ruby: S,\n    s: S,\n    samp: S,\n    script: {\n        attrs: {\n            type: [\"text/javascript\"],\n            src: null,\n            async: [\"async\"],\n            defer: [\"defer\"],\n            charset: Charsets\n        }\n    },\n    section: S,\n    select: {\n        attrs: {\n            form: null, name: null, size: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            multiple: [\"multiple\"]\n        }\n    },\n    slot: { attrs: { name: null } },\n    small: S,\n    source: { attrs: { src: null, type: null, media: null } },\n    span: S,\n    strike: S,\n    strong: S,\n    style: {\n        attrs: {\n            type: [\"text/css\"],\n            media: null,\n            scoped: null\n        }\n    },\n    sub: S,\n    summary: S,\n    sup: S,\n    table: S,\n    tbody: S,\n    td: { attrs: { colspan: null, rowspan: null, headers: null } },\n    template: S,\n    textarea: {\n        attrs: {\n            dirname: null, form: null, maxlength: null, name: null, placeholder: null,\n            rows: null, cols: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            wrap: [\"soft\", \"hard\"]\n        }\n    },\n    tfoot: S,\n    th: { attrs: { colspan: null, rowspan: null, headers: null, scope: [\"row\", \"col\", \"rowgroup\", \"colgroup\"] } },\n    thead: S,\n    time: { attrs: { datetime: null } },\n    title: S,\n    tr: S,\n    track: {\n        attrs: {\n            src: null, label: null, default: null,\n            kind: [\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"],\n            srclang: null\n        }\n    },\n    tt: S,\n    u: S,\n    ul: { children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    var: S,\n    video: {\n        attrs: {\n            src: null, poster: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"auto\", \"metadata\", \"none\"],\n            autoplay: [\"autoplay\"],\n            mediagroup: [\"movie\"],\n            muted: [\"muted\"],\n            controls: [\"controls\"]\n        }\n    },\n    wbr: S\n};\nconst GlobalAttrs = {\n    accesskey: null,\n    class: null,\n    contenteditable: Bool,\n    contextmenu: null,\n    dir: [\"ltr\", \"rtl\", \"auto\"],\n    draggable: [\"true\", \"false\", \"auto\"],\n    dropzone: [\"copy\", \"move\", \"link\", \"string:\", \"file:\"],\n    hidden: [\"hidden\"],\n    id: null,\n    inert: [\"inert\"],\n    itemid: null,\n    itemprop: null,\n    itemref: null,\n    itemscope: [\"itemscope\"],\n    itemtype: null,\n    lang: [\"ar\", \"bn\", \"de\", \"en-GB\", \"en-US\", \"es\", \"fr\", \"hi\", \"id\", \"ja\", \"pa\", \"pt\", \"ru\", \"tr\", \"zh\"],\n    spellcheck: Bool,\n    autocorrect: Bool,\n    autocapitalize: Bool,\n    style: null,\n    tabindex: null,\n    title: null,\n    translate: [\"yes\", \"no\"],\n    onclick: null,\n    rel: [\"stylesheet\", \"alternate\", \"author\", \"bookmark\", \"help\", \"license\", \"next\", \"nofollow\", \"noreferrer\", \"prefetch\", \"prev\", \"search\", \"tag\"],\n    role: /*@__PURE__*/\"alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer\".split(\" \"),\n    \"aria-activedescendant\": null,\n    \"aria-atomic\": Bool,\n    \"aria-autocomplete\": [\"inline\", \"list\", \"both\", \"none\"],\n    \"aria-busy\": Bool,\n    \"aria-checked\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-controls\": null,\n    \"aria-describedby\": null,\n    \"aria-disabled\": Bool,\n    \"aria-dropeffect\": null,\n    \"aria-expanded\": [\"true\", \"false\", \"undefined\"],\n    \"aria-flowto\": null,\n    \"aria-grabbed\": [\"true\", \"false\", \"undefined\"],\n    \"aria-haspopup\": Bool,\n    \"aria-hidden\": Bool,\n    \"aria-invalid\": [\"true\", \"false\", \"grammar\", \"spelling\"],\n    \"aria-label\": null,\n    \"aria-labelledby\": null,\n    \"aria-level\": null,\n    \"aria-live\": [\"off\", \"polite\", \"assertive\"],\n    \"aria-multiline\": Bool,\n    \"aria-multiselectable\": Bool,\n    \"aria-owns\": null,\n    \"aria-posinset\": null,\n    \"aria-pressed\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-readonly\": Bool,\n    \"aria-relevant\": null,\n    \"aria-required\": Bool,\n    \"aria-selected\": [\"true\", \"false\", \"undefined\"],\n    \"aria-setsize\": null,\n    \"aria-sort\": [\"ascending\", \"descending\", \"none\", \"other\"],\n    \"aria-valuemax\": null,\n    \"aria-valuemin\": null,\n    \"aria-valuenow\": null,\n    \"aria-valuetext\": null\n};\nconst AllTags = /*@__PURE__*/Object.keys(Tags);\nconst GlobalAttrNames = /*@__PURE__*/Object.keys(GlobalAttrs);\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let tag = tree.firstChild;\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\nfunction findParentElement(tree, skip = false) {\n    for (let cur = tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\") {\n            if (skip)\n                skip = false;\n            else\n                return cur;\n        }\n    return null;\n}\nfunction allowedChildren(doc, tree) {\n    let parentInfo = Tags[elementName(doc, findParentElement(tree, true))];\n    return (parentInfo === null || parentInfo === void 0 ? void 0 : parentInfo.children) || AllTags;\n}\nfunction openTags(doc, tree) {\n    let open = [];\n    for (let parent = tree; parent = findParentElement(parent);) {\n        let tagName = elementName(doc, parent);\n        if (tagName && parent.lastChild.name == \"CloseTag\")\n            break;\n        if (tagName && open.indexOf(tagName) < 0 && (tree.name == \"EndTag\" || tree.from >= parent.firstChild.to))\n            open.push(tagName);\n    }\n    return open;\n}\nconst identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction completeTag(state, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: allowedChildren(state.doc, tree).map(tagName => ({ label: tagName, type: \"type\" })).concat(openTags(state.doc, tree).map((tag, i) => ({ label: \"/\" + tag, apply: \"/\" + tag + end, type: \"type\", boost: 99 - i }))),\n        validFor: /^\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeCloseTag(state, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: openTags(state.doc, tree).map((tag, i) => ({ label: tag, apply: tag + end, type: \"type\", boost: 99 - i })),\n        validFor: identifier };\n}\nfunction completeStartTag(state, tree, pos) {\n    let options = [], level = 0;\n    for (let tagName of allowedChildren(state.doc, tree))\n        options.push({ label: \"<\" + tagName, type: \"type\" });\n    for (let open of openTags(state.doc, tree))\n        options.push({ label: \"</\" + open + \">\", type: \"type\", boost: 99 - level++ });\n    return { from: pos, to: pos, options, validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeAttrName(state, tree, from, to) {\n    let elt = findParentElement(tree), info = elt ? Tags[elementName(state.doc, elt)] : null;\n    let names = (info && info.attrs ? Object.keys(info.attrs).concat(GlobalAttrNames) : GlobalAttrNames);\n    return { from, to,\n        options: names.map(attrName => ({ label: attrName, type: \"property\" })),\n        validFor: identifier };\n}\nfunction completeAttrValue(state, tree, from, to) {\n    var _a;\n    let nameNode = (_a = tree.parent) === null || _a === void 0 ? void 0 : _a.getChild(\"AttributeName\");\n    let options = [], token = undefined;\n    if (nameNode) {\n        let attrName = state.sliceDoc(nameNode.from, nameNode.to);\n        let attrs = GlobalAttrs[attrName];\n        if (!attrs) {\n            let elt = findParentElement(tree), info = elt ? Tags[elementName(state.doc, elt)] : null;\n            attrs = (info === null || info === void 0 ? void 0 : info.attrs) && info.attrs[attrName];\n        }\n        if (attrs) {\n            let base = state.sliceDoc(from, to).toLowerCase(), quoteStart = '\"', quoteEnd = '\"';\n            if (/^['\"]/.test(base)) {\n                token = base[0] == '\"' ? /^[^\"]*$/ : /^[^']*$/;\n                quoteStart = \"\";\n                quoteEnd = state.sliceDoc(to, to + 1) == base[0] ? \"\" : base[0];\n                base = base.slice(1);\n                from++;\n            }\n            else {\n                token = /^[^\\s<>='\"]*$/;\n            }\n            for (let value of attrs)\n                options.push({ label: value, apply: quoteStart + value + quoteEnd, type: \"constant\" });\n        }\n    }\n    return { from, to, options, validFor: token };\n}\n/**\nHTML tag completion. Opens and closes tags and attributes in a\ncontext-aware way.\n*/\nfunction htmlCompletionSource(context) {\n    let { state, pos } = context, around = syntaxTree(state).resolveInner(pos), tree = around.resolve(pos, -1);\n    for (let scan = pos, before; around == tree && (before = tree.childBefore(scan));) {\n        let last = before.lastChild;\n        if (!last || !last.type.isError || last.from < last.to)\n            break;\n        around = tree = before;\n        scan = last.from;\n    }\n    if (tree.name == \"TagName\") {\n        return tree.parent && /CloseTag$/.test(tree.parent.name) ? completeCloseTag(state, tree, tree.from, pos)\n            : completeTag(state, tree, tree.from, pos);\n    }\n    else if (tree.name == \"StartTag\") {\n        return completeTag(state, tree, pos, pos);\n    }\n    else if (tree.name == \"StartCloseTag\" || tree.name == \"IncompleteCloseTag\") {\n        return completeCloseTag(state, tree, pos, pos);\n    }\n    else if (context.explicit && (tree.name == \"OpenTag\" || tree.name == \"SelfClosingTag\") || tree.name == \"AttributeName\") {\n        return completeAttrName(state, tree, tree.name == \"AttributeName\" ? tree.from : pos, pos);\n    }\n    else if (tree.name == \"Is\" || tree.name == \"AttributeValue\" || tree.name == \"UnquotedAttributeValue\") {\n        return completeAttrValue(state, tree, tree.name == \"Is\" ? pos : tree.from, pos);\n    }\n    else if (context.explicit && (around.name == \"Element\" || around.name == \"Text\" || around.name == \"Document\")) {\n        return completeStartTag(state, tree, pos);\n    }\n    else {\n        return null;\n    }\n}\n\n/**\nA language provider based on the [Lezer HTML\nparser](https://github.com/lezer-parser/html), extended with the\nJavaScript and CSS parsers to parse the content of `<script>` and\n`<style>` tags.\n*/\nconst htmlLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let after = /^(\\s*)(<\\/)?/.exec(context.textAfter);\n                    if (context.node.to <= context.pos + after[0].length)\n                        return context.continue();\n                    return context.lineIndent(context.node.from) + (after[2] ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                },\n                Document(context) {\n                    if (context.pos + /\\s*/.exec(context.textAfter)[0].length < context.node.to)\n                        return context.continue();\n                    let endElt = null, close;\n                    for (let cur = context.node;;) {\n                        let last = cur.lastChild;\n                        if (!last || last.name != \"Element\" || last.to != cur.to)\n                            break;\n                        endElt = cur = last;\n                    }\n                    if (endElt && !((close = endElt.lastChild) && (close.name == \"CloseTag\" || close.name == \"SelfClosingTag\")))\n                        return context.lineIndent(endElt.from) + context.unit;\n                    return null;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(node) {\n                    let first = node.firstChild, last = node.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : node.to };\n                }\n            })\n        ],\n        wrap: /*@__PURE__*/configureNesting([\n            { tag: \"script\",\n                attrs(attrs) {\n                    return !attrs.type || /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(attrs.type);\n                },\n                parser: javascriptLanguage.parser },\n            { tag: \"style\",\n                attrs(attrs) {\n                    return (!attrs.lang || attrs.lang == \"css\") && (!attrs.type || /^(text\\/)?(x-)?(stylesheet|css)$/i.test(attrs.type));\n                },\n                parser: cssLanguage.parser }\n        ])\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/\\w+\\W$/,\n        wordChars: \"-._\"\n    }\n});\n/**\nLanguage support for HTML, including\n[`htmlCompletion`](https://codemirror.net/6/docs/ref/#lang-html.htmlCompletion) and JavaScript and\nCSS support extensions.\n*/\nfunction html(config = {}) {\n    let lang = htmlLanguage;\n    if (config.matchClosingTags === false)\n        lang = lang.configure({ dialect: \"noMatch\" });\n    return new LanguageSupport(lang, [\n        htmlLanguage.data.of({ autocomplete: htmlCompletionSource }),\n        config.autoCloseTags !== false ? autoCloseTags : [],\n        javascript().support,\n        css().support\n    ]);\n}\n/**\nExtension that will automatically insert close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text) => {\n    if (view.composing || view.state.readOnly || from != to || (text != \">\" && text != \"/\") ||\n        !htmlLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let { state } = view;\n    let changes = state.changeByRange(range => {\n        var _a, _b, _c;\n        let { head } = range, around = syntaxTree(state).resolveInner(head, -1), name;\n        if (around.name == \"TagName\" || around.name == \"StartTag\")\n            around = around.parent;\n        if (text == \">\" && around.name == \"OpenTag\") {\n            if (((_b = (_a = around.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"CloseTag\" && (name = elementName(state.doc, around.parent, head)))\n                return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `></${name}>` } };\n        }\n        else if (text == \"/\" && around.name == \"OpenTag\") {\n            let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;\n            if (empty.from == head - 1 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"CloseTag\" && (name = elementName(state.doc, base, head))) {\n                let insert = `/${name}>`;\n                return { range: EditorSelection.cursor(head + insert.length), changes: { from: head, insert } };\n            }\n        }\n        return { range };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { userEvent: \"input.type\", scrollIntoView: true });\n    return true;\n});\n\nexport { autoCloseTags, html, htmlCompletionSource, htmlLanguage };\n","import { NodeType, NodeProp, NodeSet, Tree, Parser, parseMixed } from '@lezer/common';\nimport { styleTags, tags, Tag } from '@lezer/highlight';\n\nclass CompositeBlock {\n    constructor(type, \n    // Used for indentation in list items, markup character in lists\n    value, from, hash, end, children, positions) {\n        this.type = type;\n        this.value = value;\n        this.from = from;\n        this.hash = hash;\n        this.end = end;\n        this.children = children;\n        this.positions = positions;\n        this.hashProp = [[NodeProp.contextHash, hash]];\n    }\n    static create(type, value, from, parentHash, end) {\n        let hash = (parentHash + (parentHash << 8) + type + (value << 4)) | 0;\n        return new CompositeBlock(type, value, from, hash, end, [], []);\n    }\n    addChild(child, pos) {\n        if (child.prop(NodeProp.contextHash) != this.hash)\n            child = new Tree(child.type, child.children, child.positions, child.length, this.hashProp);\n        this.children.push(child);\n        this.positions.push(pos);\n    }\n    toTree(nodeSet, end = this.end) {\n        let last = this.children.length - 1;\n        if (last >= 0)\n            end = Math.max(end, this.positions[last] + this.children[last].length + this.from);\n        let tree = new Tree(nodeSet.types[this.type], this.children, this.positions, end - this.from).balance({\n            makeTree: (children, positions, length) => new Tree(NodeType.none, children, positions, length, this.hashProp)\n        });\n        return tree;\n    }\n}\nvar Type;\n(function (Type) {\n    Type[Type[\"Document\"] = 1] = \"Document\";\n    Type[Type[\"CodeBlock\"] = 2] = \"CodeBlock\";\n    Type[Type[\"FencedCode\"] = 3] = \"FencedCode\";\n    Type[Type[\"Blockquote\"] = 4] = \"Blockquote\";\n    Type[Type[\"HorizontalRule\"] = 5] = \"HorizontalRule\";\n    Type[Type[\"BulletList\"] = 6] = \"BulletList\";\n    Type[Type[\"OrderedList\"] = 7] = \"OrderedList\";\n    Type[Type[\"ListItem\"] = 8] = \"ListItem\";\n    Type[Type[\"ATXHeading1\"] = 9] = \"ATXHeading1\";\n    Type[Type[\"ATXHeading2\"] = 10] = \"ATXHeading2\";\n    Type[Type[\"ATXHeading3\"] = 11] = \"ATXHeading3\";\n    Type[Type[\"ATXHeading4\"] = 12] = \"ATXHeading4\";\n    Type[Type[\"ATXHeading5\"] = 13] = \"ATXHeading5\";\n    Type[Type[\"ATXHeading6\"] = 14] = \"ATXHeading6\";\n    Type[Type[\"SetextHeading1\"] = 15] = \"SetextHeading1\";\n    Type[Type[\"SetextHeading2\"] = 16] = \"SetextHeading2\";\n    Type[Type[\"HTMLBlock\"] = 17] = \"HTMLBlock\";\n    Type[Type[\"LinkReference\"] = 18] = \"LinkReference\";\n    Type[Type[\"Paragraph\"] = 19] = \"Paragraph\";\n    Type[Type[\"CommentBlock\"] = 20] = \"CommentBlock\";\n    Type[Type[\"ProcessingInstructionBlock\"] = 21] = \"ProcessingInstructionBlock\";\n    // Inline\n    Type[Type[\"Escape\"] = 22] = \"Escape\";\n    Type[Type[\"Entity\"] = 23] = \"Entity\";\n    Type[Type[\"HardBreak\"] = 24] = \"HardBreak\";\n    Type[Type[\"Emphasis\"] = 25] = \"Emphasis\";\n    Type[Type[\"StrongEmphasis\"] = 26] = \"StrongEmphasis\";\n    Type[Type[\"Link\"] = 27] = \"Link\";\n    Type[Type[\"Image\"] = 28] = \"Image\";\n    Type[Type[\"InlineCode\"] = 29] = \"InlineCode\";\n    Type[Type[\"HTMLTag\"] = 30] = \"HTMLTag\";\n    Type[Type[\"Comment\"] = 31] = \"Comment\";\n    Type[Type[\"ProcessingInstruction\"] = 32] = \"ProcessingInstruction\";\n    Type[Type[\"URL\"] = 33] = \"URL\";\n    // Smaller tokens\n    Type[Type[\"HeaderMark\"] = 34] = \"HeaderMark\";\n    Type[Type[\"QuoteMark\"] = 35] = \"QuoteMark\";\n    Type[Type[\"ListMark\"] = 36] = \"ListMark\";\n    Type[Type[\"LinkMark\"] = 37] = \"LinkMark\";\n    Type[Type[\"EmphasisMark\"] = 38] = \"EmphasisMark\";\n    Type[Type[\"CodeMark\"] = 39] = \"CodeMark\";\n    Type[Type[\"CodeText\"] = 40] = \"CodeText\";\n    Type[Type[\"CodeInfo\"] = 41] = \"CodeInfo\";\n    Type[Type[\"LinkTitle\"] = 42] = \"LinkTitle\";\n    Type[Type[\"LinkLabel\"] = 43] = \"LinkLabel\";\n})(Type || (Type = {}));\n/// Data structure used to accumulate a block's content during [leaf\n/// block parsing](#BlockParser.leaf).\nclass LeafBlock {\n    /// @internal\n    constructor(\n    /// The start position of the block.\n    start, \n    /// The block's text content.\n    content) {\n        this.start = start;\n        this.content = content;\n        /// @internal\n        this.marks = [];\n        /// The block parsers active for this block.\n        this.parsers = [];\n    }\n}\n/// Data structure used during block-level per-line parsing.\nclass Line {\n    constructor() {\n        /// The line's full text.\n        this.text = \"\";\n        /// The base indent provided by the composite contexts (that have\n        /// been handled so far).\n        this.baseIndent = 0;\n        /// The string position corresponding to the base indent.\n        this.basePos = 0;\n        /// The number of contexts handled @internal\n        this.depth = 0;\n        /// Any markers (i.e. block quote markers) parsed for the contexts. @internal\n        this.markers = [];\n        /// The position of the next non-whitespace character beyond any\n        /// list, blockquote, or other composite block markers.\n        this.pos = 0;\n        /// The column of the next non-whitespace character.\n        this.indent = 0;\n        /// The character code of the character after `pos`.\n        this.next = -1;\n    }\n    /// @internal\n    forward() {\n        if (this.basePos > this.pos)\n            this.forwardInner();\n    }\n    /// @internal\n    forwardInner() {\n        let newPos = this.skipSpace(this.basePos);\n        this.indent = this.countIndent(newPos, this.pos, this.indent);\n        this.pos = newPos;\n        this.next = newPos == this.text.length ? -1 : this.text.charCodeAt(newPos);\n    }\n    /// Skip whitespace after the given position, return the position of\n    /// the next non-space character or the end of the line if there's\n    /// only space after `from`.\n    skipSpace(from) { return skipSpace(this.text, from); }\n    /// @internal\n    reset(text) {\n        this.text = text;\n        this.baseIndent = this.basePos = this.pos = this.indent = 0;\n        this.forwardInner();\n        this.depth = 1;\n        while (this.markers.length)\n            this.markers.pop();\n    }\n    /// Move the line's base position forward to the given position.\n    /// This should only be called by composite [block\n    /// parsers](#BlockParser.parse) or [markup skipping\n    /// functions](#NodeSpec.composite).\n    moveBase(to) {\n        this.basePos = to;\n        this.baseIndent = this.countIndent(to, this.pos, this.indent);\n    }\n    /// Move the line's base position forward to the given _column_.\n    moveBaseColumn(indent) {\n        this.baseIndent = indent;\n        this.basePos = this.findColumn(indent);\n    }\n    /// Store a composite-block-level marker. Should be called from\n    /// [markup skipping functions](#NodeSpec.composite) when they\n    /// consume any non-whitespace characters.\n    addMarker(elt) {\n        this.markers.push(elt);\n    }\n    /// Find the column position at `to`, optionally starting at a given\n    /// position and column.\n    countIndent(to, from = 0, indent = 0) {\n        for (let i = from; i < to; i++)\n            indent += this.text.charCodeAt(i) == 9 ? 4 - indent % 4 : 1;\n        return indent;\n    }\n    /// Find the position corresponding to the given column.\n    findColumn(goal) {\n        let i = 0;\n        for (let indent = 0; i < this.text.length && indent < goal; i++)\n            indent += this.text.charCodeAt(i) == 9 ? 4 - indent % 4 : 1;\n        return i;\n    }\n    /// @internal\n    scrub() {\n        if (!this.baseIndent)\n            return this.text;\n        let result = \"\";\n        for (let i = 0; i < this.basePos; i++)\n            result += \" \";\n        return result + this.text.slice(this.basePos);\n    }\n}\nfunction skipForList(bl, cx, line) {\n    if (line.pos == line.text.length ||\n        (bl != cx.block && line.indent >= cx.stack[line.depth + 1].value + line.baseIndent))\n        return true;\n    if (line.indent >= line.baseIndent + 4)\n        return false;\n    let size = (bl.type == Type.OrderedList ? isOrderedList : isBulletList)(line, cx, false);\n    return size > 0 &&\n        (bl.type != Type.BulletList || isHorizontalRule(line, cx, false) < 0) &&\n        line.text.charCodeAt(line.pos + size - 1) == bl.value;\n}\nconst DefaultSkipMarkup = {\n    [Type.Blockquote](bl, cx, line) {\n        if (line.next != 62 /* '>' */)\n            return false;\n        line.markers.push(elt(Type.QuoteMark, cx.lineStart + line.pos, cx.lineStart + line.pos + 1));\n        line.moveBase(line.pos + (space(line.text.charCodeAt(line.pos + 1)) ? 2 : 1));\n        bl.end = cx.lineStart + line.text.length;\n        return true;\n    },\n    [Type.ListItem](bl, _cx, line) {\n        if (line.indent < line.baseIndent + bl.value && line.next > -1)\n            return false;\n        line.moveBaseColumn(line.baseIndent + bl.value);\n        return true;\n    },\n    [Type.OrderedList]: skipForList,\n    [Type.BulletList]: skipForList,\n    [Type.Document]() { return true; }\n};\nfunction space(ch) { return ch == 32 || ch == 9 || ch == 10 || ch == 13; }\nfunction skipSpace(line, i = 0) {\n    while (i < line.length && space(line.charCodeAt(i)))\n        i++;\n    return i;\n}\nfunction skipSpaceBack(line, i, to) {\n    while (i > to && space(line.charCodeAt(i - 1)))\n        i--;\n    return i;\n}\nfunction isFencedCode(line) {\n    if (line.next != 96 && line.next != 126 /* '`~' */)\n        return -1;\n    let pos = line.pos + 1;\n    while (pos < line.text.length && line.text.charCodeAt(pos) == line.next)\n        pos++;\n    if (pos < line.pos + 3)\n        return -1;\n    if (line.next == 96)\n        for (let i = pos; i < line.text.length; i++)\n            if (line.text.charCodeAt(i) == 96)\n                return -1;\n    return pos;\n}\nfunction isBlockquote(line) {\n    return line.next != 62 /* '>' */ ? -1 : line.text.charCodeAt(line.pos + 1) == 32 ? 2 : 1;\n}\nfunction isHorizontalRule(line, cx, breaking) {\n    if (line.next != 42 && line.next != 45 && line.next != 95 /* '_-*' */)\n        return -1;\n    let count = 1;\n    for (let pos = line.pos + 1; pos < line.text.length; pos++) {\n        let ch = line.text.charCodeAt(pos);\n        if (ch == line.next)\n            count++;\n        else if (!space(ch))\n            return -1;\n    }\n    // Setext headers take precedence\n    if (breaking && line.next == 45 && isSetextUnderline(line) > -1 && line.depth == cx.stack.length)\n        return -1;\n    return count < 3 ? -1 : 1;\n}\nfunction inList(cx, type) {\n    for (let i = cx.stack.length - 1; i >= 0; i--)\n        if (cx.stack[i].type == type)\n            return true;\n    return false;\n}\nfunction isBulletList(line, cx, breaking) {\n    return (line.next == 45 || line.next == 43 || line.next == 42 /* '-+*' */) &&\n        (line.pos == line.text.length - 1 || space(line.text.charCodeAt(line.pos + 1))) &&\n        (!breaking || inList(cx, Type.BulletList) || line.skipSpace(line.pos + 2) < line.text.length) ? 1 : -1;\n}\nfunction isOrderedList(line, cx, breaking) {\n    let pos = line.pos, next = line.next;\n    for (;;) {\n        if (next >= 48 && next <= 57 /* '0-9' */)\n            pos++;\n        else\n            break;\n        if (pos == line.text.length)\n            return -1;\n        next = line.text.charCodeAt(pos);\n    }\n    if (pos == line.pos || pos > line.pos + 9 ||\n        (next != 46 && next != 41 /* '.)' */) ||\n        (pos < line.text.length - 1 && !space(line.text.charCodeAt(pos + 1))) ||\n        breaking && !inList(cx, Type.OrderedList) &&\n            (line.skipSpace(pos + 1) == line.text.length || pos > line.pos + 1 || line.next != 49 /* '1' */))\n        return -1;\n    return pos + 1 - line.pos;\n}\nfunction isAtxHeading(line) {\n    if (line.next != 35 /* '#' */)\n        return -1;\n    let pos = line.pos + 1;\n    while (pos < line.text.length && line.text.charCodeAt(pos) == 35)\n        pos++;\n    if (pos < line.text.length && line.text.charCodeAt(pos) != 32)\n        return -1;\n    let size = pos - line.pos;\n    return size > 6 ? -1 : size;\n}\nfunction isSetextUnderline(line) {\n    if (line.next != 45 && line.next != 61 /* '-=' */ || line.indent >= line.baseIndent + 4)\n        return -1;\n    let pos = line.pos + 1;\n    while (pos < line.text.length && line.text.charCodeAt(pos) == line.next)\n        pos++;\n    let end = pos;\n    while (pos < line.text.length && space(line.text.charCodeAt(pos)))\n        pos++;\n    return pos == line.text.length ? end : -1;\n}\nconst EmptyLine = /^[ \\t]*$/, CommentEnd = /-->/, ProcessingEnd = /\\?>/;\nconst HTMLBlockStyle = [\n    [/^<(?:script|pre|style)(?:\\s|>|$)/i, /<\\/(?:script|pre|style)>/i],\n    [/^\\s*<!--/, CommentEnd],\n    [/^\\s*<\\?/, ProcessingEnd],\n    [/^\\s*<![A-Z]/, />/],\n    [/^\\s*<!\\[CDATA\\[/, /\\]\\]>/],\n    [/^\\s*<\\/?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|\\/?>|$)/i, EmptyLine],\n    [/^\\s*(?:<\\/[a-z][\\w-]*\\s*>|<[a-z][\\w-]*(\\s+[a-z:_][\\w-.]*(?:\\s*=\\s*(?:[^\\s\"'=<>`]+|'[^']*'|\"[^\"]*\"))?)*\\s*>)\\s*$/i, EmptyLine]\n];\nfunction isHTMLBlock(line, _cx, breaking) {\n    if (line.next != 60 /* '<' */)\n        return -1;\n    let rest = line.text.slice(line.pos);\n    for (let i = 0, e = HTMLBlockStyle.length - (breaking ? 1 : 0); i < e; i++)\n        if (HTMLBlockStyle[i][0].test(rest))\n            return i;\n    return -1;\n}\nfunction getListIndent(line, pos) {\n    let indentAfter = line.countIndent(pos, line.pos, line.indent);\n    let indented = line.countIndent(line.skipSpace(pos), pos, indentAfter);\n    return indented >= indentAfter + 5 ? indentAfter + 1 : indented;\n}\nfunction addCodeText(marks, from, to) {\n    let last = marks.length - 1;\n    if (last >= 0 && marks[last].to == from && marks[last].type == Type.CodeText)\n        marks[last].to = to;\n    else\n        marks.push(elt(Type.CodeText, from, to));\n}\n// Rules for parsing blocks. A return value of false means the rule\n// doesn't apply here, true means it does. When true is returned and\n// `p.line` has been updated, the rule is assumed to have consumed a\n// leaf block. Otherwise, it is assumed to have opened a context.\nconst DefaultBlockParsers = {\n    LinkReference: undefined,\n    IndentedCode(cx, line) {\n        let base = line.baseIndent + 4;\n        if (line.indent < base)\n            return false;\n        let start = line.findColumn(base);\n        let from = cx.lineStart + start, to = cx.lineStart + line.text.length;\n        let marks = [], pendingMarks = [];\n        addCodeText(marks, from, to);\n        while (cx.nextLine() && line.depth >= cx.stack.length) {\n            if (line.pos == line.text.length) { // Empty\n                addCodeText(pendingMarks, cx.lineStart - 1, cx.lineStart);\n                for (let m of line.markers)\n                    pendingMarks.push(m);\n            }\n            else if (line.indent < base) {\n                break;\n            }\n            else {\n                if (pendingMarks.length) {\n                    for (let m of pendingMarks) {\n                        if (m.type == Type.CodeText)\n                            addCodeText(marks, m.from, m.to);\n                        else\n                            marks.push(m);\n                    }\n                    pendingMarks = [];\n                }\n                addCodeText(marks, cx.lineStart - 1, cx.lineStart);\n                for (let m of line.markers)\n                    marks.push(m);\n                to = cx.lineStart + line.text.length;\n                let codeStart = cx.lineStart + line.findColumn(line.baseIndent + 4);\n                if (codeStart < to)\n                    addCodeText(marks, codeStart, to);\n            }\n        }\n        if (pendingMarks.length) {\n            pendingMarks = pendingMarks.filter(m => m.type != Type.CodeText);\n            if (pendingMarks.length)\n                line.markers = pendingMarks.concat(line.markers);\n        }\n        cx.addNode(cx.buffer.writeElements(marks, -from).finish(Type.CodeBlock, to - from), from);\n        return true;\n    },\n    FencedCode(cx, line) {\n        let fenceEnd = isFencedCode(line);\n        if (fenceEnd < 0)\n            return false;\n        let from = cx.lineStart + line.pos, ch = line.next, len = fenceEnd - line.pos;\n        let infoFrom = line.skipSpace(fenceEnd), infoTo = skipSpaceBack(line.text, line.text.length, infoFrom);\n        let marks = [elt(Type.CodeMark, from, from + len)];\n        if (infoFrom < infoTo)\n            marks.push(elt(Type.CodeInfo, cx.lineStart + infoFrom, cx.lineStart + infoTo));\n        for (let first = true; cx.nextLine() && line.depth >= cx.stack.length; first = false) {\n            let i = line.pos;\n            if (line.indent - line.baseIndent < 4)\n                while (i < line.text.length && line.text.charCodeAt(i) == ch)\n                    i++;\n            if (i - line.pos >= len && line.skipSpace(i) == line.text.length) {\n                for (let m of line.markers)\n                    marks.push(m);\n                marks.push(elt(Type.CodeMark, cx.lineStart + line.pos, cx.lineStart + i));\n                cx.nextLine();\n                break;\n            }\n            else {\n                if (!first)\n                    addCodeText(marks, cx.lineStart - 1, cx.lineStart);\n                for (let m of line.markers)\n                    marks.push(m);\n                let textStart = cx.lineStart + line.basePos, textEnd = cx.lineStart + line.text.length;\n                if (textStart < textEnd)\n                    addCodeText(marks, textStart, textEnd);\n            }\n        }\n        cx.addNode(cx.buffer.writeElements(marks, -from)\n            .finish(Type.FencedCode, cx.prevLineEnd() - from), from);\n        return true;\n    },\n    Blockquote(cx, line) {\n        let size = isBlockquote(line);\n        if (size < 0)\n            return false;\n        cx.startContext(Type.Blockquote, line.pos);\n        cx.addNode(Type.QuoteMark, cx.lineStart + line.pos, cx.lineStart + line.pos + 1);\n        line.moveBase(line.pos + size);\n        return null;\n    },\n    HorizontalRule(cx, line) {\n        if (isHorizontalRule(line, cx, false) < 0)\n            return false;\n        let from = cx.lineStart + line.pos;\n        cx.nextLine();\n        cx.addNode(Type.HorizontalRule, from);\n        return true;\n    },\n    BulletList(cx, line) {\n        let size = isBulletList(line, cx, false);\n        if (size < 0)\n            return false;\n        if (cx.block.type != Type.BulletList)\n            cx.startContext(Type.BulletList, line.basePos, line.next);\n        let newBase = getListIndent(line, line.pos + 1);\n        cx.startContext(Type.ListItem, line.basePos, newBase - line.baseIndent);\n        cx.addNode(Type.ListMark, cx.lineStart + line.pos, cx.lineStart + line.pos + size);\n        line.moveBaseColumn(newBase);\n        return null;\n    },\n    OrderedList(cx, line) {\n        let size = isOrderedList(line, cx, false);\n        if (size < 0)\n            return false;\n        if (cx.block.type != Type.OrderedList)\n            cx.startContext(Type.OrderedList, line.basePos, line.text.charCodeAt(line.pos + size - 1));\n        let newBase = getListIndent(line, line.pos + size);\n        cx.startContext(Type.ListItem, line.basePos, newBase - line.baseIndent);\n        cx.addNode(Type.ListMark, cx.lineStart + line.pos, cx.lineStart + line.pos + size);\n        line.moveBaseColumn(newBase);\n        return null;\n    },\n    ATXHeading(cx, line) {\n        let size = isAtxHeading(line);\n        if (size < 0)\n            return false;\n        let off = line.pos, from = cx.lineStart + off;\n        let endOfSpace = skipSpaceBack(line.text, line.text.length, off), after = endOfSpace;\n        while (after > off && line.text.charCodeAt(after - 1) == line.next)\n            after--;\n        if (after == endOfSpace || after == off || !space(line.text.charCodeAt(after - 1)))\n            after = line.text.length;\n        let buf = cx.buffer\n            .write(Type.HeaderMark, 0, size)\n            .writeElements(cx.parser.parseInline(line.text.slice(off + size + 1, after), from + size + 1), -from);\n        if (after < line.text.length)\n            buf.write(Type.HeaderMark, after - off, endOfSpace - off);\n        let node = buf.finish(Type.ATXHeading1 - 1 + size, line.text.length - off);\n        cx.nextLine();\n        cx.addNode(node, from);\n        return true;\n    },\n    HTMLBlock(cx, line) {\n        let type = isHTMLBlock(line, cx, false);\n        if (type < 0)\n            return false;\n        let from = cx.lineStart + line.pos, end = HTMLBlockStyle[type][1];\n        let marks = [], trailing = end != EmptyLine;\n        while (!end.test(line.text) && cx.nextLine()) {\n            if (line.depth < cx.stack.length) {\n                trailing = false;\n                break;\n            }\n            for (let m of line.markers)\n                marks.push(m);\n        }\n        if (trailing)\n            cx.nextLine();\n        let nodeType = end == CommentEnd ? Type.CommentBlock : end == ProcessingEnd ? Type.ProcessingInstructionBlock : Type.HTMLBlock;\n        let to = cx.prevLineEnd();\n        cx.addNode(cx.buffer.writeElements(marks, -from).finish(nodeType, to - from), from);\n        return true;\n    },\n    SetextHeading: undefined // Specifies relative precedence for block-continue function\n};\n// This implements a state machine that incrementally parses link references. At each\n// next line, it looks ahead to see if the line continues the reference or not. If it\n// doesn't and a valid link is available ending before that line, it finishes that.\n// Similarly, on `finish` (when the leaf is terminated by external circumstances), it\n// creates a link reference if there's a valid reference up to the current point.\nclass LinkReferenceParser {\n    constructor(leaf) {\n        this.stage = 0 /* Start */;\n        this.elts = [];\n        this.pos = 0;\n        this.start = leaf.start;\n        this.advance(leaf.content);\n    }\n    nextLine(cx, line, leaf) {\n        if (this.stage == -1 /* Failed */)\n            return false;\n        let content = leaf.content + \"\\n\" + line.scrub();\n        let finish = this.advance(content);\n        if (finish > -1 && finish < content.length)\n            return this.complete(cx, leaf, finish);\n        return false;\n    }\n    finish(cx, leaf) {\n        if ((this.stage == 2 /* Link */ || this.stage == 3 /* Title */) && skipSpace(leaf.content, this.pos) == leaf.content.length)\n            return this.complete(cx, leaf, leaf.content.length);\n        return false;\n    }\n    complete(cx, leaf, len) {\n        cx.addLeafElement(leaf, elt(Type.LinkReference, this.start, this.start + len, this.elts));\n        return true;\n    }\n    nextStage(elt) {\n        if (elt) {\n            this.pos = elt.to - this.start;\n            this.elts.push(elt);\n            this.stage++;\n            return true;\n        }\n        if (elt === false)\n            this.stage = -1 /* Failed */;\n        return false;\n    }\n    advance(content) {\n        for (;;) {\n            if (this.stage == -1 /* Failed */) {\n                return -1;\n            }\n            else if (this.stage == 0 /* Start */) {\n                if (!this.nextStage(parseLinkLabel(content, this.pos, this.start, true)))\n                    return -1;\n                if (content.charCodeAt(this.pos) != 58 /* ':' */)\n                    return this.stage = -1 /* Failed */;\n                this.elts.push(elt(Type.LinkMark, this.pos + this.start, this.pos + this.start + 1));\n                this.pos++;\n            }\n            else if (this.stage == 1 /* Label */) {\n                if (!this.nextStage(parseURL(content, skipSpace(content, this.pos), this.start)))\n                    return -1;\n            }\n            else if (this.stage == 2 /* Link */) {\n                let skip = skipSpace(content, this.pos), end = 0;\n                if (skip > this.pos) {\n                    let title = parseLinkTitle(content, skip, this.start);\n                    if (title) {\n                        let titleEnd = lineEnd(content, title.to - this.start);\n                        if (titleEnd > 0) {\n                            this.nextStage(title);\n                            end = titleEnd;\n                        }\n                    }\n                }\n                if (!end)\n                    end = lineEnd(content, this.pos);\n                return end > 0 && end < content.length ? end : -1;\n            }\n            else { // RefStage.Title\n                return lineEnd(content, this.pos);\n            }\n        }\n    }\n}\nfunction lineEnd(text, pos) {\n    for (; pos < text.length; pos++) {\n        let next = text.charCodeAt(pos);\n        if (next == 10)\n            break;\n        if (!space(next))\n            return -1;\n    }\n    return pos;\n}\nclass SetextHeadingParser {\n    nextLine(cx, line, leaf) {\n        let underline = line.depth < cx.stack.length ? -1 : isSetextUnderline(line);\n        let next = line.next;\n        if (underline < 0)\n            return false;\n        let underlineMark = elt(Type.HeaderMark, cx.lineStart + line.pos, cx.lineStart + underline);\n        cx.nextLine();\n        cx.addLeafElement(leaf, elt(next == 61 ? Type.SetextHeading1 : Type.SetextHeading2, leaf.start, cx.prevLineEnd(), [\n            ...cx.parser.parseInline(leaf.content, leaf.start),\n            underlineMark\n        ]));\n        return true;\n    }\n    finish() {\n        return false;\n    }\n}\nconst DefaultLeafBlocks = {\n    LinkReference(_, leaf) { return leaf.content.charCodeAt(0) == 91 /* '[' */ ? new LinkReferenceParser(leaf) : null; },\n    SetextHeading() { return new SetextHeadingParser; }\n};\nconst DefaultEndLeaf = [\n    (_, line) => isAtxHeading(line) >= 0,\n    (_, line) => isFencedCode(line) >= 0,\n    (_, line) => isBlockquote(line) >= 0,\n    (p, line) => isBulletList(line, p, true) >= 0,\n    (p, line) => isOrderedList(line, p, true) >= 0,\n    (p, line) => isHorizontalRule(line, p, true) >= 0,\n    (p, line) => isHTMLBlock(line, p, true) >= 0\n];\nconst scanLineResult = { text: \"\", end: 0 };\n/// Block-level parsing functions get access to this context object.\nclass BlockContext {\n    /// @internal\n    constructor(\n    /// The parser configuration used.\n    parser, \n    /// @internal\n    input, fragments, \n    /// @internal\n    ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.line = new Line();\n        this.atEnd = false;\n        /// @internal\n        this.dontInject = new Set;\n        this.stoppedAt = null;\n        /// The range index that absoluteLineStart points into @internal\n        this.rangeI = 0;\n        this.to = ranges[ranges.length - 1].to;\n        this.lineStart = this.absoluteLineStart = this.absoluteLineEnd = ranges[0].from;\n        this.block = CompositeBlock.create(Type.Document, 0, this.lineStart, 0, 0);\n        this.stack = [this.block];\n        this.fragments = fragments.length ? new FragmentCursor(fragments, input) : null;\n        this.readLine();\n    }\n    get parsedPos() {\n        return this.absoluteLineStart;\n    }\n    advance() {\n        if (this.stoppedAt != null && this.absoluteLineStart > this.stoppedAt)\n            return this.finish();\n        let { line } = this;\n        for (;;) {\n            while (line.depth < this.stack.length)\n                this.finishContext();\n            for (let mark of line.markers)\n                this.addNode(mark.type, mark.from, mark.to);\n            if (line.pos < line.text.length)\n                break;\n            // Empty line\n            if (!this.nextLine())\n                return this.finish();\n        }\n        if (this.fragments && this.reuseFragment(line.basePos))\n            return null;\n        start: for (;;) {\n            for (let type of this.parser.blockParsers)\n                if (type) {\n                    let result = type(this, line);\n                    if (result != false) {\n                        if (result == true)\n                            return null;\n                        line.forward();\n                        continue start;\n                    }\n                }\n            break;\n        }\n        let leaf = new LeafBlock(this.lineStart + line.pos, line.text.slice(line.pos));\n        for (let parse of this.parser.leafBlockParsers)\n            if (parse) {\n                let parser = parse(this, leaf);\n                if (parser)\n                    leaf.parsers.push(parser);\n            }\n        lines: while (this.nextLine()) {\n            if (line.pos == line.text.length)\n                break;\n            if (line.indent < line.baseIndent + 4) {\n                for (let stop of this.parser.endLeafBlock)\n                    if (stop(this, line, leaf))\n                        break lines;\n            }\n            for (let parser of leaf.parsers)\n                if (parser.nextLine(this, line, leaf))\n                    return null;\n            leaf.content += \"\\n\" + line.scrub();\n            for (let m of line.markers)\n                leaf.marks.push(m);\n        }\n        this.finishLeaf(leaf);\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    reuseFragment(start) {\n        if (!this.fragments.moveTo(this.absoluteLineStart + start, this.absoluteLineStart) ||\n            !this.fragments.matches(this.block.hash))\n            return false;\n        let taken = this.fragments.takeNodes(this);\n        if (!taken)\n            return false;\n        let withoutGaps = taken, end = this.absoluteLineStart + taken;\n        for (let i = 1; i < this.ranges.length; i++) {\n            let gapFrom = this.ranges[i - 1].to, gapTo = this.ranges[i].from;\n            if (gapFrom >= this.lineStart && gapTo < end)\n                withoutGaps -= gapTo - gapFrom;\n        }\n        this.lineStart += withoutGaps;\n        this.absoluteLineStart += taken;\n        this.moveRangeI();\n        if (this.absoluteLineStart < this.to) {\n            this.lineStart++;\n            this.absoluteLineStart++;\n            this.readLine();\n        }\n        else {\n            this.atEnd = true;\n            this.readLine();\n        }\n        return true;\n    }\n    /// The number of parent blocks surrounding the current block.\n    get depth() {\n        return this.stack.length;\n    }\n    /// Get the type of the parent block at the given depth. When no\n    /// depth is passed, return the type of the innermost parent.\n    parentType(depth = this.depth - 1) {\n        return this.parser.nodeSet.types[this.stack[depth].type];\n    }\n    /// Move to the next input line. This should only be called by\n    /// (non-composite) [block parsers](#BlockParser.parse) that consume\n    /// the line directly, or leaf block parser\n    /// [`nextLine`](#LeafBlockParser.nextLine) methods when they\n    /// consume the current line (and return true).\n    nextLine() {\n        this.lineStart += this.line.text.length;\n        if (this.absoluteLineEnd >= this.to) {\n            this.absoluteLineStart = this.absoluteLineEnd;\n            this.atEnd = true;\n            this.readLine();\n            return false;\n        }\n        else {\n            this.lineStart++;\n            this.absoluteLineStart = this.absoluteLineEnd + 1;\n            this.moveRangeI();\n            this.readLine();\n            return true;\n        }\n    }\n    moveRangeI() {\n        while (this.rangeI < this.ranges.length - 1 && this.absoluteLineStart >= this.ranges[this.rangeI].to)\n            this.rangeI++;\n    }\n    /// @internal\n    scanLine(start) {\n        let r = scanLineResult;\n        r.end = start;\n        if (start >= this.to) {\n            r.text = \"\";\n        }\n        else {\n            r.text = this.lineChunkAt(r.end);\n            r.end += r.text.length;\n            if (this.ranges.length > 1) {\n                let textOffset = this.absoluteLineStart, rangeI = this.rangeI;\n                while (this.ranges[rangeI].to < r.end) {\n                    rangeI++;\n                    let nextFrom = this.ranges[rangeI].from;\n                    let after = this.lineChunkAt(nextFrom);\n                    r.end = nextFrom + after.length;\n                    r.text = r.text.slice(0, this.ranges[rangeI - 1].to - textOffset) + after;\n                    textOffset = r.end - r.text.length;\n                }\n            }\n        }\n        return r;\n    }\n    /// @internal\n    readLine() {\n        let { line } = this, { text, end } = this.scanLine(this.absoluteLineStart);\n        this.absoluteLineEnd = end;\n        line.reset(text);\n        for (; line.depth < this.stack.length; line.depth++) {\n            let cx = this.stack[line.depth], handler = this.parser.skipContextMarkup[cx.type];\n            if (!handler)\n                throw new Error(\"Unhandled block context \" + Type[cx.type]);\n            if (!handler(cx, this, line))\n                break;\n            line.forward();\n        }\n    }\n    lineChunkAt(pos) {\n        let next = this.input.chunk(pos), text;\n        if (!this.input.lineChunks) {\n            let eol = next.indexOf(\"\\n\");\n            text = eol < 0 ? next : next.slice(0, eol);\n        }\n        else {\n            text = next == \"\\n\" ? \"\" : next;\n        }\n        return pos + text.length > this.to ? text.slice(0, this.to - pos) : text;\n    }\n    /// The end position of the previous line.\n    prevLineEnd() { return this.atEnd ? this.lineStart : this.lineStart - 1; }\n    /// @internal\n    startContext(type, start, value = 0) {\n        this.block = CompositeBlock.create(type, value, this.lineStart + start, this.block.hash, this.lineStart + this.line.text.length);\n        this.stack.push(this.block);\n    }\n    /// Start a composite block. Should only be called from [block\n    /// parser functions](#BlockParser.parse) that return null.\n    startComposite(type, start, value = 0) {\n        this.startContext(this.parser.getNodeType(type), start, value);\n    }\n    /// @internal\n    addNode(block, from, to) {\n        if (typeof block == \"number\")\n            block = new Tree(this.parser.nodeSet.types[block], none, none, (to !== null && to !== void 0 ? to : this.prevLineEnd()) - from);\n        this.block.addChild(block, from - this.block.from);\n    }\n    /// Add a block element. Can be called by [block\n    /// parsers](#BlockParser.parse).\n    addElement(elt) {\n        this.block.addChild(elt.toTree(this.parser.nodeSet), elt.from - this.block.from);\n    }\n    /// Add a block element from a [leaf parser](#LeafBlockParser). This\n    /// makes sure any extra composite block markup (such as blockquote\n    /// markers) inside the block are also added to the syntax tree.\n    addLeafElement(leaf, elt) {\n        this.addNode(this.buffer\n            .writeElements(injectMarks(elt.children, leaf.marks), -elt.from)\n            .finish(elt.type, elt.to - elt.from), elt.from);\n    }\n    /// @internal\n    finishContext() {\n        let cx = this.stack.pop();\n        let top = this.stack[this.stack.length - 1];\n        top.addChild(cx.toTree(this.parser.nodeSet), cx.from - top.from);\n        this.block = top;\n    }\n    finish() {\n        while (this.stack.length > 1)\n            this.finishContext();\n        return this.addGaps(this.block.toTree(this.parser.nodeSet, this.lineStart));\n    }\n    addGaps(tree) {\n        return this.ranges.length > 1 ? injectGaps(this.ranges, 0, tree.topNode, this.ranges[0].from, this.dontInject) : tree;\n    }\n    /// @internal\n    finishLeaf(leaf) {\n        for (let parser of leaf.parsers)\n            if (parser.finish(this, leaf))\n                return;\n        let inline = injectMarks(this.parser.parseInline(leaf.content, leaf.start), leaf.marks);\n        this.addNode(this.buffer\n            .writeElements(inline, -leaf.start)\n            .finish(Type.Paragraph, leaf.content.length), leaf.start);\n    }\n    elt(type, from, to, children) {\n        if (typeof type == \"string\")\n            return elt(this.parser.getNodeType(type), from, to, children);\n        return new TreeElement(type, from);\n    }\n    /// @internal\n    get buffer() { return new Buffer(this.parser.nodeSet); }\n}\nfunction injectGaps(ranges, rangeI, tree, offset, dont) {\n    if (dont.has(tree.tree))\n        return tree.tree;\n    let rangeEnd = ranges[rangeI].to;\n    let children = [], positions = [], start = tree.from + offset;\n    function movePastNext(upto, inclusive) {\n        while (inclusive ? upto >= rangeEnd : upto > rangeEnd) {\n            let size = ranges[rangeI + 1].from - rangeEnd;\n            offset += size;\n            upto += size;\n            rangeI++;\n            rangeEnd = ranges[rangeI].to;\n        }\n    }\n    for (let ch = tree.firstChild; ch; ch = ch.nextSibling) {\n        movePastNext(ch.from + offset, true);\n        let from = ch.from + offset, node;\n        if (ch.to + offset > rangeEnd) {\n            node = injectGaps(ranges, rangeI, ch, offset, dont);\n            movePastNext(ch.to + offset, false);\n        }\n        else {\n            node = ch.toTree();\n        }\n        children.push(node);\n        positions.push(from - start);\n    }\n    movePastNext(tree.to + offset, false);\n    return new Tree(tree.type, children, positions, tree.to + offset - start, tree.tree ? tree.tree.propValues : undefined);\n}\n/// A Markdown parser configuration.\nclass MarkdownParser extends Parser {\n    /// @internal\n    constructor(\n    /// The parser's syntax [node\n    /// types](https://lezer.codemirror.net/docs/ref/#common.NodeSet).\n    nodeSet, \n    /// @internal\n    blockParsers, \n    /// @internal\n    leafBlockParsers, \n    /// @internal\n    blockNames, \n    /// @internal\n    endLeafBlock, \n    /// @internal\n    skipContextMarkup, \n    /// @internal\n    inlineParsers, \n    /// @internal\n    inlineNames, \n    /// @internal\n    wrappers) {\n        super();\n        this.nodeSet = nodeSet;\n        this.blockParsers = blockParsers;\n        this.leafBlockParsers = leafBlockParsers;\n        this.blockNames = blockNames;\n        this.endLeafBlock = endLeafBlock;\n        this.skipContextMarkup = skipContextMarkup;\n        this.inlineParsers = inlineParsers;\n        this.inlineNames = inlineNames;\n        this.wrappers = wrappers;\n        /// @internal\n        this.nodeTypes = Object.create(null);\n        for (let t of nodeSet.types)\n            this.nodeTypes[t.name] = t.id;\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new BlockContext(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /// Reconfigure the parser.\n    configure(spec) {\n        let config = resolveConfig(spec);\n        if (!config)\n            return this;\n        let { nodeSet, skipContextMarkup } = this;\n        let blockParsers = this.blockParsers.slice(), leafBlockParsers = this.leafBlockParsers.slice(), blockNames = this.blockNames.slice(), inlineParsers = this.inlineParsers.slice(), inlineNames = this.inlineNames.slice(), endLeafBlock = this.endLeafBlock.slice(), wrappers = this.wrappers;\n        if (nonEmpty(config.defineNodes)) {\n            skipContextMarkup = Object.assign({}, skipContextMarkup);\n            let nodeTypes = nodeSet.types.slice(), styles;\n            for (let s of config.defineNodes) {\n                let { name, block, composite, style } = typeof s == \"string\" ? { name: s } : s;\n                if (nodeTypes.some(t => t.name == name))\n                    continue;\n                if (composite)\n                    skipContextMarkup[nodeTypes.length] =\n                        (bl, cx, line) => composite(cx, line, bl.value);\n                let id = nodeTypes.length;\n                let group = composite ? [\"Block\", \"BlockContext\"] : !block ? undefined\n                    : id >= Type.ATXHeading1 && id <= Type.SetextHeading2 ? [\"Block\", \"LeafBlock\", \"Heading\"] : [\"Block\", \"LeafBlock\"];\n                nodeTypes.push(NodeType.define({\n                    id,\n                    name,\n                    props: group && [[NodeProp.group, group]]\n                }));\n                if (style) {\n                    if (!styles)\n                        styles = {};\n                    if (Array.isArray(style) || style instanceof Tag)\n                        styles[name] = style;\n                    else\n                        Object.assign(styles, style);\n                }\n            }\n            nodeSet = new NodeSet(nodeTypes);\n            if (styles)\n                nodeSet = nodeSet.extend(styleTags(styles));\n        }\n        if (nonEmpty(config.props))\n            nodeSet = nodeSet.extend(...config.props);\n        if (nonEmpty(config.remove)) {\n            for (let rm of config.remove) {\n                let block = this.blockNames.indexOf(rm), inline = this.inlineNames.indexOf(rm);\n                if (block > -1)\n                    blockParsers[block] = leafBlockParsers[block] = undefined;\n                if (inline > -1)\n                    inlineParsers[inline] = undefined;\n            }\n        }\n        if (nonEmpty(config.parseBlock)) {\n            for (let spec of config.parseBlock) {\n                let found = blockNames.indexOf(spec.name);\n                if (found > -1) {\n                    blockParsers[found] = spec.parse;\n                    leafBlockParsers[found] = spec.leaf;\n                }\n                else {\n                    let pos = spec.before ? findName(blockNames, spec.before)\n                        : spec.after ? findName(blockNames, spec.after) + 1 : blockNames.length - 1;\n                    blockParsers.splice(pos, 0, spec.parse);\n                    leafBlockParsers.splice(pos, 0, spec.leaf);\n                    blockNames.splice(pos, 0, spec.name);\n                }\n                if (spec.endLeaf)\n                    endLeafBlock.push(spec.endLeaf);\n            }\n        }\n        if (nonEmpty(config.parseInline)) {\n            for (let spec of config.parseInline) {\n                let found = inlineNames.indexOf(spec.name);\n                if (found > -1) {\n                    inlineParsers[found] = spec.parse;\n                }\n                else {\n                    let pos = spec.before ? findName(inlineNames, spec.before)\n                        : spec.after ? findName(inlineNames, spec.after) + 1 : inlineNames.length - 1;\n                    inlineParsers.splice(pos, 0, spec.parse);\n                    inlineNames.splice(pos, 0, spec.name);\n                }\n            }\n        }\n        if (config.wrap)\n            wrappers = wrappers.concat(config.wrap);\n        return new MarkdownParser(nodeSet, blockParsers, leafBlockParsers, blockNames, endLeafBlock, skipContextMarkup, inlineParsers, inlineNames, wrappers);\n    }\n    /// @internal\n    getNodeType(name) {\n        let found = this.nodeTypes[name];\n        if (found == null)\n            throw new RangeError(`Unknown node type '${name}'`);\n        return found;\n    }\n    /// Parse the given piece of inline text at the given offset,\n    /// returning an array of [`Element`](#Element) objects representing\n    /// the inline content.\n    parseInline(text, offset) {\n        let cx = new InlineContext(this, text, offset);\n        outer: for (let pos = offset; pos < cx.end;) {\n            let next = cx.char(pos);\n            for (let token of this.inlineParsers)\n                if (token) {\n                    let result = token(cx, next, pos);\n                    if (result >= 0) {\n                        pos = result;\n                        continue outer;\n                    }\n                }\n            pos++;\n        }\n        return cx.resolveMarkers(0);\n    }\n}\nfunction nonEmpty(a) {\n    return a != null && a.length > 0;\n}\nfunction resolveConfig(spec) {\n    if (!Array.isArray(spec))\n        return spec;\n    if (spec.length == 0)\n        return null;\n    let conf = resolveConfig(spec[0]);\n    if (spec.length == 1)\n        return conf;\n    let rest = resolveConfig(spec.slice(1));\n    if (!rest || !conf)\n        return conf || rest;\n    let conc = (a, b) => (a || none).concat(b || none);\n    let wrapA = conf.wrap, wrapB = rest.wrap;\n    return {\n        props: conc(conf.props, rest.props),\n        defineNodes: conc(conf.defineNodes, rest.defineNodes),\n        parseBlock: conc(conf.parseBlock, rest.parseBlock),\n        parseInline: conc(conf.parseInline, rest.parseInline),\n        remove: conc(conf.remove, rest.remove),\n        wrap: !wrapA ? wrapB : !wrapB ? wrapA :\n            (inner, input, fragments, ranges) => wrapA(wrapB(inner, input, fragments, ranges), input, fragments, ranges)\n    };\n}\nfunction findName(names, name) {\n    let found = names.indexOf(name);\n    if (found < 0)\n        throw new RangeError(`Position specified relative to unknown parser ${name}`);\n    return found;\n}\nlet nodeTypes = [NodeType.none];\nfor (let i = 1, name; name = Type[i]; i++) {\n    nodeTypes[i] = NodeType.define({\n        id: i,\n        name,\n        props: i >= Type.Escape ? [] : [[NodeProp.group, i in DefaultSkipMarkup ? [\"Block\", \"BlockContext\"] : [\"Block\", \"LeafBlock\"]]]\n    });\n}\nconst none = [];\nclass Buffer {\n    constructor(nodeSet) {\n        this.nodeSet = nodeSet;\n        this.content = [];\n        this.nodes = [];\n    }\n    write(type, from, to, children = 0) {\n        this.content.push(type, from, to, 4 + children * 4);\n        return this;\n    }\n    writeElements(elts, offset = 0) {\n        for (let e of elts)\n            e.writeTo(this, offset);\n        return this;\n    }\n    finish(type, length) {\n        return Tree.build({\n            buffer: this.content,\n            nodeSet: this.nodeSet,\n            reused: this.nodes,\n            topID: type,\n            length\n        });\n    }\n}\n/// Elements are used to compose syntax nodes during parsing.\nclass Element {\n    /// @internal\n    constructor(\n    /// The node's\n    /// [id](https://lezer.codemirror.net/docs/ref/#common.NodeType.id).\n    type, \n    /// The start of the node, as an offset from the start of the document.\n    from, \n    /// The end of the node.\n    to, \n    /// The node's child nodes @internal\n    children = none) {\n        this.type = type;\n        this.from = from;\n        this.to = to;\n        this.children = children;\n    }\n    /// @internal\n    writeTo(buf, offset) {\n        let startOff = buf.content.length;\n        buf.writeElements(this.children, offset);\n        buf.content.push(this.type, this.from + offset, this.to + offset, buf.content.length + 4 - startOff);\n    }\n    /// @internal\n    toTree(nodeSet) {\n        return new Buffer(nodeSet).writeElements(this.children, -this.from).finish(this.type, this.to - this.from);\n    }\n}\nclass TreeElement {\n    constructor(tree, from) {\n        this.tree = tree;\n        this.from = from;\n    }\n    get to() { return this.from + this.tree.length; }\n    get type() { return this.tree.type.id; }\n    get children() { return none; }\n    writeTo(buf, offset) {\n        buf.nodes.push(this.tree);\n        buf.content.push(buf.nodes.length - 1, this.from + offset, this.to + offset, -1);\n    }\n    toTree() { return this.tree; }\n}\nfunction elt(type, from, to, children) {\n    return new Element(type, from, to, children);\n}\nconst EmphasisUnderscore = { resolve: \"Emphasis\", mark: \"EmphasisMark\" };\nconst EmphasisAsterisk = { resolve: \"Emphasis\", mark: \"EmphasisMark\" };\nconst LinkStart = {}, ImageStart = {};\nclass InlineDelimiter {\n    constructor(type, from, to, side) {\n        this.type = type;\n        this.from = from;\n        this.to = to;\n        this.side = side;\n    }\n}\nconst Escapable = \"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\";\nlet Punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\u2010-\\u2027]/;\ntry {\n    Punctuation = new RegExp(\"[\\\\p{Pc}|\\\\p{Pd}|\\\\p{Pe}|\\\\p{Pf}|\\\\p{Pi}|\\\\p{Po}|\\\\p{Ps}]\", \"u\");\n}\ncatch (_) { }\nconst DefaultInline = {\n    Escape(cx, next, start) {\n        if (next != 92 /* '\\\\' */ || start == cx.end - 1)\n            return -1;\n        let escaped = cx.char(start + 1);\n        for (let i = 0; i < Escapable.length; i++)\n            if (Escapable.charCodeAt(i) == escaped)\n                return cx.append(elt(Type.Escape, start, start + 2));\n        return -1;\n    },\n    Entity(cx, next, start) {\n        if (next != 38 /* '&' */)\n            return -1;\n        let m = /^(?:#\\d+|#x[a-f\\d]+|\\w+);/i.exec(cx.slice(start + 1, start + 31));\n        return m ? cx.append(elt(Type.Entity, start, start + 1 + m[0].length)) : -1;\n    },\n    InlineCode(cx, next, start) {\n        if (next != 96 /* '`' */ || start && cx.char(start - 1) == 96)\n            return -1;\n        let pos = start + 1;\n        while (pos < cx.end && cx.char(pos) == 96)\n            pos++;\n        let size = pos - start, curSize = 0;\n        for (; pos < cx.end; pos++) {\n            if (cx.char(pos) == 96) {\n                curSize++;\n                if (curSize == size && cx.char(pos + 1) != 96)\n                    return cx.append(elt(Type.InlineCode, start, pos + 1, [\n                        elt(Type.CodeMark, start, start + size),\n                        elt(Type.CodeMark, pos + 1 - size, pos + 1)\n                    ]));\n            }\n            else {\n                curSize = 0;\n            }\n        }\n        return -1;\n    },\n    HTMLTag(cx, next, start) {\n        if (next != 60 /* '<' */ || start == cx.end - 1)\n            return -1;\n        let after = cx.slice(start + 1, cx.end);\n        let url = /^(?:[a-z][-\\w+.]+:[^\\s>]+|[a-z\\d.!#$%&'*+/=?^_`{|}~-]+@[a-z\\d](?:[a-z\\d-]{0,61}[a-z\\d])?(?:\\.[a-z\\d](?:[a-z\\d-]{0,61}[a-z\\d])?)*)>/i.exec(after);\n        if (url)\n            return cx.append(elt(Type.URL, start, start + 1 + url[0].length));\n        let comment = /^!--[^>](?:-[^-]|[^-])*?-->/i.exec(after);\n        if (comment)\n            return cx.append(elt(Type.Comment, start, start + 1 + comment[0].length));\n        let procInst = /^\\?[^]*?\\?>/.exec(after);\n        if (procInst)\n            return cx.append(elt(Type.ProcessingInstruction, start, start + 1 + procInst[0].length));\n        let m = /^(?:![A-Z][^]*?>|!\\[CDATA\\[[^]*?\\]\\]>|\\/\\s*[a-zA-Z][\\w-]*\\s*>|\\s*[a-zA-Z][\\w-]*(\\s+[a-zA-Z:_][\\w-.:]*(?:\\s*=\\s*(?:[^\\s\"'=<>`]+|'[^']*'|\"[^\"]*\"))?)*\\s*(\\/\\s*)?>)/.exec(after);\n        if (!m)\n            return -1;\n        return cx.append(elt(Type.HTMLTag, start, start + 1 + m[0].length));\n    },\n    Emphasis(cx, next, start) {\n        if (next != 95 && next != 42)\n            return -1;\n        let pos = start + 1;\n        while (cx.char(pos) == next)\n            pos++;\n        let before = cx.slice(start - 1, start), after = cx.slice(pos, pos + 1);\n        let pBefore = Punctuation.test(before), pAfter = Punctuation.test(after);\n        let sBefore = /\\s|^$/.test(before), sAfter = /\\s|^$/.test(after);\n        let leftFlanking = !sAfter && (!pAfter || sBefore || pBefore);\n        let rightFlanking = !sBefore && (!pBefore || sAfter || pAfter);\n        let canOpen = leftFlanking && (next == 42 || !rightFlanking || pBefore);\n        let canClose = rightFlanking && (next == 42 || !leftFlanking || pAfter);\n        return cx.append(new InlineDelimiter(next == 95 ? EmphasisUnderscore : EmphasisAsterisk, start, pos, (canOpen ? 1 /* Open */ : 0) | (canClose ? 2 /* Close */ : 0)));\n    },\n    HardBreak(cx, next, start) {\n        if (next == 92 /* '\\\\' */ && cx.char(start + 1) == 10 /* '\\n' */)\n            return cx.append(elt(Type.HardBreak, start, start + 2));\n        if (next == 32) {\n            let pos = start + 1;\n            while (cx.char(pos) == 32)\n                pos++;\n            if (cx.char(pos) == 10 && pos >= start + 2)\n                return cx.append(elt(Type.HardBreak, start, pos + 1));\n        }\n        return -1;\n    },\n    Link(cx, next, start) {\n        return next == 91 /* '[' */ ? cx.append(new InlineDelimiter(LinkStart, start, start + 1, 1 /* Open */)) : -1;\n    },\n    Image(cx, next, start) {\n        return next == 33 /* '!' */ && cx.char(start + 1) == 91 /* '[' */\n            ? cx.append(new InlineDelimiter(ImageStart, start, start + 2, 1 /* Open */)) : -1;\n    },\n    LinkEnd(cx, next, start) {\n        if (next != 93 /* ']' */)\n            return -1;\n        // Scanning back to the next link/image start marker\n        for (let i = cx.parts.length - 1; i >= 0; i--) {\n            let part = cx.parts[i];\n            if (part instanceof InlineDelimiter && (part.type == LinkStart || part.type == ImageStart)) {\n                // If this one has been set invalid (because it would produce\n                // a nested link) or there's no valid link here ignore both.\n                if (!part.side || cx.skipSpace(part.to) == start && !/[(\\[]/.test(cx.slice(start + 1, start + 2))) {\n                    cx.parts[i] = null;\n                    return -1;\n                }\n                // Finish the content and replace the entire range in\n                // this.parts with the link/image node.\n                let content = cx.takeContent(i);\n                let link = cx.parts[i] = finishLink(cx, content, part.type == LinkStart ? Type.Link : Type.Image, part.from, start + 1);\n                // Set any open-link markers before this link to invalid.\n                if (part.type == LinkStart)\n                    for (let j = 0; j < i; j++) {\n                        let p = cx.parts[j];\n                        if (p instanceof InlineDelimiter && p.type == LinkStart)\n                            p.side = 0;\n                    }\n                return link.to;\n            }\n        }\n        return -1;\n    }\n};\nfunction finishLink(cx, content, type, start, startPos) {\n    let { text } = cx, next = cx.char(startPos), endPos = startPos;\n    content.unshift(elt(Type.LinkMark, start, start + (type == Type.Image ? 2 : 1)));\n    content.push(elt(Type.LinkMark, startPos - 1, startPos));\n    if (next == 40 /* '(' */) {\n        let pos = cx.skipSpace(startPos + 1);\n        let dest = parseURL(text, pos - cx.offset, cx.offset), title;\n        if (dest) {\n            pos = cx.skipSpace(dest.to);\n            title = parseLinkTitle(text, pos - cx.offset, cx.offset);\n            if (title)\n                pos = cx.skipSpace(title.to);\n        }\n        if (cx.char(pos) == 41 /* ')' */) {\n            content.push(elt(Type.LinkMark, startPos, startPos + 1));\n            endPos = pos + 1;\n            if (dest)\n                content.push(dest);\n            if (title)\n                content.push(title);\n            content.push(elt(Type.LinkMark, pos, endPos));\n        }\n    }\n    else if (next == 91 /* '[' */) {\n        let label = parseLinkLabel(text, startPos - cx.offset, cx.offset, false);\n        if (label) {\n            content.push(label);\n            endPos = label.to;\n        }\n    }\n    return elt(type, start, endPos, content);\n}\n// These return `null` when falling off the end of the input, `false`\n// when parsing fails otherwise (for use in the incremental link\n// reference parser).\nfunction parseURL(text, start, offset) {\n    let next = text.charCodeAt(start);\n    if (next == 60 /* '<' */) {\n        for (let pos = start + 1; pos < text.length; pos++) {\n            let ch = text.charCodeAt(pos);\n            if (ch == 62 /* '>' */)\n                return elt(Type.URL, start + offset, pos + 1 + offset);\n            if (ch == 60 || ch == 10 /* '<\\n' */)\n                return false;\n        }\n        return null;\n    }\n    else {\n        let depth = 0, pos = start;\n        for (let escaped = false; pos < text.length; pos++) {\n            let ch = text.charCodeAt(pos);\n            if (space(ch)) {\n                break;\n            }\n            else if (escaped) {\n                escaped = false;\n            }\n            else if (ch == 40 /* '(' */) {\n                depth++;\n            }\n            else if (ch == 41 /* ')' */) {\n                if (!depth)\n                    break;\n                depth--;\n            }\n            else if (ch == 92 /* '\\\\' */) {\n                escaped = true;\n            }\n        }\n        return pos > start ? elt(Type.URL, start + offset, pos + offset) : pos == text.length ? null : false;\n    }\n}\nfunction parseLinkTitle(text, start, offset) {\n    let next = text.charCodeAt(start);\n    if (next != 39 && next != 34 && next != 40 /* '\"\\'(' */)\n        return false;\n    let end = next == 40 ? 41 : next;\n    for (let pos = start + 1, escaped = false; pos < text.length; pos++) {\n        let ch = text.charCodeAt(pos);\n        if (escaped)\n            escaped = false;\n        else if (ch == end)\n            return elt(Type.LinkTitle, start + offset, pos + 1 + offset);\n        else if (ch == 92 /* '\\\\' */)\n            escaped = true;\n    }\n    return null;\n}\nfunction parseLinkLabel(text, start, offset, requireNonWS) {\n    for (let escaped = false, pos = start + 1, end = Math.min(text.length, pos + 999); pos < end; pos++) {\n        let ch = text.charCodeAt(pos);\n        if (escaped)\n            escaped = false;\n        else if (ch == 93 /* ']' */)\n            return requireNonWS ? false : elt(Type.LinkLabel, start + offset, pos + 1 + offset);\n        else {\n            if (requireNonWS && !space(ch))\n                requireNonWS = false;\n            if (ch == 91 /* '[' */)\n                return false;\n            else if (ch == 92 /* '\\\\' */)\n                escaped = true;\n        }\n    }\n    return null;\n}\n/// Inline parsing functions get access to this context, and use it to\n/// read the content and emit syntax nodes.\nclass InlineContext {\n    /// @internal\n    constructor(\n    /// The parser that is being used.\n    parser, \n    /// The text of this inline section.\n    text, \n    /// The starting offset of the section in the document.\n    offset) {\n        this.parser = parser;\n        this.text = text;\n        this.offset = offset;\n        /// @internal\n        this.parts = [];\n    }\n    /// Get the character code at the given (document-relative)\n    /// position.\n    char(pos) { return pos >= this.end ? -1 : this.text.charCodeAt(pos - this.offset); }\n    /// The position of the end of this inline section.\n    get end() { return this.offset + this.text.length; }\n    /// Get a substring of this inline section. Again uses\n    /// document-relative positions.\n    slice(from, to) { return this.text.slice(from - this.offset, to - this.offset); }\n    /// @internal\n    append(elt) {\n        this.parts.push(elt);\n        return elt.to;\n    }\n    /// Add a [delimiter](#DelimiterType) at this given position. `open`\n    /// and `close` indicate whether this delimiter is opening, closing,\n    /// or both. Returns the end of the delimiter, for convenient\n    /// returning from [parse functions](#InlineParser.parse).\n    addDelimiter(type, from, to, open, close) {\n        return this.append(new InlineDelimiter(type, from, to, (open ? 1 /* Open */ : 0) | (close ? 2 /* Close */ : 0)));\n    }\n    /// Add an inline element. Returns the end of the element.\n    addElement(elt) {\n        return this.append(elt);\n    }\n    /// @internal\n    resolveMarkers(from) {\n        for (let i = from; i < this.parts.length; i++) {\n            let close = this.parts[i];\n            if (!(close instanceof InlineDelimiter && close.type.resolve && (close.side & 2 /* Close */)))\n                continue;\n            let emp = close.type == EmphasisUnderscore || close.type == EmphasisAsterisk;\n            let closeSize = close.to - close.from;\n            let open, j = i - 1;\n            for (; j >= from; j--) {\n                let part = this.parts[j];\n                if (!(part instanceof InlineDelimiter && (part.side & 1 /* Open */) && part.type == close.type) ||\n                    emp && ((close.side & 1 /* Open */) || (part.side & 2 /* Close */)) &&\n                        (part.to - part.from + closeSize) % 3 == 0 && ((part.to - part.from) % 3 || closeSize % 3))\n                    continue;\n                open = part;\n                break;\n            }\n            if (!open)\n                continue;\n            let type = close.type.resolve, content = [];\n            let start = open.from, end = close.to;\n            if (emp) {\n                let size = Math.min(2, open.to - open.from, closeSize);\n                start = open.to - size;\n                end = close.from + size;\n                type = size == 1 ? \"Emphasis\" : \"StrongEmphasis\";\n            }\n            if (open.type.mark)\n                content.push(this.elt(open.type.mark, start, open.to));\n            for (let k = j + 1; k < i; k++) {\n                if (this.parts[k] instanceof Element)\n                    content.push(this.parts[k]);\n                this.parts[k] = null;\n            }\n            if (close.type.mark)\n                content.push(this.elt(close.type.mark, close.from, end));\n            let element = this.elt(type, start, end, content);\n            this.parts[j] = emp && open.from != start ? new InlineDelimiter(open.type, open.from, start, open.side) : null;\n            let keep = this.parts[i] = emp && close.to != end ? new InlineDelimiter(close.type, end, close.to, close.side) : null;\n            if (keep)\n                this.parts.splice(i, 0, element);\n            else\n                this.parts[i] = element;\n        }\n        let result = [];\n        for (let i = from; i < this.parts.length; i++) {\n            let part = this.parts[i];\n            if (part instanceof Element)\n                result.push(part);\n        }\n        return result;\n    }\n    /// Find an opening delimiter of the given type. Returns `null` if\n    /// no delimiter is found, or an index that can be passed to\n    /// [`takeContent`](#InlineContext.takeContent) otherwise.\n    findOpeningDelimiter(type) {\n        for (let i = this.parts.length - 1; i >= 0; i--) {\n            let part = this.parts[i];\n            if (part instanceof InlineDelimiter && part.type == type)\n                return i;\n        }\n        return null;\n    }\n    /// Remove all inline elements and delimiters starting from the\n    /// given index (which you should get from\n    /// [`findOpeningDelimiter`](#InlineContext.findOpeningDelimiter),\n    /// resolve delimiters inside of them, and return them as an array\n    /// of elements.\n    takeContent(startIndex) {\n        let content = this.resolveMarkers(startIndex);\n        this.parts.length = startIndex;\n        return content;\n    }\n    /// Skip space after the given (document) position, returning either\n    /// the position of the next non-space character or the end of the\n    /// section.\n    skipSpace(from) { return skipSpace(this.text, from - this.offset) + this.offset; }\n    elt(type, from, to, children) {\n        if (typeof type == \"string\")\n            return elt(this.parser.getNodeType(type), from, to, children);\n        return new TreeElement(type, from);\n    }\n}\nfunction injectMarks(elements, marks) {\n    if (!marks.length)\n        return elements;\n    if (!elements.length)\n        return marks;\n    let elts = elements.slice(), eI = 0;\n    for (let mark of marks) {\n        while (eI < elts.length && elts[eI].to < mark.to)\n            eI++;\n        if (eI < elts.length && elts[eI].from < mark.from) {\n            let e = elts[eI];\n            if (e instanceof Element)\n                elts[eI] = new Element(e.type, e.from, e.to, injectMarks(e.children, [mark]));\n        }\n        else {\n            elts.splice(eI++, 0, mark);\n        }\n    }\n    return elts;\n}\n// These are blocks that can span blank lines, and should thus only be\n// reused if their next sibling is also being reused.\nconst NotLast = [Type.CodeBlock, Type.ListItem, Type.OrderedList, Type.BulletList];\nclass FragmentCursor {\n    constructor(fragments, input) {\n        this.fragments = fragments;\n        this.input = input;\n        // Index into fragment array\n        this.i = 0;\n        // Active fragment\n        this.fragment = null;\n        this.fragmentEnd = -1;\n        // Cursor into the current fragment, if any. When `moveTo` returns\n        // true, this points at the first block after `pos`.\n        this.cursor = null;\n        if (fragments.length)\n            this.fragment = fragments[this.i++];\n    }\n    nextFragment() {\n        this.fragment = this.i < this.fragments.length ? this.fragments[this.i++] : null;\n        this.cursor = null;\n        this.fragmentEnd = -1;\n    }\n    moveTo(pos, lineStart) {\n        while (this.fragment && this.fragment.to <= pos)\n            this.nextFragment();\n        if (!this.fragment || this.fragment.from > (pos ? pos - 1 : 0))\n            return false;\n        if (this.fragmentEnd < 0) {\n            let end = this.fragment.to;\n            while (end > 0 && this.input.read(end - 1, end) != \"\\n\")\n                end--;\n            this.fragmentEnd = end ? end - 1 : 0;\n        }\n        let c = this.cursor;\n        if (!c) {\n            c = this.cursor = this.fragment.tree.cursor();\n            c.firstChild();\n        }\n        let rPos = pos + this.fragment.offset;\n        while (c.to <= rPos)\n            if (!c.parent())\n                return false;\n        for (;;) {\n            if (c.from >= rPos)\n                return this.fragment.from <= lineStart;\n            if (!c.childAfter(rPos))\n                return false;\n        }\n    }\n    matches(hash) {\n        let tree = this.cursor.tree;\n        return tree && tree.prop(NodeProp.contextHash) == hash;\n    }\n    takeNodes(cx) {\n        let cur = this.cursor, off = this.fragment.offset, fragEnd = this.fragmentEnd - (this.fragment.openEnd ? 1 : 0);\n        let start = cx.absoluteLineStart, end = start, blockI = cx.block.children.length;\n        let prevEnd = end, prevI = blockI;\n        for (;;) {\n            if (cur.to - off > fragEnd) {\n                if (cur.type.isAnonymous && cur.firstChild())\n                    continue;\n                break;\n            }\n            cx.dontInject.add(cur.tree);\n            cx.addNode(cur.tree, cur.from - off);\n            // Taken content must always end in a block, because incremental\n            // parsing happens on block boundaries. Never stop directly\n            // after an indented code block, since those can continue after\n            // any number of blank lines.\n            if (cur.type.is(\"Block\")) {\n                if (NotLast.indexOf(cur.type.id) < 0) {\n                    end = cur.to - off;\n                    blockI = cx.block.children.length;\n                }\n                else {\n                    end = prevEnd;\n                    blockI = prevI;\n                    prevEnd = cur.to - off;\n                    prevI = cx.block.children.length;\n                }\n            }\n            if (!cur.nextSibling())\n                break;\n        }\n        while (cx.block.children.length > blockI) {\n            cx.block.children.pop();\n            cx.block.positions.pop();\n        }\n        return end - start;\n    }\n}\nconst markdownHighlighting = styleTags({\n    \"Blockquote/...\": tags.quote,\n    HorizontalRule: tags.contentSeparator,\n    \"ATXHeading1/... SetextHeading1/...\": tags.heading1,\n    \"ATXHeading2/... SetextHeading2/...\": tags.heading2,\n    \"ATXHeading3/...\": tags.heading3,\n    \"ATXHeading4/...\": tags.heading4,\n    \"ATXHeading5/...\": tags.heading5,\n    \"ATXHeading6/...\": tags.heading6,\n    \"Comment CommentBlock\": tags.comment,\n    Escape: tags.escape,\n    Entity: tags.character,\n    \"Emphasis/...\": tags.emphasis,\n    \"StrongEmphasis/...\": tags.strong,\n    \"Link/... Image/...\": tags.link,\n    \"OrderedList/... BulletList/...\": tags.list,\n    \"BlockQuote/...\": tags.quote,\n    \"InlineCode CodeText\": tags.monospace,\n    URL: tags.url,\n    \"HeaderMark HardBreak QuoteMark ListMark LinkMark EmphasisMark CodeMark\": tags.processingInstruction,\n    \"CodeInfo LinkLabel\": tags.labelName,\n    LinkTitle: tags.string,\n    Paragraph: tags.content\n});\n/// The default CommonMark parser.\nconst parser = new MarkdownParser(new NodeSet(nodeTypes).extend(markdownHighlighting), Object.keys(DefaultBlockParsers).map(n => DefaultBlockParsers[n]), Object.keys(DefaultBlockParsers).map(n => DefaultLeafBlocks[n]), Object.keys(DefaultBlockParsers), DefaultEndLeaf, DefaultSkipMarkup, Object.keys(DefaultInline).map(n => DefaultInline[n]), Object.keys(DefaultInline), []);\n\nfunction leftOverSpace(node, from, to) {\n    let ranges = [];\n    for (let n = node.firstChild, pos = from;; n = n.nextSibling) {\n        let nextPos = n ? n.from : to;\n        if (nextPos > pos)\n            ranges.push({ from: pos, to: nextPos });\n        if (!n)\n            break;\n        pos = n.to;\n    }\n    return ranges;\n}\n/// Create a Markdown extension to enable nested parsing on code\n/// blocks and/or embedded HTML.\nfunction parseCode(config) {\n    let { codeParser, htmlParser } = config;\n    let wrap = parseMixed((node, input) => {\n        let id = node.type.id;\n        if (codeParser && (id == Type.CodeBlock || id == Type.FencedCode)) {\n            let info = \"\";\n            if (id == Type.FencedCode) {\n                let infoNode = node.node.getChild(Type.CodeInfo);\n                if (infoNode)\n                    info = input.read(infoNode.from, infoNode.to);\n            }\n            let parser = codeParser(info);\n            if (parser)\n                return { parser, overlay: node => node.type.id == Type.CodeText };\n        }\n        else if (htmlParser && (id == Type.HTMLBlock || id == Type.HTMLTag)) {\n            return { parser: htmlParser, overlay: leftOverSpace(node.node, node.from, node.to) };\n        }\n        return null;\n    });\n    return { wrap };\n}\n\nconst StrikethroughDelim = { resolve: \"Strikethrough\", mark: \"StrikethroughMark\" };\n/// An extension that implements\n/// [GFM-style](https://github.github.com/gfm/#strikethrough-extension-)\n/// Strikethrough syntax using `~~` delimiters.\nconst Strikethrough = {\n    defineNodes: [{\n            name: \"Strikethrough\",\n            style: { \"Strikethrough/...\": tags.strikethrough }\n        }, {\n            name: \"StrikethroughMark\",\n            style: tags.processingInstruction\n        }],\n    parseInline: [{\n            name: \"Strikethrough\",\n            parse(cx, next, pos) {\n                if (next != 126 /* '~' */ || cx.char(pos + 1) != 126)\n                    return -1;\n                return cx.addDelimiter(StrikethroughDelim, pos, pos + 2, true, true);\n            },\n            after: \"Emphasis\"\n        }]\n};\nfunction parseRow(cx, line, startI = 0, elts, offset = 0) {\n    let count = 0, first = true, cellStart = -1, cellEnd = -1, esc = false;\n    let parseCell = () => {\n        elts.push(cx.elt(\"TableCell\", offset + cellStart, offset + cellEnd, cx.parser.parseInline(line.slice(cellStart, cellEnd), offset + cellStart)));\n    };\n    for (let i = startI; i < line.length; i++) {\n        let next = line.charCodeAt(i);\n        if (next == 124 /* '|' */ && !esc) {\n            if (!first || cellStart > -1)\n                count++;\n            first = false;\n            if (elts) {\n                if (cellStart > -1)\n                    parseCell();\n                elts.push(cx.elt(\"TableDelimiter\", i + offset, i + offset + 1));\n            }\n            cellStart = cellEnd = -1;\n        }\n        else if (esc || next != 32 && next != 9) {\n            if (cellStart < 0)\n                cellStart = i;\n            cellEnd = i + 1;\n        }\n        esc = !esc && next == 92;\n    }\n    if (cellStart > -1) {\n        count++;\n        if (elts)\n            parseCell();\n    }\n    return count;\n}\nfunction hasPipe(str, start) {\n    for (let i = start; i < str.length; i++) {\n        let next = str.charCodeAt(i);\n        if (next == 124 /* '|' */)\n            return true;\n        if (next == 92 /* '\\\\' */)\n            i++;\n    }\n    return false;\n}\nconst delimiterLine = /^\\|?(\\s*:?-+:?\\s*\\|)+(\\s*:?-+:?\\s*)?$/;\nclass TableParser {\n    constructor() {\n        // Null means we haven't seen the second line yet, false means this\n        // isn't a table, and an array means this is a table and we've\n        // parsed the given rows so far.\n        this.rows = null;\n    }\n    nextLine(cx, line, leaf) {\n        if (this.rows == null) { // Second line\n            this.rows = false;\n            let lineText;\n            if ((line.next == 45 || line.next == 58 || line.next == 124 /* '-:|' */) &&\n                delimiterLine.test(lineText = line.text.slice(line.pos))) {\n                let firstRow = [], firstCount = parseRow(cx, leaf.content, 0, firstRow, leaf.start);\n                if (firstCount == parseRow(cx, lineText, line.pos))\n                    this.rows = [cx.elt(\"TableHeader\", leaf.start, leaf.start + leaf.content.length, firstRow),\n                        cx.elt(\"TableDelimiter\", cx.lineStart + line.pos, cx.lineStart + line.text.length)];\n            }\n        }\n        else if (this.rows) { // Line after the second\n            let content = [];\n            parseRow(cx, line.text, line.pos, content, cx.lineStart);\n            this.rows.push(cx.elt(\"TableRow\", cx.lineStart + line.pos, cx.lineStart + line.text.length, content));\n        }\n        return false;\n    }\n    finish(cx, leaf) {\n        if (!this.rows)\n            return false;\n        cx.addLeafElement(leaf, cx.elt(\"Table\", leaf.start, leaf.start + leaf.content.length, this.rows));\n        return true;\n    }\n}\n/// This extension provides\n/// [GFM-style](https://github.github.com/gfm/#tables-extension-)\n/// tables, using syntax like this:\n///\n/// ```\n/// | head 1 | head 2 |\n/// | ---    | ---    |\n/// | cell 1 | cell 2 |\n/// ```\nconst Table = {\n    defineNodes: [\n        { name: \"Table\", block: true },\n        { name: \"TableHeader\", style: { \"TableHeader/...\": tags.heading } },\n        \"TableRow\",\n        { name: \"TableCell\", style: tags.content },\n        { name: \"TableDelimiter\", style: tags.processingInstruction },\n    ],\n    parseBlock: [{\n            name: \"Table\",\n            leaf(_, leaf) { return hasPipe(leaf.content, 0) ? new TableParser : null; },\n            endLeaf(cx, line, leaf) {\n                if (leaf.parsers.some(p => p instanceof TableParser) || !hasPipe(line.text, line.basePos))\n                    return false;\n                let next = cx.scanLine(cx.absoluteLineEnd + 1).text;\n                return delimiterLine.test(next) && parseRow(cx, line.text, line.basePos) == parseRow(cx, next, line.basePos);\n            },\n            before: \"SetextHeading\"\n        }]\n};\nclass TaskParser {\n    nextLine() { return false; }\n    finish(cx, leaf) {\n        cx.addLeafElement(leaf, cx.elt(\"Task\", leaf.start, leaf.start + leaf.content.length, [\n            cx.elt(\"TaskMarker\", leaf.start, leaf.start + 3),\n            ...cx.parser.parseInline(leaf.content.slice(3), leaf.start + 3)\n        ]));\n        return true;\n    }\n}\n/// Extension providing\n/// [GFM-style](https://github.github.com/gfm/#task-list-items-extension-)\n/// task list items, where list items can be prefixed with `[ ]` or\n/// `[x]` to add a checkbox.\nconst TaskList = {\n    defineNodes: [\n        { name: \"Task\", block: true, style: tags.list },\n        { name: \"TaskMarker\", style: tags.atom }\n    ],\n    parseBlock: [{\n            name: \"TaskList\",\n            leaf(cx, leaf) {\n                return /^\\[[ xX]\\]/.test(leaf.content) && cx.parentType().name == \"ListItem\" ? new TaskParser : null;\n            },\n            after: \"SetextHeading\"\n        }]\n};\n/// Extension bundle containing [`Table`](#Table),\n/// [`TaskList`](#TaskList) and [`Strikethrough`](#Strikethrough).\nconst GFM = [Table, TaskList, Strikethrough];\nfunction parseSubSuper(ch, node, mark) {\n    return (cx, next, pos) => {\n        if (next != ch || cx.char(pos + 1) == ch)\n            return -1;\n        let elts = [cx.elt(mark, pos, pos + 1)];\n        for (let i = pos + 1; i < cx.end; i++) {\n            let next = cx.char(i);\n            if (next == ch)\n                return cx.addElement(cx.elt(node, pos, i + 1, elts.concat(cx.elt(mark, i, i + 1))));\n            if (next == 92 /* '\\\\' */)\n                elts.push(cx.elt(\"Escape\", i, i++ + 2));\n            if (space(next))\n                break;\n        }\n        return -1;\n    };\n}\n/// Extension providing\n/// [Pandoc-style](https://pandoc.org/MANUAL.html#superscripts-and-subscripts)\n/// superscript using `^` markers.\nconst Superscript = {\n    defineNodes: [\n        { name: \"Superscript\", style: tags.special(tags.content) },\n        { name: \"SuperscriptMark\", style: tags.processingInstruction }\n    ],\n    parseInline: [{\n            name: \"Superscript\",\n            parse: parseSubSuper(94 /* '^' */, \"Superscript\", \"SuperscriptMark\")\n        }]\n};\n/// Extension providing\n/// [Pandoc-style](https://pandoc.org/MANUAL.html#superscripts-and-subscripts)\n/// subscript using `~` markers.\nconst Subscript = {\n    defineNodes: [\n        { name: \"Subscript\", style: tags.special(tags.content) },\n        { name: \"SubscriptMark\", style: tags.processingInstruction }\n    ],\n    parseInline: [{\n            name: \"Subscript\",\n            parse: parseSubSuper(126 /* '~' */, \"Subscript\", \"SubscriptMark\")\n        }]\n};\n/// Extension that parses two colons with only letters, underscores,\n/// and numbers between them as `Emoji` nodes.\nconst Emoji = {\n    defineNodes: [{ name: \"Emoji\", style: tags.character }],\n    parseInline: [{\n            name: \"Emoji\",\n            parse(cx, next, pos) {\n                let match;\n                if (next != 58 /* ':' */ || !(match = /^[a-zA-Z_0-9]+:/.exec(cx.slice(pos + 1, cx.end))))\n                    return -1;\n                return cx.addElement(cx.elt(\"Emoji\", pos, pos + 1 + match[0].length));\n            }\n        }]\n};\n\nexport { BlockContext, Element, Emoji, GFM, InlineContext, LeafBlock, Line, MarkdownParser, Strikethrough, Subscript, Superscript, Table, TaskList, parseCode, parser };\n","import { EditorSelection, Prec } from '@codemirror/state';\nimport { keymap } from '@codemirror/view';\nimport { defineLanguageFacet, foldNodeProp, indentNodeProp, languageDataProp, Language, LanguageDescription, ParseContext, syntaxTree, LanguageSupport } from '@codemirror/language';\nimport { parser, GFM, Subscript, Superscript, Emoji, MarkdownParser, parseCode } from '@lezer/markdown';\nimport { html } from '@codemirror/lang-html';\n\nconst data = /*@__PURE__*/defineLanguageFacet({ block: { open: \"<!--\", close: \"-->\" } });\nconst commonmark = /*@__PURE__*/parser.configure({\n    props: [\n        /*@__PURE__*/foldNodeProp.add(type => {\n            if (!type.is(\"Block\") || type.is(\"Document\"))\n                return undefined;\n            return (tree, state) => ({ from: state.doc.lineAt(tree.from).to, to: tree.to });\n        }),\n        /*@__PURE__*/indentNodeProp.add({\n            Document: () => null\n        }),\n        /*@__PURE__*/languageDataProp.add({\n            Document: data\n        })\n    ]\n});\nfunction mkLang(parser) {\n    return new Language(data, parser);\n}\n/**\nLanguage support for strict CommonMark.\n*/\nconst commonmarkLanguage = /*@__PURE__*/mkLang(commonmark);\nconst extended = /*@__PURE__*/commonmark.configure([GFM, Subscript, Superscript, Emoji]);\n/**\nLanguage support for [GFM](https://github.github.com/gfm/) plus\nsubscript, superscript, and emoji syntax.\n*/\nconst markdownLanguage = /*@__PURE__*/mkLang(extended);\nfunction getCodeParser(languages, defaultLanguage) {\n    return (info) => {\n        if (info && languages) {\n            let found = null;\n            if (typeof languages == \"function\")\n                found = languages(info);\n            else\n                found = LanguageDescription.matchLanguageName(languages, info, true);\n            if (found instanceof LanguageDescription)\n                return found.support ? found.support.language.parser : ParseContext.getSkippingParser(found.load());\n            else if (found)\n                return found.parser;\n        }\n        return defaultLanguage ? defaultLanguage.parser : null;\n    };\n}\n\nfunction nodeStart(node, doc) {\n    return doc.sliceString(node.from, node.from + 50);\n}\nclass Context {\n    constructor(node, from, to, spaceBefore, spaceAfter, type, item) {\n        this.node = node;\n        this.from = from;\n        this.to = to;\n        this.spaceBefore = spaceBefore;\n        this.spaceAfter = spaceAfter;\n        this.type = type;\n        this.item = item;\n    }\n    blank(trailing = true) {\n        let result = this.spaceBefore;\n        if (this.node.name == \"Blockquote\")\n            result += \">\";\n        else\n            for (let i = this.to - this.from - result.length - this.spaceAfter.length; i > 0; i--)\n                result += \" \";\n        return result + (trailing ? this.spaceAfter : \"\");\n    }\n    marker(doc, add) {\n        let number = this.node.name == \"OrderedList\" ? String((+itemNumber(this.item, doc)[2] + add)) : \"\";\n        return this.spaceBefore + number + this.type + this.spaceAfter;\n    }\n}\nfunction getContext(node, line, doc) {\n    let nodes = [];\n    for (let cur = node; cur && cur.name != \"Document\"; cur = cur.parent) {\n        if (cur.name == \"ListItem\" || cur.name == \"Blockquote\")\n            nodes.push(cur);\n    }\n    let context = [], pos = 0;\n    for (let i = nodes.length - 1; i >= 0; i--) {\n        let node = nodes[i], match, start = pos;\n        if (node.name == \"Blockquote\" && (match = /^[ \\t]*>( ?)/.exec(line.slice(pos)))) {\n            pos += match[0].length;\n            context.push(new Context(node, start, pos, \"\", match[1], \">\", null));\n        }\n        else if (node.name == \"ListItem\" && node.parent.name == \"OrderedList\" &&\n            (match = /^([ \\t]*)\\d+([.)])([ \\t]*)/.exec(nodeStart(node, doc)))) {\n            let after = match[3], len = match[0].length;\n            if (after.length >= 4) {\n                after = after.slice(0, after.length - 4);\n                len -= 4;\n            }\n            pos += len;\n            context.push(new Context(node.parent, start, pos, match[1], after, match[2], node));\n        }\n        else if (node.name == \"ListItem\" && node.parent.name == \"BulletList\" &&\n            (match = /^([ \\t]*)([-+*])([ \\t]{1,4}\\[[ xX]\\])?([ \\t]+)/.exec(nodeStart(node, doc)))) {\n            let after = match[4], len = match[0].length;\n            if (after.length > 4) {\n                after = after.slice(0, after.length - 4);\n                len -= 4;\n            }\n            let type = match[2];\n            if (match[3])\n                type += match[3].replace(/[xX]/, ' ');\n            pos += len;\n            context.push(new Context(node.parent, start, pos, match[1], after, type, node));\n        }\n    }\n    return context;\n}\nfunction itemNumber(item, doc) {\n    return /^(\\s*)(\\d+)(?=[.)])/.exec(doc.sliceString(item.from, item.from + 10));\n}\nfunction renumberList(after, doc, changes, offset = 0) {\n    for (let prev = -1, node = after;;) {\n        if (node.name == \"ListItem\") {\n            let m = itemNumber(node, doc);\n            let number = +m[2];\n            if (prev >= 0) {\n                if (number != prev + 1)\n                    return;\n                changes.push({ from: node.from + m[1].length, to: node.from + m[0].length, insert: String(prev + 2 + offset) });\n            }\n            prev = number;\n        }\n        let next = node.nextSibling;\n        if (!next)\n            break;\n        node = next;\n    }\n}\n/**\nThis command, when invoked in Markdown context with cursor\nselection(s), will create a new line with the markup for\nblockquotes and lists that were active on the old line. If the\ncursor was directly after the end of the markup for the old line,\ntrailing whitespace and list markers are removed from that line.\n\nThe command does nothing in non-Markdown context, so it should\nnot be used as the only binding for Enter (even in a Markdown\ndocument, HTML and code regions might use a different language).\n*/\nconst insertNewlineContinueMarkup = ({ state, dispatch }) => {\n    let tree = syntaxTree(state), { doc } = state;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty || !markdownLanguage.isActiveAt(state, range.from))\n            return dont = { range };\n        let pos = range.from, line = doc.lineAt(pos);\n        let context = getContext(tree.resolveInner(pos, -1), line.text, doc);\n        while (context.length && context[context.length - 1].from > pos - line.from)\n            context.pop();\n        if (!context.length)\n            return dont = { range };\n        let inner = context[context.length - 1];\n        if (inner.to - inner.spaceAfter.length > pos - line.from)\n            return dont = { range };\n        let emptyLine = pos >= (inner.to - inner.spaceAfter.length) && !/\\S/.test(line.text.slice(inner.to));\n        // Empty line in list\n        if (inner.item && emptyLine) {\n            // First list item or blank line before: delete a level of markup\n            if (inner.node.firstChild.to >= pos ||\n                line.from > 0 && !/[^\\s>]/.test(doc.lineAt(line.from - 1).text)) {\n                let next = context.length > 1 ? context[context.length - 2] : null;\n                let delTo, insert = \"\";\n                if (next && next.item) { // Re-add marker for the list at the next level\n                    delTo = line.from + next.from;\n                    insert = next.marker(doc, 1);\n                }\n                else {\n                    delTo = line.from + (next ? next.to : 0);\n                }\n                let changes = [{ from: delTo, to: pos, insert }];\n                if (inner.node.name == \"OrderedList\")\n                    renumberList(inner.item, doc, changes, -2);\n                if (next && next.node.name == \"OrderedList\")\n                    renumberList(next.item, doc, changes);\n                return { range: EditorSelection.cursor(delTo + insert.length), changes };\n            }\n            else { // Move this line down\n                let insert = \"\";\n                for (let i = 0, e = context.length - 2; i <= e; i++)\n                    insert += context[i].blank(i < e);\n                insert += state.lineBreak;\n                return { range: EditorSelection.cursor(pos + insert.length), changes: { from: line.from, insert } };\n            }\n        }\n        if (inner.node.name == \"Blockquote\" && emptyLine && line.from) {\n            let prevLine = doc.lineAt(line.from - 1), quoted = />\\s*$/.exec(prevLine.text);\n            // Two aligned empty quoted lines in a row\n            if (quoted && quoted.index == inner.from) {\n                let changes = state.changes([{ from: prevLine.from + quoted.index, to: prevLine.to },\n                    { from: line.from + inner.from, to: line.to }]);\n                return { range: range.map(changes), changes };\n            }\n        }\n        let changes = [];\n        if (inner.node.name == \"OrderedList\")\n            renumberList(inner.item, doc, changes);\n        let insert = state.lineBreak;\n        let continued = inner.item && inner.item.from < line.from;\n        // If not dedented\n        if (!continued || /^[\\s\\d.)\\-+*>]*/.exec(line.text)[0].length >= inner.to) {\n            for (let i = 0, e = context.length - 1; i <= e; i++)\n                insert += i == e && !continued ? context[i].marker(doc, 1) : context[i].blank();\n        }\n        let from = pos;\n        while (from > line.from && /\\s/.test(line.text.charAt(from - line.from - 1)))\n            from--;\n        changes.push({ from, to: pos, insert });\n        return { range: EditorSelection.cursor(from + insert.length), changes };\n    });\n    if (dont)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isMark(node) {\n    return node.name == \"QuoteMark\" || node.name == \"ListMark\";\n}\nfunction contextNodeForDelete(tree, pos) {\n    let node = tree.resolveInner(pos, -1), scan = pos;\n    if (isMark(node)) {\n        scan = node.from;\n        node = node.parent;\n    }\n    for (let prev; prev = node.childBefore(scan);) {\n        if (isMark(prev)) {\n            scan = prev.from;\n        }\n        else if (prev.name == \"OrderedList\" || prev.name == \"BulletList\") {\n            node = prev.lastChild;\n            scan = node.to;\n        }\n        else {\n            break;\n        }\n    }\n    return node;\n}\n/**\nThis command will, when invoked in a Markdown context with the\ncursor directly after list or blockquote markup, delete one level\nof markup. When the markup is for a list, it will be replaced by\nspaces on the first invocation (a further invocation will delete\nthe spaces), to make it easy to continue a list.\n\nWhen not after Markdown block markup, this command will return\nfalse, so it is intended to be bound alongside other deletion\ncommands, with a higher precedence than the more generic commands.\n*/\nconst deleteMarkupBackward = ({ state, dispatch }) => {\n    let tree = syntaxTree(state);\n    let dont = null, changes = state.changeByRange(range => {\n        let pos = range.from, { doc } = state;\n        if (range.empty && markdownLanguage.isActiveAt(state, range.from)) {\n            let line = doc.lineAt(pos);\n            let context = getContext(contextNodeForDelete(tree, pos), line.text, doc);\n            if (context.length) {\n                let inner = context[context.length - 1];\n                let spaceEnd = inner.to - inner.spaceAfter.length + (inner.spaceAfter ? 1 : 0);\n                // Delete extra trailing space after markup\n                if (pos - line.from > spaceEnd && !/\\S/.test(line.text.slice(spaceEnd, pos - line.from)))\n                    return { range: EditorSelection.cursor(line.from + spaceEnd),\n                        changes: { from: line.from + spaceEnd, to: pos } };\n                if (pos - line.from == spaceEnd) {\n                    let start = line.from + inner.from;\n                    // Replace a list item marker with blank space\n                    if (inner.item && inner.node.from < inner.item.from && /\\S/.test(line.text.slice(inner.from, inner.to)))\n                        return { range, changes: { from: start, to: line.from + inner.to, insert: inner.blank() } };\n                    // Delete one level of indentation\n                    if (start < pos)\n                        return { range: EditorSelection.cursor(start), changes: { from: start, to: pos } };\n                }\n            }\n        }\n        return dont = { range };\n    });\n    if (dont)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete\" }));\n    return true;\n};\n\n/**\nA small keymap with Markdown-specific bindings. Binds Enter to\n[`insertNewlineContinueMarkup`](https://codemirror.net/6/docs/ref/#lang-markdown.insertNewlineContinueMarkup)\nand Backspace to\n[`deleteMarkupBackward`](https://codemirror.net/6/docs/ref/#lang-markdown.deleteMarkupBackward).\n*/\nconst markdownKeymap = [\n    { key: \"Enter\", run: insertNewlineContinueMarkup },\n    { key: \"Backspace\", run: deleteMarkupBackward }\n];\nconst htmlNoMatch = /*@__PURE__*/html({ matchClosingTags: false });\n/**\nMarkdown language support.\n*/\nfunction markdown(config = {}) {\n    let { codeLanguages, defaultCodeLanguage, addKeymap = true, base: { parser } = commonmarkLanguage } = config;\n    if (!(parser instanceof MarkdownParser))\n        throw new RangeError(\"Base parser provided to `markdown` should be a Markdown parser\");\n    let extensions = config.extensions ? [config.extensions] : [];\n    let support = [htmlNoMatch.support], defaultCode;\n    if (defaultCodeLanguage instanceof LanguageSupport) {\n        support.push(defaultCodeLanguage.support);\n        defaultCode = defaultCodeLanguage.language;\n    }\n    else if (defaultCodeLanguage) {\n        defaultCode = defaultCodeLanguage;\n    }\n    let codeParser = codeLanguages || defaultCode ? getCodeParser(codeLanguages, defaultCode) : undefined;\n    extensions.push(parseCode({ codeParser, htmlParser: htmlNoMatch.language.parser }));\n    if (addKeymap)\n        support.push(Prec.high(keymap.of(markdownKeymap)));\n    return new LanguageSupport(mkLang(parser.configure(extensions)), support);\n}\n\nexport { commonmarkLanguage, deleteMarkupBackward, insertNewlineContinueMarkup, markdown, markdownKeymap, markdownLanguage };\n","/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {one} from './one.js'\n\n/**\n * @param {H} h\n * @param {Node} parent\n * @returns {Array.<MdastNode>}\n */\nexport function all(h, parent) {\n  /** @type {Array.<Node>} */\n  // @ts-expect-error Assume `parent` is a parent.\n  const nodes = parent.children || []\n  /** @type {Array.<MdastNode>} */\n  const values = []\n  let index = -1\n  let length = nodes.length\n  let child = nodes[index + 1]\n\n  // Trim initial and final `<br>`s.\n  // They’re not semantic per HTML, and they can’t be made in markdown things\n  // like paragraphs or headings.\n  while (child && child.type === 'element' && child.tagName === 'br') {\n    index++\n    child = nodes[index + 1]\n  }\n\n  child = nodes[length - 1]\n\n  while (\n    length - 1 > index &&\n    child &&\n    child.type === 'element' &&\n    child.tagName === 'br'\n  ) {\n    length--\n    child = nodes[length - 1]\n  }\n\n  while (++index < length) {\n    // @ts-expect-error assume `parent` is a parent.\n    const result = one(h, nodes[index], parent)\n\n    if (Array.isArray(result)) {\n      values.push(...result)\n    } else if (result) {\n      values.push(result)\n    }\n  }\n\n  return values\n}\n","export const own = {}.hasOwnProperty\n","/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string} value\n * @returns {string}\n */\nexport function wrapText(h, value) {\n  return h.wrapText ? value : value.replace(/\\r?\\n|\\r/g, ' ')\n}\n","/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {all} from './all.js'\nimport {own} from './util/own.js'\nimport {wrapText} from './util/wrap-text.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @param {Parent|undefined} parent\n * @returns {MdastNode|Array.<MdastNode>|void}\n */\nexport function one(h, node, parent) {\n  /** @type {Handle|undefined} */\n  let fn\n\n  if (node.type === 'element') {\n    if (node.properties && node.properties.dataMdast === 'ignore') {\n      return\n    }\n\n    if (own.call(h.handlers, node.tagName)) {\n      fn = h.handlers[node.tagName]\n    }\n  } else if (own.call(h.handlers, node.type)) {\n    fn = h.handlers[node.type]\n  }\n\n  if (typeof fn === 'function') {\n    return fn(h, node, parent)\n  }\n\n  return unknown(h, node)\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(h, node) {\n  // @ts-expect-error: Looks like a literal.\n  if (typeof node.value === 'string') {\n    // @ts-expect-error: Looks like a literal.\n    return h(node, 'text', wrapText(h, node.value))\n  }\n\n  return all(h, node)\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').AssertPredicate<PhrasingContent>} AssertPredicatePhrasing\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * @type {AssertPredicatePhrasing}\n */\n// @ts-ignore hush, it’s fine!\nexport const phrasing = convert([\n  'break',\n  'delete',\n  'emphasis',\n  'footnote',\n  'footnoteReference',\n  'image',\n  'imageReference',\n  'inlineCode',\n  'link',\n  'linkReference',\n  'strong',\n  'text'\n])\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n */\n\nimport extend from 'extend'\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Array.<MdastNode>} nodes\n */\nexport function wrap(nodes) {\n  return runs(nodes, onphrasing)\n\n  /**\n   * @param {Array.<MdastPhrasingContent>} nodes\n   * @returns {MdastNode|Array.<MdastNode>}\n   */\n  function onphrasing(nodes) {\n    const head = nodes[0]\n\n    if (\n      nodes.length === 1 &&\n      head.type === 'text' &&\n      (head.value === ' ' || head.value === '\\n')\n    ) {\n      return []\n    }\n\n    return {type: 'paragraph', children: nodes}\n  }\n}\n\n/**\n * Check if there are non-phrasing mdast nodes returned.\n * This is needed if a fragment is given, which could just be a sentence, and\n * doesn’t need a wrapper paragraph.\n *\n * @param {Array.<MdastNode>} nodes\n * @returns {boolean}\n */\nexport function wrapNeeded(nodes) {\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    if (!phrasing(node) || ('children' in node && wrapNeeded(node.children))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Wrap all runs of mdast phrasing content in `paragraph` nodes.\n *\n * @param {Array.<MdastNode>} nodes\n * @param {(nodes: Array.<MdastPhrasingContent>) => MdastNode|Array.<MdastNode>} onphrasing\n * @param {(node: MdastNode) => MdastNode} [onnonphrasing]\n */\nfunction runs(nodes, onphrasing, onnonphrasing) {\n  const nonphrasing = onnonphrasing || identity\n  /** @type {Array.<MdastNode>} */\n  const flattened = flatten(nodes)\n  /** @type {Array.<MdastNode>} */\n  let result = []\n  let index = -1\n  /** @type {Array.<MdastPhrasingContent>|undefined} */\n  let queue\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < flattened.length) {\n    node = flattened[index]\n\n    if (phrasing(node)) {\n      if (!queue) queue = []\n      queue.push(node)\n    } else {\n      if (queue) {\n        result = result.concat(onphrasing(queue))\n        queue = undefined\n      }\n\n      result = result.concat(nonphrasing(node))\n    }\n  }\n\n  if (queue) {\n    result = result.concat(onphrasing(queue))\n  }\n\n  return result\n}\n\n/**\n * Flatten a list of nodes.\n *\n * @param {Array.<MdastNode>} nodes\n * @returns {Array.<MdastNode>}\n */\nfunction flatten(nodes) {\n  /** @type {Array.<MdastNode>} */\n  let flattened = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    // Straddling: some elements are *weird*.\n    // Namely: `map`, `ins`, `del`, and `a`, as they are hybrid elements.\n    // See: <https://html.spec.whatwg.org/#paragraphs>.\n    // Paragraphs are the weirdest of them all.\n    // See the straddling fixture for more info!\n    // `ins` is ignored in mdast, so we don’t need to worry about that.\n    // `map` maps to its content, so we don’t need to worry about that either.\n    // `del` maps to `delete` and `a` to `link`, so we do handle those.\n    // What we’ll do is split `node` over each of its children.\n    if (\n      (node.type === 'delete' || node.type === 'link') &&\n      wrapNeeded(node.children)\n    ) {\n      flattened = flattened.concat(split(node))\n    } else {\n      flattened.push(node)\n    }\n  }\n\n  return flattened\n}\n\n/**\n * @param {MdastNode} node\n * @returns {Array.<MdastNode>}\n */\nfunction split(node) {\n  // @ts-expect-error Assume parent.\n  return runs(node.children, onphrasing, onnonphrasing)\n\n  /**\n   * Use `child`, add `parent` as its first child, put the original children\n   * into `parent`.\n   * If `child` is not a parent, `parent` will not be added.\n   *\n   * @param {MdastNode} child\n   * @returns {MdastNode}\n   */\n  function onnonphrasing(child) {\n    if ('children' in child && 'children' in node) {\n      const {children, ...rest} = node\n      return {\n        ...child,\n        // @ts-expect-error: assume matching parent & child.\n        children: [{...extend(true, {}, rest), children: child.children}]\n      }\n    }\n\n    return {...child}\n  }\n\n  /**\n   * Use `parent`, put the phrasing run inside it.\n   *\n   * @param {Array.<MdastPhrasingContent>} nodes\n   * @returns {MdastNode}\n   */\n  function onphrasing(nodes) {\n    // @ts-expect-error: assume parent.\n    const {children, ...rest} = node\n    // @ts-expect-error: assume matching parent & child.\n    return {...extend(true, {}, rest), children: nodes}\n  }\n}\n\n/**\n * @template {unknown} T\n * @param {T} n\n * @returns {T}\n */\nfunction identity(n) {\n  return n\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @returns {Array.<MdastNode>}\n */\nexport function wrapChildren(h, node) {\n  return wrap(all(h, node))\n}\n","/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string|null|undefined} url\n * @returns {string}\n */\nexport function resolve(h, url) {\n  if (url === null || url === undefined) {\n    return ''\n  }\n\n  if (h.frozenBaseUrl) {\n    return String(new URL(url, h.frozenBaseUrl))\n  }\n\n  return url\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {import('unist-util-is').Type} Type\n * @typedef {import('unist-util-is').Props} Props\n * @typedef {import('unist-util-is').TestFunctionAnything} TestFunctionAnything\n */\n\nimport {convert} from 'unist-util-is'\n\nexport var findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node|number, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>) => T|null) &\n   *  ((node: Parent, index: Node|number, test?: null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>) => Node|null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent Parent node\n     * @param {Node|number} index Child of `parent`, or it’s index\n     * @param {null|undefined|Type|Props|TestFunctionAnything|Array<Type|Props|TestFunctionAnything>} [test] is-compatible test (such as a type)\n     * @returns {Node|null}\n     */\n    function (parent, index, test) {\n      var is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n","/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Parent['children'][number]} HastChild\n * @typedef {import('hast').Text} HastText\n * @typedef {import('hast').Comment} HastComment\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {HastChild|HastRoot} HastNode\n * @typedef {HastRoot|HastElement} HastParent\n *\n * @typedef {'normal'|'pre'|'nowrap'|'pre-wrap'} Whitespace\n * @typedef {boolean} BreakValue\n * @typedef {1|2} BreakNumber\n * @typedef {'\\n'} BreakForce\n * @typedef {BreakValue|BreakNumber|undefined} BreakBefore\n * @typedef {BreakValue|BreakNumber|BreakForce|undefined} BreakAfter\n *\n * @typedef CollectionOptions\n * @property {Whitespace} whitespace\n * @property {BreakBefore} breakBefore\n * @property {BreakAfter} breakAfter\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findAfter} from 'unist-util-find-after'\n\nconst searchLineFeeds = /\\n/g\nconst searchTabOrSpaces = /[\\t ]+/g\n\nconst br = convertElement('br')\nconst p = convertElement('p')\nconst cell = convertElement(['th', 'td'])\nconst row = convertElement('tr')\n\n// Note that we don’t need to include void elements here as they don’t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n  // List from: <https://html.spec.whatwg.org/#hidden-elements>\n  'datalist',\n  'head',\n  'noembed',\n  'noframes',\n  'noscript', // Act as if we support scripting.\n  'rp',\n  'script',\n  'style',\n  'template',\n  'title',\n  // Hidden attribute.\n  hidden,\n  // From: <https://html.spec.whatwg.org/#flow-content-3>\n  closedDialog\n])\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n  'address', // Flow content\n  'article', // Sections and headings\n  'aside', // Sections and headings\n  'blockquote', // Flow content\n  'body', // Page\n  'caption', // `table-caption`\n  'center', // Flow content (legacy)\n  'dd', // Lists\n  'dialog', // Flow content\n  'dir', // Lists (legacy)\n  'dl', // Lists\n  'dt', // Lists\n  'div', // Flow content\n  'figure', // Flow content\n  'figcaption', // Flow content\n  'footer', // Flow content\n  'form,', // Flow content\n  'h1', // Sections and headings\n  'h2', // Sections and headings\n  'h3', // Sections and headings\n  'h4', // Sections and headings\n  'h5', // Sections and headings\n  'h6', // Sections and headings\n  'header', // Flow content\n  'hgroup', // Sections and headings\n  'hr', // Flow content\n  'html', // Page\n  'legend', // Flow content\n  'listing', // Flow content (legacy)\n  'main', // Flow content\n  'menu', // Lists\n  'nav', // Sections and headings\n  'ol', // Lists\n  'p', // Flow content\n  'plaintext', // Flow content (legacy)\n  'pre', // Flow content\n  'section', // Sections and headings\n  'ul', // Lists\n  'xmp' // Flow content (legacy)\n])\n\n/**\n * Implementation of the `innerText` getter:\n * <https://html.spec.whatwg.org/#the-innertext-idl-attribute>\n * Note that we act as if `node` is being rendered, and as if we’re a\n * CSS-supporting user agent.\n *\n * @param {HastNode} node\n * @param {Options} [options={}]\n * @returns {string}\n */\nexport function toText(node, options = {}) {\n  /** @type {Array.<HastChild>} */\n  // @ts-ignore looks like a parent.\n  const children = node.children || []\n  const block = blockOrCaption(node)\n  const whitespace = inferWhitespace(node, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  })\n  let index = -1\n  /** @type {Array.<string|BreakNumber>} */\n  let results\n  /** @type {string|BreakNumber} */\n  let value\n  /** @type {number|undefined} */\n  let count\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node’s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (node.type === 'text' || node.type === 'comment') {\n    return collectText(node, {whitespace, breakBefore: true, breakAfter: true})\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we’re not supporting stylesheets so we’re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we’ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  results = []\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results = results.concat(\n      // @ts-ignore Looks like a parent.\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? null : block,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    )\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  index = -1\n  /** @type {Array.<string>} */\n  const result = []\n\n  while (++index < results.length) {\n    value = results[index]\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value\n    } else if (value) {\n      if (count) result.push('\\n'.repeat(count))\n      count = 0\n      result.push(value)\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('')\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {HastNode} node\n * @param {HastParent} parent\n * @param {CollectionOptions} options\n * @returns {Array.<string|BreakNumber>}\n */\nfunction innerTextCollection(node, parent, options) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, options)\n  }\n\n  if (node.type === 'text') {\n    return [\n      options.whitespace === 'normal'\n        ? collectText(node, options)\n        : collectPreText(node)\n    ]\n  }\n\n  return []\n}\n\n/**\n * Collect an element.\n *\n * @param {HastElement} node\n * @param {HastParent} parent\n * @param {CollectionOptions} options\n */\nfunction collectElement(node, parent, options) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, options)\n  const children = node.children || []\n  let index = -1\n  /** @type {Array.<string|BreakNumber>} */\n  let items = []\n  /** @type {BreakNumber|undefined} */\n  let prefix\n  /** @type {BreakNumber|BreakForce|undefined} */\n  let suffix\n\n  // We’re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items\n  }\n\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node’s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n'\n  }\n\n  // 7.  If node’s computed value of `display` is `table-row`, and node’s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n'\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2\n    suffix = 2\n  }\n\n  // 9.  If node’s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1\n    suffix = 1\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n          index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    )\n  }\n\n  // 6.  If node’s computed value of `display` is `table-cell`, and node’s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t')\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix)\n  if (suffix) items.push(suffix)\n\n  return items\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don’t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {HastText|HastComment} node\n * @param {CollectionOptions} options\n * @returns {string}\n */\nfunction collectText(node, options) {\n  const value = String(node.value)\n  /** @type {Array.<string>} */\n  const lines = []\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  let index = -1\n  /** @type {RegExpMatchArray|null} */\n  let match\n  /** @type {number} */\n  let end\n  /** @type {string|undefined} */\n  let join\n\n  while (start < value.length) {\n    searchLineFeeds.lastIndex = start\n    match = searchLineFeeds.exec(value)\n    // @ts-expect-error: `index` is set.\n    end = match ? match.index : value.length\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // [...] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value\n          .slice(start, end)\n          .replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        options.breakBefore,\n        options.breakAfter\n      )\n    )\n\n    start = end + 1\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n      lines[index].charCodeAt(lines[index].length - 1) === 0x200b /* ZWSP */ ||\n      (index < lines.length - 1 &&\n        lines[index + 1].charCodeAt(0) === 0x200b) /* ZWSP */\n    ) {\n      result.push(lines[index])\n      join = ''\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (join) result.push(join)\n      result.push(lines[index])\n      join = ' '\n    }\n  }\n\n  return result.join('')\n}\n\n/**\n * @param {HastText|HastComment} node\n * @returns {string}\n */\nfunction collectPreText(node) {\n  return String(node.value)\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space—even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context—is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n * @param {BreakBefore} breakBefore\n * @param {BreakAfter} breakAfter\n * @returns {string}\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  /** @type {RegExpMatchArray|null} */\n  let match\n  /** @type {number} */\n  let end\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start\n    match = searchTabOrSpaces.exec(value)\n    // @ts-expect-error: `index` is set.\n    end = match ? match.index : value.length\n\n    // If we’re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('')\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end))\n    }\n\n    start = match ? end + match[0].length : end\n  }\n\n  // If we reached the end, there was trailing white space, and there’s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  // @ts-expect-error: `end` is defined.\n  if (start !== end && !breakAfter) {\n    result.push('')\n  }\n\n  return result.join(' ')\n}\n\n/**\n * We don’t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {HastNode} node\n * @param {CollectionOptions} options\n * @returns {Whitespace}\n */\nfunction inferWhitespace(node, options) {\n  /** @type {HastProperties} */\n  let props\n\n  if (node.type === 'element') {\n    props = node.properties || {}\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return props.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return props.noWrap ? 'nowrap' : options.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return options.whitespace\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden)\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {trimTrailingLines} from 'trim-trailing-lines'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst prefix = 'language-'\n\nconst pre = convertElement('pre')\nconst isCode = convertElement('code')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function code(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array.<string|number>|undefined} */\n  let classList\n  /** @type {string|undefined} */\n  let lang\n\n  if (pre(node)) {\n    while (++index < children.length) {\n      const child = children[index]\n\n      if (\n        isCode(child) &&\n        child.properties &&\n        child.properties.className &&\n        Array.isArray(child.properties.className)\n      ) {\n        classList = child.properties.className\n        break\n      }\n    }\n  }\n\n  if (classList) {\n    index = -1\n\n    while (++index < classList.length) {\n      if (String(classList[index]).slice(0, prefix.length) === prefix) {\n        lang = String(classList[index]).slice(prefix.length)\n        break\n      }\n    }\n  }\n\n  return h(\n    node,\n    'code',\n    {lang: lang || null, meta: null},\n    trimTrailingLines(wrapText(h, toText(node)))\n  )\n}\n","/**\n * Remove final newline characters from `value`.\n *\n * @param {unknown} value Value with trailing line feeds, coerced to string.\n * @return {string} Value without trailing newlines.\n */\nexport function trimTrailingLines(value) {\n  return String(value).replace(/\\n+$/, '')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function del(h, node) {\n  return h(node, 'delete', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\n/**\n * @param {Array.<MdastListContent>} children\n * @returns {boolean}\n */\nexport function listItemsSpread(children) {\n  let index = -1\n\n  if (children.length > 1) {\n    while (++index < children.length) {\n      if (children[index].spread) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\nimport {all} from '../all.js'\n\n/**\n * @param {H} h\n * @param {Child} node\n * @returns {Array.<MdastListContent>}\n */\nexport function wrapListItems(h, node) {\n  const children = all(h, node)\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (child.type !== 'listItem') {\n      children[index] = {\n        type: 'listItem',\n        spread: false,\n        checked: null,\n        // @ts-expect-error Assume `children[index]` is block content.\n        children: [child]\n      }\n    }\n  }\n\n  // @ts-expect-error Assume all `listItem`s\n  return children\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n * @typedef {import('../types.js').MdastBlockContent} MdastBlockContent\n * @typedef {import('../types.js').MdastDefinitionContent} MdastDefinitionContent\n *\n * @typedef Group\n * @property {Array.<Element>} titles\n * @property {Array.<ElementChild>} definitions\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst div = convertElement('div')\nconst dt = convertElement('dt')\nconst dd = convertElement('dd')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function dl(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array.<ElementChild>} */\n  let clean = []\n  /** @type {Array.<Group>} */\n  const groups = []\n  /** @type {Group} */\n  let group = {titles: [], definitions: []}\n  /** @type {ElementChild} */\n  let child\n  /** @type {Array.<MdastBlockContent|MdastDefinitionContent>} */\n  let result\n\n  // Unwrap `<div>`s\n  while (++index < children.length) {\n    child = children[index]\n    clean = clean.concat(div(child) ? child.children : child)\n  }\n\n  index = -1\n\n  // Group titles and definitions.\n  while (++index < clean.length) {\n    child = clean[index]\n\n    if (dt(child)) {\n      if (dd(clean[index - 1])) {\n        groups.push(group)\n        group = {titles: [], definitions: []}\n      }\n\n      group.titles.push(child)\n    } else {\n      group.definitions.push(child)\n    }\n  }\n\n  groups.push(group)\n\n  // Create items.\n  index = -1\n  /** @type {Array.<MdastListContent>} */\n  const content = []\n\n  while (++index < groups.length) {\n    result = [\n      ...handle(h, groups[index].titles),\n      ...handle(h, groups[index].definitions)\n    ]\n\n    if (result.length > 0) {\n      content.push({\n        type: 'listItem',\n        spread: result.length > 1,\n        checked: null,\n        children: result\n      })\n    }\n  }\n\n  // Create a list if there are items.\n  if (content.length > 0) {\n    return h(\n      node,\n      'list',\n      {ordered: false, start: null, spread: listItemsSpread(content)},\n      content\n    )\n  }\n}\n\n/**\n * @param {H} h\n * @param {Array.<ElementChild>} children\n * @returns {Array.<MdastBlockContent|MdastDefinitionContent>}\n */\nfunction handle(h, children) {\n  const nodes = wrapListItems(h, {type: 'element', tagName: 'x', children})\n\n  if (nodes.length === 0) {\n    return []\n  }\n\n  if (nodes.length === 1) {\n    return nodes[0].children\n  }\n\n  return [\n    {\n      type: 'list',\n      ordered: false,\n      start: null,\n      spread: listItemsSpread(nodes),\n      children: nodes\n    }\n  ]\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function em(h, node) {\n  return h(node, 'emphasis', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function heading(h, node) {\n  // `else` shouldn’t happen, of course…\n  /* c8 ignore next */\n  const depth = Number(node.tagName.charAt(1)) || 1\n  const wrap = h.wrapText\n\n  h.wrapText = false\n  const result = h(node, 'heading', {depth}, all(h, node))\n  h.wrapText = wrap\n\n  return result\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function img(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(node, 'image', {\n    url: resolve(h, String(props.src || '') || null),\n    title: props.title || null,\n    alt: props.alt || ''\n  })\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'inlineCode', wrapText(h, toText(node)))\n}\n","/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {hasProperty} from 'hast-util-has-property'\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from './wrap-text.js'\n\nconst option = convertElement('option')\n\n/**\n * @param {H} h\n * @param {Element} node\n * @param {Properties} [properties]\n * @returns {Array.<[string, string|null]>}\n */\nexport function findSelectedOptions(h, node, properties) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` exist.\n  const props = properties || node.properties\n  let options = findOptions(node)\n  const size =\n    Math.min(Number.parseInt(String(props.size), 10), 0) ||\n    (props.multiple ? 4 : 1)\n  let index = -1\n  /** @type {Array.<Element>} */\n  const selectedOptions = []\n  /** @type {Array.<[string, string|null]>} */\n  const values = []\n\n  while (++index < options.length) {\n    if (hasProperty(options[index], 'selected')) {\n      selectedOptions.push(options[index])\n    }\n  }\n\n  const list = selectedOptions.length > 0 ? selectedOptions : options\n  options = list.slice(0, size)\n  index = -1\n\n  while (++index < options.length) {\n    const option = options[index]\n    const content = wrapText(h, toText(option))\n    /** @type {Properties} */\n    // @ts-expect-error: `props` exist.\n    const props = option.properties\n    const label = content || String(props.label || '')\n    const value = String(props.value || '') || content\n    values.push([value, label === value ? null : label])\n  }\n\n  return values\n}\n\n/**\n * @param {Parent} node\n */\nfunction findOptions(node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array.<Element>} */\n  let results = []\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    // @ts-expect-error Looks like a parent.\n    if (Array.isArray(child.children)) {\n      // @ts-expect-error Looks like a parent.\n      results = results.concat(findOptions(child))\n    }\n\n    if (option(child) && !hasProperty(child, 'disabled')) {\n      results.push(child)\n    }\n  }\n\n  return results\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {own} from '../util/own.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst datalist = convertElement('datalist')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function input(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  let value = String(props.value || props.placeholder || '')\n  /** @type {Array.<MdastNode>} */\n  const results = []\n  /** @type {Array.<string>} */\n  const texts = []\n  /** @type {Array.<[string, string|null]>} */\n  let values = []\n  let index = -1\n  /** @type {string} */\n  let list\n\n  if (props.disabled || props.type === 'hidden' || props.type === 'file') {\n    return\n  }\n\n  if (props.type === 'checkbox' || props.type === 'radio') {\n    return h(\n      node,\n      'text',\n      wrapText(h, h[props.checked ? 'checked' : 'unchecked'])\n    )\n  }\n\n  if (props.type === 'image') {\n    return props.alt || value\n      ? h(node, 'image', {\n          url: resolve(h, String(props.src || '') || null),\n          title: wrapText(h, String(props.title || '')) || null,\n          alt: wrapText(h, String(props.alt || value))\n        })\n      : []\n  }\n\n  if (value) {\n    values = [[value, null]]\n  } else if (\n    // `list` is not supported on these types:\n    props.type !== 'password' &&\n    props.type !== 'file' &&\n    props.type !== 'submit' &&\n    props.type !== 'reset' &&\n    props.type !== 'button' &&\n    props.list\n  ) {\n    list = String(props.list).toUpperCase()\n\n    if (own.call(h.nodeById, list) && datalist(h.nodeById[list])) {\n      values = findSelectedOptions(h, h.nodeById[list], props)\n    }\n  }\n\n  if (values.length === 0) {\n    return\n  }\n\n  // Hide password value.\n  if (props.type === 'password') {\n    // Passwords don’t support `list`.\n    values[0] = ['•'.repeat(values[0][0].length), null]\n  }\n\n  if (props.type === 'url' || props.type === 'email') {\n    while (++index < values.length) {\n      value = resolve(h, values[index][0])\n\n      results.push(\n        h(\n          node,\n          'link',\n          {\n            title: null,\n            url: wrapText(h, props.type === 'email' ? 'mailto:' + value : value)\n          },\n          [{type: 'text', value: wrapText(h, values[index][1] || value)}]\n        )\n      )\n\n      if (index !== values.length - 1) {\n        results.push({type: 'text', value: ', '})\n      }\n    }\n\n    return results\n  }\n\n  while (++index < values.length) {\n    texts.push(\n      values[index][1]\n        ? values[index][1] + ' (' + values[index][0] + ')'\n        : values[index][0]\n    )\n  }\n\n  return h(node, 'text', wrapText(h, texts.join(', ')))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {wrapChildren} from '../util/wrap-children.js'\n\nconst p = convertElement('p')\nconst input = convertElement('input')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function li(h, node) {\n  const head = node.children[0]\n  /** @type {boolean|null} */\n  let checked = null\n  /** @type {ElementChild} */\n  let checkbox\n  /** @type {Element|undefined} */\n  let clone\n\n  // Check if this node starts with a checkbox.\n  if (p(head)) {\n    checkbox = head.children[0]\n\n    if (\n      input(checkbox) &&\n      checkbox.properties &&\n      (checkbox.properties.type === 'checkbox' ||\n        checkbox.properties.type === 'radio')\n    ) {\n      checked = Boolean(checkbox.properties.checked)\n      clone = {\n        ...node,\n        children: [\n          {...head, children: head.children.slice(1)},\n          ...node.children.slice(1)\n        ]\n      }\n    }\n  }\n\n  const content = wrapChildren(h, clone || node)\n\n  return h(node, 'listItem', {spread: content.length > 1, checked}, content)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst ol = convertElement('ol')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function list(h, node) {\n  const ordered = ol(node)\n  const children = wrapListItems(h, node)\n  /** @type {number|null} */\n  let start = null\n\n  if (ordered) {\n    start = hasProperty(node, 'start')\n      ? // @ts-expect-error: `props` exist.\n        Number.parseInt(String(node.properties.start), 10)\n      : 1\n  }\n\n  return h(\n    node,\n    'list',\n    {ordered, start, spread: listItemsSpread(children)},\n    children\n  )\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toString} from 'mdast-util-to-string'\nimport {visit, EXIT} from 'unist-util-visit'\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapNeeded} from '../util/wrap.js'\n\nconst source = convertElement('source')\nconst video = convertElement('video')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function media(h, node) {\n  let nodes = all(h, node)\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const properties = node.properties\n  const poster = video(node) && String(properties.poster || '')\n  let src = String(properties.src || '')\n  let index = -1\n  /** @type {boolean} */\n  let linkInFallbackContent = false\n  /** @type {ElementChild} */\n  let child\n\n  visit({type: 'root', children: nodes}, 'link', findLink)\n\n  // If the content links to something, or if it’s not phrasing…\n  if (linkInFallbackContent || wrapNeeded(nodes)) {\n    return nodes\n  }\n\n  // Find the source.\n  while (!src && ++index < node.children.length) {\n    child = node.children[index]\n    if (source(child)) {\n      // @ts-expect-error: `props` are defined.\n      src = String(child.properties.src || '')\n    }\n  }\n\n  // If there’s a poster defined on the video, create an image.\n  if (poster) {\n    nodes = [\n      {\n        type: 'image',\n        title: null,\n        url: resolve(h, poster),\n        alt: toString({children: nodes})\n      }\n    ]\n  }\n\n  // Link to the media resource.\n  return {\n    type: 'link',\n    // @ts-expect-error Types are broken.\n    title: node.properties.title || null,\n    url: resolve(h, src),\n    // @ts-expect-error Assume phrasing content.\n    children: nodes\n  }\n\n  function findLink() {\n    linkInFallbackContent = true\n    return EXIT\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function p(h, node) {\n  const nodes = all(h, node)\n\n  if (nodes.length > 0) {\n    return h(node, 'paragraph', nodes)\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableCell(h, node) {\n  const wrap = h.wrapText\n\n  h.wrapText = false\n\n  const result = h(node, 'tableCell', all(h, node))\n\n  if (node.properties && (node.properties.rowSpan || node.properties.colSpan)) {\n    const data = result.data || (result.data = {})\n    if (node.properties.rowSpan) data.rowSpan = node.properties.rowSpan\n    if (node.properties.colSpan) data.colSpan = node.properties.colSpan\n  }\n\n  h.wrapText = wrap\n\n  return result\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastTableContent} MdastTableContent\n * @typedef {import('../types.js').MdastRowContent} MdastRowContent\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n *\n * @typedef Info\n * @property {Array.<string|null>} align\n * @property {boolean} headless\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {visit, SKIP} from 'unist-util-visit'\nimport {wrapText} from '../util/wrap-text.js'\nimport {all} from '../all.js'\n\nconst thead = convertElement('thead')\nconst tr = convertElement('tr')\nconst cell = convertElement(['th', 'td'])\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function table(h, node) {\n  if (h.inTable) {\n    return h(node, 'text', wrapText(h, toText(node)))\n  }\n\n  h.inTable = true\n\n  const {headless, align} = inspect(node)\n  const rows = toRows(all(h, node), headless)\n  let columns = 1\n  let rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = -1\n\n    while (++cellIndex < cells.length) {\n      const cell = cells[cellIndex]\n\n      if (cell.data) {\n        const colSpan = Number.parseInt(String(cell.data.colSpan), 10) || 1\n        const rowSpan = Number.parseInt(String(cell.data.rowSpan), 10) || 1\n\n        if (colSpan > 1 || rowSpan > 1) {\n          let otherRowIndex = rowIndex - 1\n\n          while (++otherRowIndex < rowIndex + rowSpan) {\n            let colIndex = cellIndex - 1\n\n            while (++colIndex < cellIndex + colSpan) {\n              if (!rows[otherRowIndex]) {\n                // Don’t add rows that don’t exist.\n                // Browsers don’t render them either.\n                break\n              }\n\n              /** @type {Array.<MdastRowContent>} */\n              const newCells = []\n\n              if (otherRowIndex !== rowIndex || colIndex !== cellIndex) {\n                newCells.push({type: 'tableCell', children: []})\n              }\n\n              rows[otherRowIndex].children.splice(colIndex, 0, ...newCells)\n            }\n          }\n        }\n\n        // Clean the data fields.\n        if ('colSpan' in cell.data) delete cell.data.colSpan\n        if ('rowSpan' in cell.data) delete cell.data.rowSpan\n        if (Object.keys(cell.data).length === 0) delete cell.data\n      }\n    }\n\n    if (cells.length > columns) columns = cells.length\n  }\n\n  // Add extra empty cells.\n  rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = cells.length - 1\n    while (++cellIndex < columns) {\n      cells.push({type: 'tableCell', children: []})\n    }\n  }\n\n  let alignIndex = align.length - 1\n  while (++alignIndex < columns) {\n    align.push(null)\n  }\n\n  h.inTable = false\n\n  return h(node, 'table', {align}, rows)\n}\n\n/**\n * Infer whether the HTML table has a head and how it aligns.\n *\n * @param {Element} node\n * @returns {Info}\n */\nfunction inspect(node) {\n  let headless = true\n  let rowIndex = 0\n  let cellIndex = 0\n  /** @type {Array.<string|null>} */\n  const align = [null]\n\n  visit(node, 'element', (child) => {\n    if (child.tagName === 'table' && node !== child) {\n      return SKIP\n    }\n\n    // If there is a `thead`, assume there is a header row.\n    if (cell(child) && child.properties) {\n      if (!align[cellIndex]) {\n        align[cellIndex] = String(child.properties.align || '') || null\n      }\n\n      // If there is a th in the first row, assume there is a header row.\n      if (headless && rowIndex < 2 && child.tagName === 'th') {\n        headless = false\n      }\n\n      cellIndex++\n    } else if (thead(child)) {\n      headless = false\n    } else if (tr(child)) {\n      rowIndex++\n      cellIndex = 0\n    }\n  })\n\n  return {align, headless}\n}\n\n/**\n * Ensure the rows are properly structured.\n *\n * @param {Array.<MdastNode>} children\n * @param {boolean} headless\n * @returns {Array.<MdastTableContent>}\n */\nfunction toRows(children, headless) {\n  let index = -1\n  /** @type {Array.<MdastTableContent>} */\n  const nodes = []\n  /** @type {Array.<MdastRowContent>|undefined} */\n  let queue\n\n  // Add an empty header row.\n  if (headless) {\n    nodes.push({type: 'tableRow', children: []})\n  }\n\n  while (++index < children.length) {\n    const node = children[index]\n\n    if (node.type === 'tableRow') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume row content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    nodes[nodes.length - 1].children.push(...queue)\n  }\n\n  index = -1\n\n  while (++index < nodes.length) {\n    nodes[index].children = toCells(nodes[index].children)\n  }\n\n  return nodes\n}\n\n/**\n * Ensure the cells in a row are properly structured.\n *\n * @param {Array.<MdastNode>} children\n * @returns {Array.<MdastRowContent>}\n */\nfunction toCells(children) {\n  /** @type {Array.<MdastRowContent>} */\n  const nodes = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n  /** @type {Array.<MdastPhrasingContent>|undefined} */\n  let queue\n\n  while (++index < children.length) {\n    node = children[index]\n\n    if (node.type === 'tableCell') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume phrasing content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    node = nodes[nodes.length - 1]\n\n    if (!node) {\n      node = {type: 'tableCell', children: []}\n      nodes.push(node)\n    }\n\n    node.children.push(...queue)\n  }\n\n  return nodes\n}\n","import {all} from '../all.js'\nimport {wrapChildren} from '../util/wrap-children.js'\nimport {a} from './a.js'\nimport {base} from './base.js'\nimport {blockquote} from './blockquote.js'\nimport {br} from './br.js'\nimport {code} from './code.js'\nimport {comment} from './comment.js'\nimport {del} from './del.js'\nimport {dl} from './dl.js'\nimport {em} from './em.js'\nimport {heading} from './heading.js'\nimport {hr} from './hr.js'\nimport {iframe} from './iframe.js'\nimport {img} from './img.js'\nimport {inlineCode} from './inline-code.js'\nimport {input} from './input.js'\nimport {li} from './li.js'\nimport {list} from './list.js'\nimport {media} from './media.js'\nimport {p} from './p.js'\nimport {q} from './q.js'\nimport {root} from './root.js'\nimport {select} from './select.js'\nimport {strong} from './strong.js'\nimport {tableCell} from './table-cell.js'\nimport {tableRow} from './table-row.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {textarea} from './textarea.js'\nimport {wbr} from './wbr.js'\n\nexport const handlers = {\n  root,\n  text,\n  comment,\n  doctype: ignore,\n\n  applet: ignore,\n  area: ignore,\n  basefont: ignore,\n  bgsound: ignore,\n  caption: ignore,\n  col: ignore,\n  colgroup: ignore,\n  command: ignore,\n  content: ignore,\n  datalist: ignore,\n  dialog: ignore,\n  element: ignore,\n  embed: ignore,\n  frame: ignore,\n  frameset: ignore,\n  isindex: ignore,\n  keygen: ignore,\n  link: ignore,\n  math: ignore,\n  menu: ignore,\n  menuitem: ignore,\n  meta: ignore,\n  nextid: ignore,\n  noembed: ignore,\n  noframes: ignore,\n  optgroup: ignore,\n  option: ignore,\n  param: ignore,\n  script: ignore,\n  shadow: ignore,\n  source: ignore,\n  spacer: ignore,\n  style: ignore,\n  svg: ignore,\n  template: ignore,\n  title: ignore,\n  track: ignore,\n\n  abbr: all,\n  acronym: all,\n  bdi: all,\n  bdo: all,\n  big: all,\n  blink: all,\n  button: all,\n  canvas: all,\n  cite: all,\n  data: all,\n  details: all,\n  dfn: all,\n  font: all,\n  ins: all,\n  label: all,\n  map: all,\n  marquee: all,\n  meter: all,\n  nobr: all,\n  noscript: all,\n  object: all,\n  output: all,\n  progress: all,\n  rb: all,\n  rbc: all,\n  rp: all,\n  rt: all,\n  rtc: all,\n  ruby: all,\n  slot: all,\n  small: all,\n  span: all,\n  sup: all,\n  sub: all,\n  tbody: all,\n  tfoot: all,\n  thead: all,\n  time: all,\n\n  address: wrapChildren,\n  article: wrapChildren,\n  aside: wrapChildren,\n  body: wrapChildren,\n  center: wrapChildren,\n  div: wrapChildren,\n  fieldset: wrapChildren,\n  figcaption: wrapChildren,\n  figure: wrapChildren,\n  form: wrapChildren,\n  footer: wrapChildren,\n  header: wrapChildren,\n  hgroup: wrapChildren,\n  html: wrapChildren,\n  legend: wrapChildren,\n  main: wrapChildren,\n  multicol: wrapChildren,\n  nav: wrapChildren,\n  picture: wrapChildren,\n  section: wrapChildren,\n\n  a,\n  audio: media,\n  b: strong,\n  base,\n  blockquote,\n  br,\n  code: inlineCode,\n  dir: list,\n  dl,\n  dt: li,\n  dd: li,\n  del,\n  em,\n  h1: heading,\n  h2: heading,\n  h3: heading,\n  h4: heading,\n  h5: heading,\n  h6: heading,\n  hr,\n  i: em,\n  iframe,\n  img,\n  image: img,\n  input,\n  kbd: inlineCode,\n  li,\n  listing: code,\n  mark: em,\n  ol: list,\n  p,\n  plaintext: code,\n  pre: code,\n  q,\n  s: del,\n  samp: inlineCode,\n  select,\n  strike: del,\n  strong,\n  summary: p,\n  table,\n  td: tableCell,\n  textarea,\n  th: tableCell,\n  tr: tableRow,\n  tt: inlineCode,\n  u: em,\n  ul: list,\n  var: inlineCode,\n  video: media,\n  wbr,\n  xmp: code\n}\n\nfunction ignore() {}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Root} Root\n */\n\nimport {all} from '../all.js'\nimport {wrap, wrapNeeded} from '../util/wrap.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(h, node) {\n  let children = all(h, node)\n\n  if (h.document || wrapNeeded(children)) {\n    children = wrap(children)\n  }\n\n  return h(node, 'root', children)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h(node, 'text', wrapText(h, node.value))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Comment} Comment\n */\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(h, node) {\n  return h(node, 'html', '<!--' + wrapText(h, node.value) + '-->')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function a(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(\n    node,\n    'link',\n    {\n      title: props.title || null,\n      url: resolve(h, String(props.href || '') || null)\n    },\n    all(h, node)\n  )\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function base(h, node) {\n  if (!h.baseFound) {\n    h.frozenBaseUrl =\n      String((node.properties && node.properties.href) || '') || null\n    h.baseFound = true\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {wrapChildren} from '../util/wrap-children.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrapChildren(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function br(h, node) {\n  return h.wrapText ? h(node, 'break') : h(node, 'text', ' ')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function hr(h, node) {\n  return h(node, 'thematicBreak')\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function iframe(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  const src = String(props.src || '')\n  const title = String(props.title || '')\n\n  // Only create a link if there is a title.\n  // We can’t use the content of the frame because conforming HTML parsers treat\n  // it as text, whereas legacy parsers treat it as HTML, so it will likely\n  // contain tags that will show up in text.\n  if (src && title) {\n    return {\n      type: 'link',\n      title: null,\n      url: resolve(h, src),\n      children: [{type: 'text', value: wrapText(h, title)}]\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function q(h, node) {\n  const expected = h.quotes[h.qNesting % h.quotes.length]\n\n  h.qNesting++\n  const contents = all(h, node)\n  h.qNesting--\n\n  contents.unshift({type: 'text', value: expected.charAt(0)})\n\n  contents.push({\n    type: 'text',\n    value: expected.length > 1 ? expected.charAt(1) : expected\n  })\n\n  return contents\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function select(h, node) {\n  const values = findSelectedOptions(h, node)\n  let index = -1\n  /** @type {Array.<string>} */\n  const results = []\n  /** @type {[string, string|null]} */\n  let value\n\n  while (++index < values.length) {\n    value = values[index]\n    results.push(value[1] ? value[1] + ' (' + value[0] + ')' : value[0])\n  }\n\n  if (results.length > 0) {\n    return h(node, 'text', wrapText(h, results.join(', ')))\n  }\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function textarea(h, node) {\n  return h(node, 'text', wrapText(h, toText(node)))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableRow(h, node) {\n  return h(node, 'tableRow', all(h, node))\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function wbr(h, node) {\n  return h(node, 'text', '\\u200B')\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Text} Text\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').HWithoutProps} HWithoutProps\n * @typedef {import('./types.js').HWithProps} HWithProps\n * @typedef {import('./types.js').MdastNode} MdastNode\n * @typedef {import('./types.js').MdastRoot} MdastRoot\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {convert} from 'unist-util-is'\nimport {visit} from 'unist-util-visit'\nimport {one} from './one.js'\nimport {handlers} from './handlers/index.js'\nimport {own} from './util/own.js'\n\nexport {one} from './one.js'\nexport {all} from './all.js'\n\nconst block = convert(['heading', 'paragraph', 'root'])\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n */\nexport function toMdast(tree, options = {}) {\n  /** @type {Object.<string, Element>} */\n  const byId = {}\n  /** @type {MdastNode|MdastRoot} */\n  let mdast\n\n  /**\n   * @type {H}\n   */\n  const h = Object.assign(\n    /**\n     * @type {HWithProps & HWithoutProps}\n     */\n    (\n      /**\n       * @param {Node} node\n       * @param {string} type\n       * @param {Properties|string|Array.<Node>} [props]\n       * @param {string|Array.<Node>} [children]\n       */\n      (node, type, props, children) => {\n        /** @type {Properties|undefined} */\n        let properties\n\n        if (typeof props === 'string' || Array.isArray(props)) {\n          children = props\n          properties = {}\n        } else {\n          properties = props\n        }\n\n        /** @type {Node} */\n        // @ts-expect-error Assume valid `type` and `children`/`value`.\n        const result = {type, ...properties}\n\n        if (typeof children === 'string') {\n          // @ts-expect-error: Looks like a literal.\n          result.value = children\n        } else if (children) {\n          // @ts-expect-error: Looks like a parent.\n          result.children = children\n        }\n\n        if (node.position) {\n          result.position = node.position\n        }\n\n        return result\n      }\n    ),\n    {\n      nodeById: byId,\n      baseFound: false,\n      inTable: false,\n      wrapText: true,\n      /** @type {string|null} */\n      frozenBaseUrl: null,\n      qNesting: 0,\n      handlers: options.handlers\n        ? {...handlers, ...options.handlers}\n        : handlers,\n      document: options.document,\n      checked: options.checked || '[x]',\n      unchecked: options.unchecked || '[ ]',\n      quotes: options.quotes || ['\"']\n    }\n  )\n\n  visit(tree, 'element', (node) => {\n    const id =\n      node.properties &&\n      'id' in node.properties &&\n      String(node.properties.id).toUpperCase()\n\n    if (id && !own.call(byId, id)) {\n      byId[id] = node\n    }\n  })\n\n  // @ts-expect-error: does return a transformer, that does accept any node.\n  rehypeMinifyWhitespace({newlines: options.newlines === true})(tree)\n\n  const result = one(h, tree, undefined)\n\n  if (!result) {\n    mdast = {type: 'root', children: []}\n  } else if (Array.isArray(result)) {\n    mdast = {type: 'root', children: result}\n  } else {\n    mdast = result\n  }\n\n  visit(mdast, 'text', ontext)\n\n  return mdast\n\n  /**\n   * Collapse text nodes, and fix whitespace.\n   * Most of this is taken care of by `rehype-minify-whitespace`, but\n   * we’re generating some whitespace too, and some nodes are in the end\n   * ignored.\n   * So clean up.\n   *\n   * @type {import('unist-util-visit/complex-types').BuildVisitor<MdastRoot, 'text'>}\n   */\n  function ontext(node, index, parent) {\n    /* c8 ignore next 3 */\n    if (index === null || !parent) {\n      return\n    }\n\n    const previous = parent.children[index - 1]\n\n    if (previous && previous.type === node.type) {\n      previous.value += node.value\n      parent.children.splice(index, 1)\n\n      if (previous.position && node.position) {\n        previous.position.end = node.position.end\n      }\n\n      // Iterate over the previous node again, to handle its total value.\n      return index - 1\n    }\n\n    node.value = node.value.replace(/[\\t ]*(\\r?\\n|\\r)[\\t ]*/, '$1')\n\n    // We don’t care about other phrasing nodes in between (e.g., `[ asd ]()`),\n    // as there the whitespace matters.\n    if (parent && block(parent)) {\n      if (!index) {\n        node.value = node.value.replace(/^[\\t ]+/, '')\n      }\n\n      if (index === parent.children.length - 1) {\n        node.value = node.value.replace(/[\\t ]+$/, '')\n      }\n    }\n\n    if (!node.value) {\n      parent.children.splice(index, 1)\n      return index\n    }\n  }\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {import('hast-util-to-mdast').Options} Options\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n */\n\nimport {toMdast} from 'hast-util-to-mdast'\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new mdast\n * tree (bridge-mode).\n * Without destination, returns the mdast tree: further plugins run on that\n * tree (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `hast-util-to-mdast`.\n */\nconst rehypeRemark =\n  /**\n   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}\n   */\n  (\n    /**\n     * @param {Processor|Options} [destination]\n     * @param {Options} [options]\n     */\n    function (destination, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {Processor|undefined} */\n      let processor\n\n      if (typeof destination === 'function') {\n        processor = destination\n        settings = options || {}\n      } else {\n        settings = destination || {}\n      }\n\n      if (settings.document === undefined || settings.document === null) {\n        settings = Object.assign({}, settings, {document: true})\n      }\n\n      return processor ? bridge(processor, settings) : mutate(settings)\n    }\n  )\n\nexport default rehypeRemark\n\n/**\n * Bridge-mode.\n * Runs the destination with the new mdast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], HastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toMdast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the mdast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>}\n */\nfunction mutate(options = {}) {\n  return (node) => {\n    const result = /** @type {MdastRoot} */ (toMdast(node, options))\n    return result\n  }\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n */\n\n/**\n * @param {Context} base\n * @param {Options} extension\n * @returns {Context}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {string} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Blockquote} node\n */\nexport function blockquote(node, _, context, safeOptions) {\n  const exit = context.enter('blockquote')\n  const tracker = track(safeOptions)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').Break} Break\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @type {Handle}\n * @param {Break} _\n */\nexport function hardBreak(_, _1, context, safe) {\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Code} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, context) {\n  return Boolean(\n    !context.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Code} node\n */\nexport function code(node, _, context, safeOptions) {\n  const marker = checkFence(context)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, context)) {\n    const exit = context.enter('codeIndented')\n    const value = indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = track(safeOptions)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = context.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = context.enter('codeFencedLang' + suffix)\n    value += tracker.move(\n      safe(context, node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = context.enter('codeFencedMeta' + suffix)\n    value += tracker.move(' ')\n    value += tracker.move(\n      safe(context, node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['quote'], undefined>}\n */\nexport function checkQuote(context) {\n  const marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Emphasis} node\n */\nexport function emphasis(node, _, context, safeOptions) {\n  const marker = checkEmphasis(context)\n  const exit = context.enter('emphasis')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Emphasis} _\n */\nfunction emphasisPeek(_, _1, context) {\n  return context.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['emphasis'], undefined>}\n */\nexport function checkEmphasis(context) {\n  const marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, context) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (context.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../types.js').Handle} Handle\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @type {Handle}\n * @param {HTML} node\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @type {Handle}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimage.peek = imagePeek\n\n/**\n * @type {Handle}\n * @param {Image} node\n */\nexport function image(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('image')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  value += tracker.move(\n    safe(context, node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @type {Handle}\n * @param {ImageReference} node\n */\nexport function imageReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('imageReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  const alt = safe(context, node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, context) {\n  const raw = toString(node)\n\n  return Boolean(\n    !context.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlink.peek = linkPeek\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nexport function link(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = track(safeOptions)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      containerPhrasing(node, context, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @type {Handle}\n * @param {LinkReference} node\n */\nexport function linkReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('linkReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  const text = containerPhrasing(node, context, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrdered(context) {\n  const marker = context.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['rule'], undefined>}\n */\nexport function checkRule(context) {\n  const marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Strong} node\n */\nexport function strong(node, _, context, safeOptions) {\n  const marker = checkStrong(context)\n  const exit = context.enter('strong')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Strong} _\n */\nfunction strongPeek(_, _1, context) {\n  return context.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['strong'], undefined>}\n */\nexport function checkStrong(context) {\n  const marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['fence'], undefined>}\n */\nexport function checkFence(context) {\n  const marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Get the count of the longest repeating streak of `character` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} character\n *   Single character to look for.\n * @returns {number}\n *   Count of most frequent adjacent `character`s in `value`.\n */\nexport function longestStreak(value, character) {\n  const source = String(value)\n  let index = source.indexOf(character)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = source.indexOf(character, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Definition} node\n */\nexport function definition(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('definition')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  value += tracker.move(\n    safe(context, association(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Heading} node\n */\nexport function heading(node, _, context, safeOptions) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = track(safeOptions)\n\n  if (formatHeadingAsSetext(node, context)) {\n    const exit = context.enter('headingSetext')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = context.enter('headingAtx')\n  const subexit = context.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = containerPhrasing(node, context, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkBulletOrderedOther} from '../util/check-bullet-ordered-other.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {List} node\n */\nexport function list(node, parent, context, safeOptions) {\n  const exit = context.enter('list')\n  const bulletCurrent = context.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(context) : checkBullet(context)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? checkBulletOrderedOther(context)\n    : checkBulletOther(context)\n  const bulletLastUsed = context.bulletLastUsed\n  let useDifferentMarker = false\n\n  if (\n    parent &&\n    // Explicit `other` set.\n    (node.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther) &&\n    bulletLastUsed &&\n    bullet === bulletLastUsed\n  ) {\n    useDifferentMarker = true\n  }\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      context.stack[context.stack.length - 1] === 'list' &&\n      context.stack[context.stack.length - 2] === 'listItem' &&\n      context.stack[context.stack.length - 3] === 'list' &&\n      context.stack[context.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      context.indexStack[context.indexStack.length - 1] === 0 &&\n      context.indexStack[context.indexStack.length - 2] === 0 &&\n      context.indexStack[context.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(context) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  context.bulletCurrent = bullet\n  const value = containerFlow(node, context, safeOptions)\n  context.bulletLastUsed = bullet\n  context.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBulletOrdered} from './check-bullet-ordered.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrderedOther(context) {\n  const bulletOrdered = checkBulletOrdered(context)\n  const bulletOrderedOther = context.options.bulletOrderedOther\n\n  if (!bulletOrderedOther) {\n    return bulletOrdered === '.' ? ')' : '.'\n  }\n\n  if (bulletOrderedOther !== '.' && bulletOrderedOther !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOrderedOther +\n        '` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOrderedOther === bulletOrdered) {\n    throw new Error(\n      'Expected `bulletOrdered` (`' +\n        bulletOrdered +\n        '`) and `bulletOrderedOther` (`' +\n        bulletOrderedOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOrderedOther\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBulletOther(context) {\n  const bullet = checkBullet(context)\n  const bulletOther = context.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\n/**\n * @type {Handle}\n * @param {Paragraph} node\n */\nexport function paragraph(node, _, context, safeOptions) {\n  const exit = context.enter('paragraph')\n  const subexit = context.enter('phrasing')\n  const value = containerPhrasing(node, context, safeOptions)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(node, _, context, safeOptions) {\n  return containerFlow(node, context, safeOptions)\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(node, _, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {ThematicBreak} _\n */\nexport function thematicBreak(_, _1, context) {\n  const value = (\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(context))\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['ruleRepetition'], undefined>}\n */\nexport function checkRuleRepetition(context) {\n  const repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, context) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, context) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, context)))\n  ) {\n    return false\n  }\n\n  // Two lists with the same marker.\n  if (\n    left.type === 'list' &&\n    left.type === right.type &&\n    Boolean(left.ordered) === Boolean(right.ordered) &&\n    !(left.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther)\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {Context} */\n  // @ts-expect-error: we’ll add `handle` later.\n  const context = {\n    enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {},\n    indexStack: []\n  }\n\n  configure(context, {unsafe, join, handlers: handle})\n  configure(context, options)\n\n  if (context.options.tightDefinitions) {\n    configure(context, {join: [joinDefinition]})\n  }\n\n  /** @type {Handle} */\n  context.handle = zwitch('type', {\n    invalid,\n    // @ts-expect-error: hush.\n    unknown,\n    // @ts-expect-error: hush.\n    handlers: context.handlers\n  })\n\n  let result = context.handle(tree, null, context, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Context['enter']} */\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\n/**\n * @type {Handle}\n * @param {unknown} value\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","import remarkStringify from './lib/index.js'\n\nexport default remarkStringify\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/** @type {import('unified').Plugin<[Options]|void[], Node, string>} */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions:\n          /** @type {ToMarkdownOptions['extensions']} */ (\n            this.data('toMarkdownExtensions')\n          ) || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n"],"names":["selfClosers","area","base","br","col","command","embed","frame","hr","img","input","keygen","link","meta","param","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","closeOnOpen","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","isSpace","ch","cachedName","cachedInput","cachedPos","tagNameAfter","offset","pos","next","peek","name","String","fromCharCode","toLowerCase","question","bang","undefined","ElementContext","parent","this","hash","i","length","charCodeAt","startTagTerms","elementContext","ContextTracker","start","shift","context","term","stack","indexOf","reduce","reuse","node","type","id","strict","tagStart","ExternalTokenizer","advance","close","acceptToken","dialectEnabled","cx","hasOwnProperty","contextual","commentContent","dashes","contentTokenizer","tag","textToken","endToken","lastState","state","matchedLen","scriptTokens","styleTokens","textareaTokens","htmlHighlighting","styleTags","tags","TagName","AttributeName","Is","Comment","ProcessingInst","DoctypeDecl","parser","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","dialects","noMatch","tokenPrec","getAttrs","element","attrs","Object","create","firstChild","getChildren","att","getChild","value","read","from","to","maybeNest","configureNesting","script","style","textarea","array","RangeError","push","parseMixed","space","isAlpha","identifiers","inside","canShift","descendant","includes","unitToken","cssHighlighting","NamespaceName","KeyframeName","ClassName","PseudoClassName","IdName","NumberLiteral","KeywordQuery","UnaryQueryOp","VariableName","Callee","Unit","AtKeyword","MatchOp","BinOp","Important","ParenthesizedContent","ColorLiteral","StringLiteral","spec_callee","__proto__","lang","url","domain","regexp","selector","spec_AtKeyword","spec_identifier","not","only","specialized","get","_properties","properties","document","body","names","prop","test","sort","map","label","pseudoClasses","values","concat","identifier","cssCompletionSource","syntaxTree","resolveInner","options","validFor","explicit","above","resolve","before","childBefore","cssLanguage","LRLanguage","props","indentNodeProp","Declaration","continuedIndent","foldNodeProp","Block","foldInside","languageData","commentTokens","block","open","indentOnInput","wordChars","css","LanguageSupport","data","of","autocomplete","templateContent","trackNewline","insertSemicolon","fallback","noSemicolon","after","incdecToken","mayPostfix","template","afterDollar","jsHighlight","TemplateString","Super","BooleanLiteral","null","Star","VariableDefinition","Label","PropertyName","PrivatePropertyName","PropertyDefinition","PrivatePropertyDefinition","UpdateOp","LineComment","BlockComment","Number","ArithOp","LogicOp","BitOp","CompareOp","RegExp","Equals","TypeName","TypeDefinition","JSXAttributeValue","JSXText","export","as","default","async","function","true","false","void","typeof","super","new","await","yield","delete","class","extends","public","private","protected","readonly","instanceof","in","const","import","keyof","unique","infer","is","abstract","implements","let","var","interface","enum","namespace","module","declare","global","for","while","with","do","if","else","switch","case","try","catch","finally","return","throw","break","continue","debugger","spec_word","set","static","override","spec_LessThan","jsx","ts","dynamicPrecedences","tsExtends","snippets","snippetCompletion","detail","javascriptLanguage","IfStatement","except","TryStatement","LabeledStatement","flatIndent","SwitchBody","textAfter","closed","isCase","baseIndent","unit","delimitedIndent","closing","ArrowFunction","JSXElement","lineIndent","JSXEscape","column","tree","closeBrackets","brackets","line","typescriptLanguage","configure","dialect","jsxLanguage","tsxLanguage","javascript","config","typescript","ifNotIn","completeFromList","autoCloseTags","elementName","doc","max","sliceString","Math","min","android","navigator","userAgent","EditorView","view","text","composing","compositionStarted","readOnly","isActiveAt","changes","changeByRange","range","_a","_b","_c","head","around","EditorSelection","insert","lastChild","empty","dispatch","userEvent","scrollIntoView","Targets","Charsets","Methods","Encs","Bool","S","Tags","a","href","ping","media","target","hreflang","abbr","acronym","applet","alt","coords","shape","audio","src","mediagroup","crossorigin","preload","autoplay","loop","controls","b","basefont","bdi","bdo","big","cite","button","formaction","autofocus","disabled","formenctype","formmethod","formnovalidate","formtarget","canvas","width","height","caption","center","code","span","colgroup","icon","radiogroup","title","checked","datagrid","multiple","datalist","del","datetime","details","dfn","em","eventsource","figcaption","figure","font","action","enctype","method","novalidate","frameset","children","html","manifest","iframe","srcdoc","sandbox","seamless","ismap","usemap","dirname","list","maxlength","pattern","placeholder","size","step","accept","required","ins","kbd","challenge","keytype","legend","sizes","mark","content","charset","meter","low","high","optimum","noframes","noscript","object","typemustmatch","reversed","selected","output","progress","q","ruby","s","samp","defer","select","slot","small","strike","strong","scoped","sub","summary","sup","colspan","rowspan","headers","rows","cols","wrap","scope","time","kind","srclang","tt","u","video","poster","muted","GlobalAttrs","accesskey","contenteditable","contextmenu","draggable","dropzone","hidden","inert","itemid","itemprop","itemref","itemscope","itemtype","spellcheck","autocorrect","autocapitalize","tabindex","translate","onclick","rel","role","split","AllTags","keys","GlobalAttrNames","findParentElement","skip","cur","allowedChildren","parentInfo","openTags","tagName","completeTag","end","sliceDoc","apply","boost","completeCloseTag","htmlCompletionSource","scan","last","isError","elt","info","attrName","completeAttrName","nameNode","token","quoteStart","quoteEnd","slice","completeAttrValue","level","completeStartTag","htmlLanguage","Element","exec","Document","endElt","first","matchClosingTags","support","Type","CompositeBlock","positions","hashProp","NodeProp","child","Tree","nodeSet","types","balance","makeTree","NodeType","parentHash","LeafBlock","marks","parsers","Line","basePos","depth","markers","indent","forwardInner","newPos","skipSpace","countIndent","pop","findColumn","goal","result","skipForList","bl","OrderedList","isOrderedList","isBulletList","BulletList","isHorizontalRule","DefaultSkipMarkup","Blockquote","QuoteMark","lineStart","moveBase","ListItem","_cx","moveBaseColumn","skipSpaceBack","isFencedCode","isBlockquote","breaking","count","isSetextUnderline","inList","isAtxHeading","EmptyLine","CommentEnd","ProcessingEnd","HTMLBlockStyle","isHTMLBlock","rest","e","getListIndent","indentAfter","indented","addCodeText","CodeText","DefaultBlockParsers","LinkReference","IndentedCode","pendingMarks","nextLine","m","codeStart","filter","addNode","buffer","writeElements","finish","CodeBlock","FencedCode","fenceEnd","len","infoFrom","infoTo","CodeMark","CodeInfo","textStart","textEnd","prevLineEnd","startContext","HorizontalRule","newBase","ListMark","ATXHeading","off","endOfSpace","buf","write","HeaderMark","parseInline","ATXHeading1","HTMLBlock","trailing","nodeType","CommentBlock","ProcessingInstructionBlock","SetextHeading","LinkReferenceParser","leaf","stage","elts","scrub","complete","addLeafElement","nextStage","parseLinkLabel","LinkMark","parseLinkTitle","titleEnd","lineEnd","parseURL","SetextHeadingParser","underline","underlineMark","SetextHeading1","SetextHeading2","DefaultLeafBlocks","_","DefaultEndLeaf","scanLineResult","BlockContext","fragments","ranges","atEnd","dontInject","Set","stoppedAt","rangeI","absoluteLineStart","absoluteLineEnd","FragmentCursor","readLine","finishContext","reuseFragment","blockParsers","forward","leafBlockParsers","parse","lines","endLeafBlock","stop","finishLeaf","moveTo","matches","taken","takeNodes","withoutGaps","gapFrom","gapTo","moveRangeI","r","lineChunkAt","textOffset","nextFrom","scanLine","reset","handler","skipContextMarkup","Error","chunk","lineChunks","eol","getNodeType","none","addChild","toTree","injectMarks","top","addGaps","injectGaps","topNode","inline","Paragraph","TreeElement","Buffer","dont","has","rangeEnd","movePastNext","upto","inclusive","nextSibling","propValues","MarkdownParser","blockNames","inlineParsers","inlineNames","wrappers","nodeTypes","t","w","spec","resolveConfig","nonEmpty","defineNodes","assign","styles","composite","some","group","Array","isArray","Tag","NodeSet","extend","remove","rm","parseBlock","found","findName","splice","endLeaf","InlineContext","outer","char","resolveMarkers","Parser","conf","conc","wrapA","wrapB","inner","Escape","nodes","writeTo","reused","topID","startOff","EmphasisUnderscore","EmphasisAsterisk","LinkStart","ImageStart","InlineDelimiter","side","Escapable","Punctuation","DefaultInline","escaped","append","Entity","InlineCode","curSize","HTMLTag","URL","comment","procInst","ProcessingInstruction","Emphasis","pBefore","pAfter","sBefore","sAfter","leftFlanking","rightFlanking","canOpen","canClose","HardBreak","Link","Image","LinkEnd","parts","part","takeContent","finishLink","j","startPos","endPos","unshift","dest","LinkTitle","requireNonWS","LinkLabel","emp","closeSize","k","startIndex","elements","eI","NotLast","fragment","fragmentEnd","cursor","nextFragment","c","rPos","childAfter","fragEnd","openEnd","blockI","prevEnd","prevI","isAnonymous","add","markdownHighlighting","n","leftOverSpace","nextPos","parseCode","codeParser","htmlParser","overlay","infoNode","StrikethroughDelim","Strikethrough","addDelimiter","parseRow","startI","cellStart","cellEnd","esc","parseCell","hasPipe","str","delimiterLine","TableParser","lineText","firstRow","Table","TaskParser","GFM","parentType","parseSubSuper","addElement","Superscript","Subscript","Emoji","match","defineLanguageFacet","commonmark","lineAt","languageDataProp","mkLang","Language","commonmarkLanguage","markdownLanguage","getCodeParser","languages","defaultLanguage","LanguageDescription","language","ParseContext","load","nodeStart","Context","spaceBefore","spaceAfter","item","number","itemNumber","getContext","replace","renumberList","prev","isMark","markdownKeymap","key","run","emptyLine","delTo","marker","blank","lineBreak","prevLine","quoted","index","continued","charAt","update","contextNodeForDelete","spaceEnd","htmlNoMatch","markdown","codeLanguages","defaultCodeLanguage","addKeymap","defaultCode","extensions","Prec","keymap","all","h","one","own","wrapText","fn","dataMdast","call","handlers","unknown","phrasing","convert","runs","wrapNeeded","onphrasing","onnonphrasing","queue","nonphrasing","identity","flattened","flatten","wrapChildren","frozenBaseUrl","findAfter","POSITIVE_INFINITY","searchLineFeeds","searchTabOrSpaces","convertElement","cell","row","notRendered","Boolean","blockOrCaption","toText","results","whitespace","inferWhitespace","breakBefore","breakAfter","collectText","innerTextCollection","repeat","join","prefix","suffix","items","collectElement","collectPreText","lastIndex","trimAndCollapseSpacesAndTabs","noWrap","isCode","classList","className","listItemsSpread","spread","wrapListItems","handle","ordered","heading","inlineCode","findSelectedOptions","findOptions","parseInt","selectedOptions","hasProperty","checkbox","clone","linkInFallbackContent","visit","EXIT","toString","tableCell","rowSpan","colSpan","toCells","root","doctype","ignore","bgsound","dialog","isindex","math","nextid","noembed","shadow","spacer","svg","blink","marquee","nobr","rb","rbc","rtc","main","multicol","picture","baseFound","clean","groups","titles","definitions","image","texts","toUpperCase","nodeById","listing","plaintext","expected","quotes","qNesting","contents","inTable","headless","rowIndex","cellIndex","align","SKIP","inspect","toRows","columns","cells","otherRowIndex","colIndex","newCells","alignIndex","xmp","toMdast","mdast","byId","position","unchecked","rehypeMinifyWhitespace","newlines","ontext","previous","destination","settings","processor","file","error","bridge","mutate","extension","hardBreak","_1","safe","unsafe","character","patternInScope","formatCodeAsIndented","fences","checkQuote","quote","emphasis","safeOptions","checkEmphasis","exit","enter","tracker","move","containerPhrasing","current","formatHeadingAsSetext","literalWithBreak","setext","subexit","imageReference","referenceType","reference","association","formatLinkAsAutolink","raw","resourceLink","linkReference","checkBulletOrdered","bulletOrdered","checkRule","rule","checkStrong","indentLines","containerFlow","fence","checkFence","sequence","longestStreak","encode","definition","rank","lastIndexOf","closeAtx","bulletCurrent","bullet","checkBullet","bulletOther","bulletOrderedOther","checkBulletOrderedOther","checkBulletOther","bulletLastUsed","useDifferentMarker","firstListItem","indexStack","listItem","paragraph","thematicBreak","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","left","right","fullPhrasingSpans","inConstruct","notInConstruct","atBreak","invalid","joinDefinition","Compiler","tightDefinitions","zwitch","now","lineShift","toMarkdown"],"sourceRoot":""}