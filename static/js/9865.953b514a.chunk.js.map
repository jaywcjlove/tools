{"version":3,"file":"static/js/9865.953b514a.chunk.js","mappings":"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","sources":["../../node_modules/@lezer/json/dist/index.js","../../node_modules/@codemirror/lang-json/dist/index.js","../../node_modules/yaml/browser/dist/nodes/identity.js","../../node_modules/yaml/browser/dist/visit.js","../../node_modules/yaml/browser/dist/doc/directives.js","../../node_modules/yaml/browser/dist/doc/anchors.js","../../node_modules/yaml/browser/dist/doc/applyReviver.js","../../node_modules/yaml/browser/dist/nodes/toJS.js","../../node_modules/yaml/browser/dist/nodes/Node.js","../../node_modules/yaml/browser/dist/nodes/Alias.js","../../node_modules/yaml/browser/dist/nodes/Scalar.js","../../node_modules/yaml/browser/dist/doc/createNode.js","../../node_modules/yaml/browser/dist/nodes/Collection.js","../../node_modules/yaml/browser/dist/stringify/stringifyComment.js","../../node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../../node_modules/yaml/browser/dist/stringify/stringifyString.js","../../node_modules/yaml/browser/dist/stringify/stringify.js","../../node_modules/yaml/browser/dist/log.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","../../node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../../node_modules/yaml/browser/dist/nodes/Pair.js","../../node_modules/yaml/browser/dist/stringify/stringifyPair.js","../../node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../../node_modules/yaml/browser/dist/nodes/YAMLMap.js","../../node_modules/yaml/browser/dist/schema/common/map.js","../../node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../../node_modules/yaml/browser/dist/schema/common/seq.js","../../node_modules/yaml/browser/dist/schema/common/string.js","../../node_modules/yaml/browser/dist/schema/common/null.js","../../node_modules/yaml/browser/dist/schema/core/bool.js","../../node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../../node_modules/yaml/browser/dist/schema/core/float.js","../../node_modules/yaml/browser/dist/schema/core/int.js","../../node_modules/yaml/browser/dist/schema/core/schema.js","../../node_modules/yaml/browser/dist/schema/json/schema.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../../node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../../node_modules/yaml/browser/dist/schema/tags.js","../../node_modules/yaml/browser/dist/schema/Schema.js","../../node_modules/yaml/browser/dist/doc/Document.js","../../node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../../node_modules/yaml/browser/dist/errors.js","../../node_modules/yaml/browser/dist/compose/resolve-props.js","../../node_modules/yaml/browser/dist/compose/util-contains-newline.js","../../node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../../node_modules/yaml/browser/dist/compose/util-map-includes.js","../../node_modules/yaml/browser/dist/compose/resolve-block-map.js","../../node_modules/yaml/browser/dist/compose/resolve-end.js","../../node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../../node_modules/yaml/browser/dist/compose/compose-collection.js","../../node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../../node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../../node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../../node_modules/yaml/browser/dist/compose/compose-scalar.js","../../node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../../node_modules/yaml/browser/dist/compose/compose-node.js","../../node_modules/yaml/browser/dist/compose/composer.js","../../node_modules/yaml/browser/dist/compose/compose-doc.js","../../node_modules/yaml/browser/dist/parse/cst-visit.js","../../node_modules/yaml/browser/dist/parse/cst.js","../../node_modules/yaml/browser/dist/parse/lexer.js","../../node_modules/yaml/browser/dist/parse/parser.js","../../node_modules/yaml/browser/dist/parse/line-counter.js","../../node_modules/yaml/browser/dist/public-api.js","../../node_modules/@codemirror/legacy-modes/mode/yaml.js"],"sourcesContent":["import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \", :\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l\",\n  stateData: \"#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"isolate\", -2,6,11,\"\"],\n    [\"openedBy\", 7,\"{\",14,\"[\"],\n    [\"closedBy\", 8,\"}\",15,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oe~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Og~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zO]~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yO[~~'OO_~~'TO^~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n","const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        if (!value)\n            return '';\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value?.toISOString().replace(/(T00:00:00)?\\.000Z$/, '') ?? ''\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, floatTime, intTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else if (!found || indicator !== 'seq-item-ind')\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection ?? 'scalar'}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (bv.type === 'block-seq') {\n                            if (!it.explicitKey &&\n                                it.sep &&\n                                !includesToken(it.sep, 'newline')) {\n                                yield* this.pop({\n                                    type: 'error',\n                                    offset: this.offset,\n                                    message: 'Unexpected block-seq-ind on same line with key',\n                                    source: this.source\n                                });\n                                return;\n                            }\n                        }\n                        else if (atMapIndent) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\nvar keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\nexport const yaml = {\n  name: \"yaml\",\n  token: function(stream, state) {\n    var ch = stream.peek();\n    var esc = state.escaped;\n    state.escaped = false;\n    /* comments */\n    if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n      return \"string\";\n\n    if (state.literal && stream.indentation() > state.keyCol) {\n      stream.skipToEnd(); return \"string\";\n    } else if (state.literal) { state.literal = false; }\n    if (stream.sol()) {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      /* document start */\n      if(stream.match('---')) { return \"def\"; }\n      /* document end */\n      if (stream.match('...')) { return \"def\"; }\n      /* array list item */\n      if (stream.match(/^\\s*-\\s+/)) { return 'meta'; }\n    }\n    /* inline pairs/lists */\n    if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n      if (ch == '{')\n        state.inlinePairs++;\n      else if (ch == '}')\n        state.inlinePairs--;\n      else if (ch == '[')\n        state.inlineList++;\n      else\n        state.inlineList--;\n      return 'meta';\n    }\n\n    /* list separator */\n    if (state.inlineList > 0 && !esc && ch == ',') {\n      stream.next();\n      return 'meta';\n    }\n    /* pairs separator */\n    if (state.inlinePairs > 0 && !esc && ch == ',') {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      stream.next();\n      return 'meta';\n    }\n\n    /* start of value of a pair */\n    if (state.pairStart) {\n      /* block literals */\n      if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n      /* references */\n      if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable'; }\n      /* numbers */\n      if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n      if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n      /* keywords */\n      if (stream.match(keywordRegex)) { return 'keyword'; }\n    }\n\n    /* pairs (associative arrays) -> key */\n    if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n      state.pair = true;\n      state.keyCol = stream.indentation();\n      return \"atom\";\n    }\n    if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n    /* nothing found, continue */\n    state.pairStart = false;\n    state.escaped = (ch == '\\\\');\n    stream.next();\n    return null;\n  },\n  startState: function() {\n    return {\n      pair: false,\n      pairStart: false,\n      keyCol: 0,\n      inlinePairs: 0,\n      inlineList: 0,\n      literal: false,\n      escaped: false\n    };\n  },\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":["jsonHighlighting","styleTags","String","tags","string","Number","number","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","doc","toString","e","SyntaxError","pos","error","m","message","match","Math","min","length","line","from","getErrorPosition","severity","to","jsonLanguage","LRLanguage","define","name","configure","props","indentNodeProp","add","Object","continuedIndent","except","Array","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport","ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","contents","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","ci","splice","ck","cv","value","async","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","parent","pt","Error","escapeChars","Directives","constructor","yaml","this","docStart","docEnd","defaultYaml","defaultTags","clone","copy","atDocument","res","atNextDocument","explicit","onError","parts","trim","split","shift","handle","prefix","test","tagName","source","verbatim","slice","suffix","decodeURIComponent","tagString","tag","entries","startsWith","substring","replace","ch","lines","tagEntries","tagNames","_key","keys","some","tn","push","join","anchorIsValid","anchor","sa","stringify","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","applyReviver","reviver","obj","val","isArray","len","v0","v1","undefined","k","get","delete","set","call","toJS","arg","ctx","map","v","toJSON","data","aliasCount","count","onCreate","keep","NodeBase","type","defineProperty","create","getPrototypeOf","getOwnPropertyDescriptors","range","mapAsMap","maxAliasCount","onAnchor","arguments","TypeError","mapKeyWarned","values","super","resolve","found","_arg","msg","ReferenceError","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","item","c","kc","vc","max","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","createNode","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onTagObj","sourceObjects","ref","tagObj","filter","t","find","format","identify","findTagObject","iterator","nodeClass","default","collectionFromPath","isInteger","a","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","start","getFoldOptions","isBlock","containsDocumentMarker","doubleQuotedString","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockEndNewlines","RegExp","blockString","_ref","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","indentLength","limit","strLen","lineLengthOverLimit","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","header","foldedValue","literalFallback","foldOptions","body","stringifyString","inFlow","ss","_stringify","_type","actualString","indentStep","compat","plainString","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","flowCollectionPadding","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","repeat","resolvedAliases","o","testMatch","getTagObject","stringifyProps","warn","logLevel","warning","console","MERGE_KEY","merge","description","addToJSMap","addMergeToJSMap","mergeValue","srcMap","prototype","hasOwnProperty","addPairToJSMap","isMergeKey","jsKey","stringKey","strCtx","inStringifyKey","strKey","jsonStr","stringifyKey","jsValue","createPair","_","allNullValues","keyComment","explicitKey","vsb","vcb","valueComment","keyCommentDone","chompKeep","spaceBefore","flow","valueCommentDone","valueStr","ws","vs0","nl0","hasNewline","hasPropsLine","sp0","stringifyPair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","_ref2","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","_ref3","_ref4","fcPadding","reqNewline","linesAtValue","iv","reduce","sum","_ref5","ic","trimStart","findPair","YAMLMap","replacer","sortMapEntries","sort","pair","overwrite","_pair","sortEntries","findIndex","Type","YAMLSeq","idx","asItemIndex","seq","nullTag","boolTag","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","binary","Uint8Array","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","cn","createPairs","iterable","pairs","YAMLOMap","bind","omap","seenKeys","boolStringify","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","padStart","intTime","floatTime","timestamp","Date","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","toISOString","schemas","schema$1","schema$2","tagsByName","coreKnownTags","getTags","customTags","schemaName","addMergeTag","schemaTags","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","Document","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","stringKeys","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","setAnchors","aliasObjects","prevAnchors","createNodeAnchors","sv","jsonArg","hasDirectives","dir","cs","contentComment","dc","stringifyDocument","YAMLError","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","pointer","resolveProps","tokens","indicator","parentIndent","startOnNewline","atNewline","hasSpace","commentSep","reqSpace","tab","newlineAfterProp","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveEnd","blockMsg","resolveCollection","CN","coll","bm","composeNode","composeEmptyNode","atRoot","commentEnd","collItem","keyProps","atKey","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockMap","bs","resolveBlockSeq","fcName","prevItemComment","loop","endRange","expectedEnd","ce","ee","cePos","toUpperCase","resolveFlowCollection","Coll","resolveBlockScalar","scalar","ts","parseBlockScalarHeader","first","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","resolveFlowScalar","rel","badChar","foldLines","plainValue","singleQuotedValue","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","doubleQuotedValue","valueEnd","re","exec","lastIndex","r","N","L","P","fromCodePoint","composeScalar","tagToken","matchWithTest","kt","findScalarTagByName","findScalarTagByTest","emptyScalarPosition","before","isSrcToken","alias","composeAlias","nl","lastProp","expType","composeCollection","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","_this","forceDoc","endOffset","opts","contentEnd","composeDoc","_this2","cst","_visit","field","itemAtPath","index","tok","parentCollection","isEmpty","hexDigits","tagChars","flowIndicatorChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","quote","qb","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","lexeme","step","tokenType","pop","sourceToken","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atMapIndent","atNextItem","fs","flowScalar","LineCounter","addNewLine","low","high","mid","parseOptions","lineCounter","_reviver","composer","_doc","forEach","round","keywordRegex","esc","escaped","skipToEnd","indentation","keyCol","sol","pairStart","inlinePairs","inlineList","startState","commentTokens"],"sourceRoot":""}