{"version":3,"file":"static/js/5514.ecf5cec3.chunk.js","mappings":"kRAAaA,EAAO,2kBA6BPC,EAAM,ilC,WCvBJ,SAASC,IACtB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAqB,CACpBC,OAAQA,EACRC,UAAW,CACTC,MAAO,OACPC,WAAY,EAACR,EAAAA,EAAAA,SACbS,YAAcR,SAAAA,GACZ,IAAMS,EAAUC,KAAKC,MAAMX,GAG3B,OAFgB,IAAIY,EAAAA,WAAW,CAAEC,QAAQ,IAClBC,MAAML,EAE/B,GAEFM,WAAY,CACVT,MAAO,MACPC,WAAY,EAACS,EAAAA,EAAAA,QACbC,aAAejB,SAAAA,GACb,IAAMkB,EAAS,IAAIC,EAAAA,UAAU,CAAC,GACxBC,EAASC,EAAAA,aAAAA,SAAsBrB,EAAK,CAAC,GAC3C,GAAsB,mBAAXoB,GAAwBA,EAAOE,IACxC,MAAM,IAAIC,MAAM,QAAQH,EAAOE,IAAIE,IAAG,WAAWJ,EAAOE,IAAIG,KAAI,UAAUL,EAAOE,IAAII,KAGvF,OADgBhB,KAAKiB,UAAUT,EAAOP,MAAMX,GAAM,KAAM,EAE1D,IAIR,C","sources":["../../packages/json-xml/src/sample.ts","../../packages/json-xml/src/index.tsx"],"sourcesContent":["export const json = `{\n  \"any_name\": {\n    \"person\": {\n      \"phone\": [\n          122233344553,\n          122233344554\n      ],\n      \"name\": \"Boris\",\n      \"age\": 34,\n      \"married\": \"Yes\",\n      \"birthday\": \"Mon, 31 Aug 1970 02:03:04 +0300\",\n      \"address\": [\n          {\n              \"city\": \"Moscow\",\n              \"street\": \"Kahovka\",\n              \"buildingNo\": 1,\n              \"flatNo\": 2\n          },\n          {\n              \"city\": \"Tula\",\n              \"street\": \"Lenina\",\n              \"buildingNo\": 3,\n              \"flatNo\": 78\n          }\n      ]\n    }\n  }\n}`;\n\nexport const val = `<any_name>\n  <person>\n    <phone>+122233344550</phone>\n    <name>Jack</name>\n    <phone>+122233344551</phone>\n    <age>33</age>\n    <married firstTime=\"No\">Yes</married>\n    <birthday>Wed, 28 Mar 1979 12:13:14 +0300</birthday>\n    <address>\n      <city>New York</city>\n      <street>Park Ave</street>\n      <buildingNo>1</buildingNo>\n      <flatNo>1</flatNo>\n    </address>\n    <address>\n      <city>Boston</city>\n      <street>Centre St</street>\n      <buildingNo>33</buildingNo>\n      <flatNo>24</flatNo>\n    </address>\n  </person>\n  <person>\n    <phone>+122233344553</phone>\n    <name>Boris</name>\n    <phone>+122233344554</phone>\n    <age>34</age>\n    <married firstTime=\"Yes\">Yes</married>\n    <birthday>Mon, 31 Aug 1970 02:03:04 +0300</birthday>\n    <address>\n      <city>Moscow</city>\n      <street>Kahovka</street>\n      <buildingNo>1</buildingNo>\n      <flatNo>2</flatNo>\n    </address>\n    <address>\n      <city>Tula</city>\n      <street>Lenina</street>\n      <buildingNo>3</buildingNo>\n      <flatNo>78</flatNo>\n    </address>\n  </person>\n</any_name>`;\n","import { LayoutEditorConverter } from '@wcj/tools-react-components';\nimport { XMLParser, XMLBuilder, XMLValidator } from 'fast-xml-parser';\nimport { json } from '@codemirror/lang-json';\nimport { xml } from '@codemirror/lang-xml';\nimport * as sample from './sample';\n\nexport default function JSON2XML() {\n  return (\n    <LayoutEditorConverter\n      sample={sample}\n      leftProps={{\n        title: 'JSON',\n        extensions: [json()],\n        onLeftInput: (val) => {\n          const jsonobj = JSON.parse(val);\n          const builder = new XMLBuilder({ format: true });\n          const xmlStr = builder.build(jsonobj);\n          return xmlStr;\n        },\n      }}\n      rightProps={{\n        title: 'XML',\n        extensions: [xml()],\n        onRightInput: (val) => {\n          const parser = new XMLParser({});\n          const result = XMLValidator.validate(val, {});\n          if (typeof result !== 'boolean' && result.err) {\n            throw new Error(`XML: ${result.err.msg}, line: ${result.err.line}, col: ${result.err.col}`);\n          }\n          const jsonStr = JSON.stringify(parser.parse(val), null, 2);\n          return jsonStr;\n        },\n      }}\n    />\n  );\n}\n"],"names":["json","val","JSON2XML","_jsx","LayoutEditorConverter","sample","leftProps","title","extensions","onLeftInput","jsonobj","JSON","parse","XMLBuilder","format","build","rightProps","xml","onRightInput","parser","XMLParser","result","XMLValidator","err","Error","msg","line","col","stringify"],"sourceRoot":""}