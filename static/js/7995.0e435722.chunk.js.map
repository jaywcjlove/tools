{"version":3,"file":"static/js/7995.0e435722.chunk.js","mappings":"+PACaA,EAAM,6GCCNC,EAAgC,CAC3CC,SAAS,EAOTC,uBAAuB,EAKvBC,+BAAgC,IAMhCC,mBAAmB,EAEnBC,2BAA4B,GAK5BC,iBAAiB,EAOjBC,wBAAyB,EAKzBC,sBAAsB,GAkDXC,EAAa,CACxBR,SAAS,EACTC,uBAAuB,EACvBC,+BAAgC,EAChCC,mBAAmB,EACnBC,2BAA4B,EAC5BC,iBAAiB,EACjBC,wBAAyB,IACzBC,sBAAsB,EACtBE,yBAA0B,cAC1BC,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,cAAc,EACdC,wBAAyB,EACzBC,aAAa,EACbC,2BAA2B,EAC3BC,oBAAqB,CAAC,OACtBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,EACtBC,qBAAqB,EACrBC,uBAAuB,GAOZC,EAAe,CAC1B9B,SAAS,EACTC,uBAAuB,EACvBC,+BAAgC,IAChCC,mBAAmB,EACnBC,2BAA4B,GAC5BC,iBAAiB,EACjBC,wBAAyB,EACzBC,sBAAsB,EACtBE,yBAA0B,cAC1BC,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,cAAc,EACdC,wBAAyB,GACzBC,aAAa,EACbC,2BAA2B,EAC3Ba,mCAAoC,IACpCZ,oBAAqB,CAAC,UACtBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,IACtBC,qBAAqB,EACrBC,uBAAuB,GAOZG,EAAY,CACvBhC,SAAS,EACTC,uBAAuB,EACvBE,mBAAmB,EACnBE,iBAAiB,EACjBC,wBAAyB,EACzBC,sBAAsB,EACtBE,yBAA0B,cAC1BC,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,cAAc,EACdE,aAAa,EACbC,2BAA2B,EAC3BC,oBAAqB,GACrBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,IACtBE,uBAAuB,GAKZI,EAAgB,CAC3BjC,SAAS,EACTC,uBAAuB,EACvBE,mBAAmB,EACnBE,iBAAiB,EACjBC,wBAAyB,EACzBC,sBAAsB,EACtBE,yBAA0B,cAC1BC,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfC,eAAe,EACfC,UAAU,EACVC,cAAc,EACdE,aAAa,EACbC,2BAA2B,EAC3Ba,mCAAoC,GACpCZ,oBAAqB,GACrBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,IACtBE,uBAAuB,G,WCrMnBK,EAAOC,EAAAA,GAAAA,KAAW,0DAIT,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAActC,GAAW,eAAhDuC,EAAO,KAAEC,EAAU,KAClBC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,gBAAiB,WAAvCD,EACFE,GAASC,EAAAA,EAAAA,QAA2B,MAC1C,GAAwBN,EAAAA,EAAAA,UAA+B,OAAM,eAAtDO,EAAI,KAAEC,EAAO,KACpB,GAA0BR,EAAAA,EAAAA,UAASS,GAAiB,eAA7CC,EAAK,KAAEC,EAAQ,KACtB,GAA4CX,EAAAA,EAAAA,UAAS,IAAG,eAAjDY,EAAc,KAAEC,EAAiB,KACxC,GAA0Bb,EAAAA,EAAAA,UAAS,IAAG,eAA/Bc,EAAK,KAAU,KAStB,IAAMC,EAAsB,QAATR,EAAiBG,EAAQE,EAI5C,OACEI,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAC,SAAAA,EACNC,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXC,MAAM,wBACNC,OACEN,EAAAA,EAAAA,MAACO,EAAAA,SAAQ,CAAAL,SAAAA,EACPC,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CAACC,QAAS,kBAlB3B,WACE,GAAa,QAATlB,EAAgB,CAClB,IAAM9C,GAAMiE,EAAAA,EAAAA,WAAUhB,EAAOT,GAC7BY,EAAkBpD,EAAIkE,oBACxB,CAEAnB,EAAiB,QAATD,EAAiB,aAAe,MAC1C,CAWiCqB,EAAkB,EAAAV,SACrBf,EAAR,QAATI,EAA2B,aAA0B,cAEvDQ,IAAcI,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAACnB,MAAOK,KAClCI,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACLC,QAAS,WAAM,QACC,OAAd,EAAApB,EAAOyB,UAAa,OAAN,EAAdC,EAAgBC,OAAhBC,EAAsBC,QACtBvB,EAASF,GACTD,EAAQ,MACV,EAAEU,SAEDf,EAAU,SAAU,CAAEgC,GAAI,gBAGhCjB,UAEDC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACT1B,MAAOK,EACPsB,IAAKhC,EACLiC,OAAO,qBACPC,WAAY,EAACC,EAAAA,EAAAA,eACbC,SAAW/B,SAAAA,GACA,QAATH,EAAiBI,EAASD,GAASG,EAAkBH,EACvD,OAGJS,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXC,MAAOlB,EAAU,UAAW,CAAEgC,GAAI,WAClCO,MAAO,CAAEC,SAAU,KACnBrB,OACEN,EAAAA,EAAAA,MAACO,EAAAA,SAAQ,CAAAL,SAAAA,EACPC,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CAACC,QAAS,kBAAMvB,EAAWxC,EAAY,EAAAwD,SAAEf,EAAU,QAAS,CAAEgC,GAAI,cACzEhB,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CAACC,QAAS,kBAAMvB,EAAW,CAAC,EAAG,EAAAgB,SAAEf,EAAU,OAAQ,CAAEgC,GAAI,gBAEnEjB,UAEDC,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CAACC,UA7C4B,CAC5CH,MAAO,CAAEJ,OAAQ,qBAAsBQ,SAAU,OAAQC,OAAQ,IA4C1B7B,UACjCF,EAAAA,EAAAA,MAACgC,EAAAA,GAAO,CAACN,MAAO,CAAEO,WAAY,IAAK/B,SAAAA,EACjCF,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACb3C,KAAK,QACL4C,KAAK,UACLzC,MAAM,aACN+B,SAAU,YAAWW,EAARC,OACXnD,GAAW,UAAK/B,GAClB,EAAE+C,SAAAA,CAEDf,EAAU,cAAa,KAAEgB,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,uBAE7Ca,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACb3C,KAAK,QACL4C,KAAK,UACLzC,MAAM,eACN+B,SAAU,YAAWa,EAARD,OACXnD,GAAW,UAAKT,GAClB,EAAEyB,SAAAA,CAEDf,EAAU,gBAAe,KAAEgB,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,yBAE/Ca,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACb3C,KAAK,QACL4C,KAAK,UACLzC,MAAM,YACN+B,SAAU,YAAWc,EAARF,OACXnD,GAAW,UAAKP,GAClB,EAAEuB,SAAAA,CAEDf,EAAU,aAAY,KAAEgB,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,sBAE5CgB,EAAAA,EAAAA,KAAC+B,EAAAA,GAAc,CACb3C,KAAK,QACL4C,KAAK,UACLzC,MAAM,gBACN+B,SAAU,YAAWe,EAARH,OACXnD,GAAW,UAAKN,GAClB,EAAEsB,SAEDf,EAAU,oBAEbgB,EAAAA,EAAAA,KAAC+B,EAAAA,GAAc,CACb3C,KAAK,QACL4C,KAAK,UACLzC,MAAM,aACN+C,gBAAc,EACdhB,SAAU,YAAWiB,EAARL,OACXnD,GAAW,UAAKxC,GAClB,EAAEwD,SAEDf,EAAU,iBAEbgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACRxC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAO,CAAA9B,SAAAA,0IACRC,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACbU,UAAW3D,EAAQtC,QACnB8E,SAAU,YAAgB,IAAbY,EAAQQ,EAARR,OACXnD,GAAW,UAAKD,EAAY,CAAEtC,QAAS0F,EAAOO,UAChD,EAAE1C,SAAAA,CAEDf,EAAU,WAAU,KAAEgB,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,0CAE1CgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACbU,UAAW3D,EAAQrC,sBACnB6E,SAAU,YAAgB,IAAbY,EAAQS,EAART,OACXnD,GAAW,UAAKD,EAAY,CAAErC,sBAAuByF,EAAOO,UAC9D,EAAE1C,SAAAA,CAAAA,0BAEoBC,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,+BAEzCgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACba,UAAW9D,EAAQrC,sBACnB2C,KAAK,QACLyD,IAAI,IACJC,IAAI,IACJC,KAAK,OACLxD,MAAOT,EAAQpC,+BACf4E,SAAU,YAAgB,IAAbY,EAAQc,EAARd,OACXnD,GAAW,UAAKD,EAAY,CAAEpC,+BAAgCuG,OAAOf,EAAO3C,SAC9E,EAAEQ,SAAAA,CAEDjB,EAAQpC,gCACTsD,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,GAAM,mCACyBA,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,wCAElDgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACbU,UAAW3D,EAAQnC,kBACnB2E,SAAU,YAAgB,IAAbY,EAAQgB,EAARhB,OACXnD,GAAW,UAAKD,EAAY,CAAEnC,kBAAmBuF,EAAOO,UAC1D,EAAE1C,SAAAA,CAAAA,sBAEgBC,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,2BAErCgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACb3C,KAAK,QACLyD,IAAI,IACJC,IAAI,IACJC,KAAK,MACLH,UAAW9D,EAAQnC,kBACnB4C,MAAOT,EAAQlC,2BACf0E,SAAU,YAAgB,IAAbY,EAAQiB,EAARjB,OACXnD,GAAW,UAAKD,EAAY,CAAElC,2BAA4BqG,OAAOf,EAAO3C,SAC1E,EAAEQ,SAAAA,CAEDjB,EAAQlC,4BACToD,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,GAAM,+BACqBA,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,oCAE9CgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACbU,UAAW3D,EAAQjC,gBACnByE,SAAU,YAAgB,IAAbY,EAAQkB,EAARlB,OACXnD,GAAW,UAAKD,EAAY,CAAEjC,gBAAiBqF,EAAOO,UACxD,EAAE1C,SAAAA,CAAAA,oBAEcC,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,yBAEnCgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACb3C,KAAK,QACLyD,IAAI,OACJC,IAAI,IACJC,KAAK,IACLH,UAAW9D,EAAQjC,gBACnB0C,MAAOT,EAAQhC,wBACfwE,SAAU,YAAgB,IAAbY,EAAQmB,EAARnB,OACXnD,GAAW,UAAKD,EAAY,CAAEhC,wBAAyBmG,OAAOf,EAAO3C,SACvE,EAAEQ,SAAAA,CAEDjB,EAAQhC,yBACTkD,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,GAAM,4BACkBA,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,iCAE3CgB,EAAAA,EAAAA,KAACwC,EAAAA,GAAO,KACR3C,EAAAA,EAAAA,MAACkC,EAAAA,GAAc,CACbU,UAAW3D,EAAQ/B,qBACnBuE,SAAU,YAAgB,IAAbY,EAAQoB,EAARpB,OACXnD,GAAW,UAAKD,EAAY,CAAE/B,qBAAsBmF,EAAOO,UAC7D,EAAE1C,SAAAA,CAAAA,yBAEmBC,EAAAA,EAAAA,KAACtB,EAAI,CAAAqB,SAAEf,EAAU,oCAK7CW,IAASK,EAAAA,EAAAA,KAACuD,EAAAA,GAAW,CAAAxD,SAAEJ,MAG9B,C","sources":["../../packages/js-obfuscator/src/sample.ts","../../packages/js-obfuscator/src/options.ts","../../packages/js-obfuscator/src/index.tsx"],"sourcesContent":["export const js = `function hello(who = \"world\") { console.log(\\`Hello, \\${who}!\\`) }`;\nexport const val = `function hello(who = \"world\") {\n  console.log(\\`Hello, \\${who}!\\`)\n  return \\`Hello, \\${who}!\\`\n}\nhello();\n`;\n","import { ObfuscatorOptions } from 'javascript-obfuscator';\n\nexport const allOptions: ObfuscatorOptions = {\n  compact: true,\n  /**\n   * Enables code control flow flattening. Control flow flattening is a structure transformation of the source code that hinders program comprehension.\n   *\n   * This option greatly affects the performance up to 1.5x slower runtime speed.\n   * Use `controlFlowFlatteningThreshold` to set percentage of nodes that will affected by control flow flattening.\n   */\n  controlFlowFlattening: false,\n  /**\n   * `controlFlowFlattening` 转换将应用于任何给定节点的概率。\n   * `controlFlowFlatteningThreshold`: 0 equals to `controlFlowFlattening`: false.\n   */\n  controlFlowFlatteningThreshold: 0.75,\n  /**\n   * ⚠️ Dramatically increases size of obfuscated code (up to 200%), use only if size of obfuscated code doesn't matter. Use `deadCodeInjectionThreshold` to set percentage of nodes that will affected by dead code injection.\n   * ⚠️ This option forcibly enables stringArray option.\n   * With this option, random blocks of dead code will be added to the obfuscated code.\n   */\n  deadCodeInjection: false,\n  /** Allows to set percentage of nodes that will affected by `deadCodeInjection`. */\n  deadCodeInjectionThreshold: 0.4,\n  /**\n   * Can freeze your browser if you open the Developer Tools.\n   * This option makes it almost impossible to use the debugger function of the Developer Tools (both on WebKit-based and Mozilla Firefox).\n   */\n  debugProtection: false,\n  /**\n   * ⚠️ Can freeze your browser! Use at own risk.\n   * If set, an interval in milliseconds is used to force the debug mode on the Console tab, making it harder to use other features of the Developer Tools.\n   * Works if `debugProtection` is enabled.\n   * Recommended value is between 2000 and 4000 milliseconds.\n   */\n  debugProtectionInterval: 0,\n  /**\n   * ⚠️ This option disables console calls globally for all scripts\n   * Disables the use of console.log, console.info, console.error, console.warn, console.debug, console.exception and console.trace by replacing them with empty functions. This makes the use of the debugger harder.\n   */\n  disableConsoleOutput: false,\n  // domainLock: string[],\n  // domainLockRedirectUrl: string,\n  // forceTransformStrings: string[],\n  // identifierNamesCache: TIdentifierNamesCache,\n  // identifierNamesGenerator: TTypeFromEnum<typeof IdentifierNamesGenerator>,\n  // identifiersDictionary: string[],\n  // identifiersPrefix: string,\n  // ignoreImports: boolean,\n  // inputFileName: string,\n  // log: boolean,\n  // numbersToExpressions: boolean,\n  // optionsPreset: TOptionsPreset,\n  // renameGlobals: boolean,\n  // renameProperties: boolean,\n  // renamePropertiesMode: TRenamePropertiesMode;\n  // reservedNames: string[];\n  // reservedStrings: string[];\n  // seed: string | number;\n  // selfDefending: boolean;\n  // simplify: boolean;\n  // sourceMap: boolean;\n  // sourceMapBaseUrl: string;\n  // sourceMapFileName: string;\n  // sourceMapMode: TTypeFromEnum<typeof SourceMapMode>;\n  // sourceMapSourcesMode: TTypeFromEnum<typeof SourceMapSourcesMode>;\n  // splitStrings: boolean;\n  // splitStringsChunkLength: number;\n  // stringArray: boolean;\n  // stringArrayCallsTransform: boolean;\n  // stringArrayCallsTransformThreshold: number;\n  // stringArrayEncoding: TStringArrayEncoding[];\n  // stringArrayIndexesType: TStringArrayIndexesType[];\n  // stringArrayIndexShift: boolean;\n  // stringArrayRotate: boolean;\n  // stringArrayShuffle: boolean;\n  // stringArrayWrappersChainedCalls: boolean;\n  // stringArrayWrappersCount: number;\n  // stringArrayWrappersParametersMaxCount: number;\n  // stringArrayWrappersType: TStringArrayWrappersType;\n  // stringArrayThreshold: number;\n  // target: TTypeFromEnum<typeof ObfuscationTarget>;\n  // transformObjectKeys: boolean;\n  // unicodeEscapeSequence: boolean;\n};\n\n/**\n * High obfuscation, low performance\n * The performance will be much slower than without obfuscation\n */\nexport const highOption = {\n  compact: true,\n  controlFlowFlattening: true,\n  controlFlowFlatteningThreshold: 1,\n  deadCodeInjection: true,\n  deadCodeInjectionThreshold: 1,\n  debugProtection: true,\n  debugProtectionInterval: 4000,\n  disableConsoleOutput: true,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: true,\n  renameGlobals: false,\n  selfDefending: true,\n  simplify: true,\n  splitStrings: true,\n  splitStringsChunkLength: 5,\n  stringArray: true,\n  stringArrayCallsTransform: true,\n  stringArrayEncoding: ['rc4'],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 5,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 5,\n  stringArrayWrappersType: 'function',\n  stringArrayThreshold: 1,\n  transformObjectKeys: true,\n  unicodeEscapeSequence: false,\n};\n\n/**\n * Medium obfuscation, optimal performance\n * The performance will be slower than without obfuscation\n */\nexport const mediumOption = {\n  compact: true,\n  controlFlowFlattening: true,\n  controlFlowFlatteningThreshold: 0.75,\n  deadCodeInjection: true,\n  deadCodeInjectionThreshold: 0.4,\n  debugProtection: false,\n  debugProtectionInterval: 0,\n  disableConsoleOutput: true,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: true,\n  renameGlobals: false,\n  selfDefending: true,\n  simplify: true,\n  splitStrings: true,\n  splitStringsChunkLength: 10,\n  stringArray: true,\n  stringArrayCallsTransform: true,\n  stringArrayCallsTransformThreshold: 0.75,\n  stringArrayEncoding: ['base64'],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 2,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 4,\n  stringArrayWrappersType: 'function',\n  stringArrayThreshold: 0.75,\n  transformObjectKeys: true,\n  unicodeEscapeSequence: false,\n};\n\n/**\n * Low obfuscation, High performance\n * The performance will be at a relatively normal level\n */\nexport const lowOption = {\n  compact: true,\n  controlFlowFlattening: false,\n  deadCodeInjection: false,\n  debugProtection: false,\n  debugProtectionInterval: 0,\n  disableConsoleOutput: true,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: false,\n  renameGlobals: false,\n  selfDefending: true,\n  simplify: true,\n  splitStrings: false,\n  stringArray: true,\n  stringArrayCallsTransform: false,\n  stringArrayEncoding: [],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 1,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 2,\n  stringArrayWrappersType: 'variable',\n  stringArrayThreshold: 0.75,\n  unicodeEscapeSequence: false,\n};\n/**\n * Default preset, High performance\n */\nexport const defaultOption = {\n  compact: true,\n  controlFlowFlattening: false,\n  deadCodeInjection: false,\n  debugProtection: false,\n  debugProtectionInterval: 0,\n  disableConsoleOutput: false,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: false,\n  renameGlobals: false,\n  selfDefending: false,\n  simplify: true,\n  splitStrings: false,\n  stringArray: true,\n  stringArrayCallsTransform: false,\n  stringArrayCallsTransformThreshold: 0.5,\n  stringArrayEncoding: [],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 1,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 2,\n  stringArrayWrappersType: 'variable',\n  stringArrayThreshold: 0.75,\n  unicodeEscapeSequence: false,\n};\n","import { Fragment, useRef, useState } from 'react';\nimport {\n  StyledLayout,\n  CopyButton,\n  ResultCode,\n  ResultProps,\n  Spacing,\n  CodeEditor,\n  Button,\n  Wrapper,\n  CheckboxOption,\n  ErrorLayout,\n  Divider,\n} from '@wcj/tools-react-components';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { ReactCodeMirrorRef } from '@uiw/react-codemirror';\nimport { obfuscate } from 'javascript-obfuscator';\nimport * as sample from './sample';\nimport { allOptions, defaultOption, highOption, mediumOption, lowOption } from './options';\n\nconst Info = styled.span`\n  color: var(--color-fg-subtle);\n`;\n\nexport default function JSObfuscator() {\n  const [options, setOptions] = useState<any>(allOptions);\n  const { t } = useTranslation(['js-obfuscator', 'common']);\n  const editor = useRef<ReactCodeMirrorRef>(null);\n  const [type, setType] = useState<'raw' | 'obfuscator'>('raw');\n  const [value, setValue] = useState(sample.val || '');\n  const [valueObfuscate, setValueObfuscate] = useState('');\n  const [error, setError] = useState('');\n  function handleObfuscate() {\n    if (type === 'raw') {\n      const val = obfuscate(value, options);\n      setValueObfuscate(val.getObfuscatedCode());\n    } else {\n    }\n    setType(type === 'raw' ? 'obfuscator' : 'raw');\n  }\n  const codeSource = type === 'raw' ? value : valueObfuscate;\n  const resultProps: ResultProps['codeProps'] = {\n    style: { height: 'calc(100vh - 87px)', overflow: 'auto', margin: 0 },\n  };\n  return (\n    <Wrapper>\n      <StyledLayout\n        title=\"JavaScript Obfuscator\"\n        extra={\n          <Fragment>\n            <Button onClick={() => handleObfuscate()}>\n              {type === 'raw' ? t<string>('Obfuscator') : t<string>('Raw Code')}\n            </Button>\n            {codeSource && <CopyButton value={codeSource} />}\n            <Button\n              onClick={() => {\n                editor.current?.view?.focus();\n                setValue(sample.val);\n                setType('raw');\n              }}\n            >\n              {t<string>('Sample', { ns: 'common' })}\n            </Button>\n          </Fragment>\n        }\n      >\n        <CodeEditor\n          value={codeSource}\n          ref={editor}\n          height=\"calc(100vh - 87px)\"\n          extensions={[javascript()]}\n          onChange={(value) => {\n            type === 'raw' ? setValue(value) : setValueObfuscate(value);\n          }}\n        />\n      </StyledLayout>\n      <StyledLayout\n        title={t<string>('Options', { ns: 'common' })}\n        style={{ maxWidth: 420 }}\n        extra={\n          <Fragment>\n            <Button onClick={() => setOptions(allOptions)}>{t<string>('Reset', { ns: 'common' })}</Button>\n            <Button onClick={() => setOptions({})}>{t<string>('None', { ns: 'common' })}</Button>\n          </Fragment>\n        }\n      >\n        <ResultCode codeProps={resultProps}>\n          <Spacing style={{ paddingTop: 10 }}>\n            <CheckboxOption\n              type=\"radio\"\n              name=\"options\"\n              value=\"highOption\"\n              onChange={({ target }) => {\n                setOptions({ ...highOption });\n              }}\n            >\n              {t<string>('highOption')} <Info>{t<string>('highOptionDes')}</Info>\n            </CheckboxOption>\n            <CheckboxOption\n              type=\"radio\"\n              name=\"options\"\n              value=\"mediumOption\"\n              onChange={({ target }) => {\n                setOptions({ ...mediumOption });\n              }}\n            >\n              {t<string>('mediumOption')} <Info>{t<string>('mediumOptionDes')}</Info>\n            </CheckboxOption>\n            <CheckboxOption\n              type=\"radio\"\n              name=\"options\"\n              value=\"lowOption\"\n              onChange={({ target }) => {\n                setOptions({ ...lowOption });\n              }}\n            >\n              {t<string>('lowOption')} <Info>{t<string>('lowOptionDes')}</Info>\n            </CheckboxOption>\n            <CheckboxOption\n              type=\"radio\"\n              name=\"options\"\n              value=\"defaultOption\"\n              onChange={({ target }) => {\n                setOptions({ ...defaultOption });\n              }}\n            >\n              {t<string>('defaultOption')}\n            </CheckboxOption>\n            <CheckboxOption\n              type=\"radio\"\n              name=\"options\"\n              value=\"allOptions\"\n              defaultChecked\n              onChange={({ target }) => {\n                setOptions({ ...allOptions });\n              }}\n            >\n              {t<string>('allOptions')}\n            </CheckboxOption>\n            <Divider />\n            <Spacing>👆👆👆以上是预设的默认配置👆👆👆</Spacing>\n            <Divider />\n            <CheckboxOption\n              checked={!!options.compact}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ compact: target.checked } });\n              }}\n            >\n              {t<string>('compact')} <Info>{t<string>('Compact code output on one line.')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              checked={!!options.controlFlowFlattening}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ controlFlowFlattening: target.checked } });\n              }}\n            >\n              controlFlowFlattening <Info>{t<string>('controlFlowFlattening')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              disabled={!options.controlFlowFlattening}\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.01\"\n              value={options.controlFlowFlatteningThreshold}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ controlFlowFlatteningThreshold: Number(target.value) } });\n              }}\n            >\n              {options.controlFlowFlatteningThreshold}\n              <br />\n              controlFlowFlatteningThreshold <Info>{t<string>('controlFlowFlatteningThreshold')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              checked={!!options.deadCodeInjection}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ deadCodeInjection: target.checked } });\n              }}\n            >\n              deadCodeInjection <Info>{t<string>('deadCodeInjection')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              type=\"range\"\n              max=\"1\"\n              min=\"0\"\n              step=\"0.1\"\n              disabled={!options.deadCodeInjection}\n              value={options.deadCodeInjectionThreshold}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ deadCodeInjectionThreshold: Number(target.value) } });\n              }}\n            >\n              {options.deadCodeInjectionThreshold}\n              <br />\n              deadCodeInjectionThreshold <Info>{t<string>('deadCodeInjectionThreshold')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              checked={!!options.debugProtection}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ debugProtection: target.checked } });\n              }}\n            >\n              debugProtection <Info>{t<string>('debugProtection')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              type=\"range\"\n              max=\"4000\"\n              min=\"0\"\n              step=\"1\"\n              disabled={!options.debugProtection}\n              value={options.debugProtectionInterval}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ debugProtectionInterval: Number(target.value) } });\n              }}\n            >\n              {options.debugProtectionInterval}\n              <br />\n              debugProtectionInterval <Info>{t<string>('debugProtectionInterval')}</Info>\n            </CheckboxOption>\n            <Divider />\n            <CheckboxOption\n              checked={!!options.disableConsoleOutput}\n              onChange={({ target }) => {\n                setOptions({ ...options, ...{ disableConsoleOutput: target.checked } });\n              }}\n            >\n              disableConsoleOutput <Info>{t<string>('disableConsoleOutput')}</Info>\n            </CheckboxOption>\n          </Spacing>\n        </ResultCode>\n      </StyledLayout>\n      {error && <ErrorLayout>{error}</ErrorLayout>}\n    </Wrapper>\n  );\n}\n"],"names":["val","allOptions","compact","controlFlowFlattening","controlFlowFlatteningThreshold","deadCodeInjection","deadCodeInjectionThreshold","debugProtection","debugProtectionInterval","disableConsoleOutput","highOption","identifierNamesGenerator","log","numbersToExpressions","renameGlobals","selfDefending","simplify","splitStrings","splitStringsChunkLength","stringArray","stringArrayCallsTransform","stringArrayEncoding","stringArrayIndexShift","stringArrayRotate","stringArrayShuffle","stringArrayWrappersCount","stringArrayWrappersChainedCalls","stringArrayWrappersParametersMaxCount","stringArrayWrappersType","stringArrayThreshold","transformObjectKeys","unicodeEscapeSequence","mediumOption","stringArrayCallsTransformThreshold","lowOption","defaultOption","Info","styled","JSObfuscator","useState","options","setOptions","t","useTranslation","editor","useRef","type","setType","sample","value","setValue","valueObfuscate","setValueObfuscate","error","codeSource","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","Button","onClick","obfuscate","getObfuscatedCode","handleObfuscate","CopyButton","current","_editor$current","view","_editor$current$view","focus","ns","CodeEditor","ref","height","extensions","javascript","onChange","style","maxWidth","ResultCode","codeProps","overflow","margin","Spacing","paddingTop","CheckboxOption","name","_ref","target","_ref2","_ref3","_ref4","defaultChecked","_ref5","Divider","checked","_ref6","_ref7","disabled","max","min","step","_ref8","Number","_ref9","_ref10","_ref11","_ref12","_ref13","ErrorLayout"],"sourceRoot":""}