{"version":3,"file":"static/js/1008.6c3c836c.chunk.js","mappings":"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","sources":["../../packages/json-format/src/sample.ts","../../packages/json-format/src/index.tsx","../../node_modules/@lezer/json/dist/index.es.js","../../node_modules/@codemirror/lang-json/dist/index.js"],"sourcesContent":["export const json = `{\"name\": \"@wcj/tools-react-components\", \"version\": \"1.0.1\", \"main\": \"./cjs/index.js\", \"module\": \"./esm/index.js\", \"scripts\": {\"build\": \"tsbb build\", \"watch\": \"tsbb watch\"}, \"keywords\": [], \"files\": [\"cjs\", \"esm\", \"src\"], \"author\": \"Kenny Wong <wowohoo@qq.com>\", \"license\": \"MIT\", \"dependencies\": {\"@uiw/react-codemirror\": \"^4.7.0\", \"@uiw/copy-to-clipboard\": \"^1.0.12\", \"styled-components\": \"^5.3.5\"}, \"devDependencies\": {\"@types/styled-components\": \"^5.1.25\"}, \"peerDependencies\": {\"react\": \">=16.14.0\", \"react-dom\": \">=16.14.0\"} }`;\nexport const val = ``;\n","import { Fragment, useRef, useState } from 'react';\nimport { StyledLayout, CopyButton, CodeEditor, Button, Wrapper, ErrorLayout } from '@wcj/tools-react-components';\nimport { json } from '@codemirror/lang-json';\nimport { ReactCodeMirrorRef } from '@uiw/react-codemirror';\nimport prettier from 'prettier';\nimport parserBabel from 'prettier/parser-babel';\nimport * as sample from './sample';\n\nexport default function JSONFormat() {\n  const editor = useRef<ReactCodeMirrorRef>(null);\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n  const [tabWidth, setTabWidth] = useState(2);\n  const handleFormat = () => {\n    try {\n      setError('');\n      setValue(prettier.format(value, { parser: 'json', tabWidth: tabWidth, printWidth: 30, plugins: [parserBabel] }));\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      }\n    }\n  };\n  const handleMinify = () => {\n    try {\n      setError('');\n      setValue(JSON.stringify(JSON.parse(value)));\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      }\n    }\n  };\n  return (\n    <Wrapper>\n      <StyledLayout\n        title=\"Input JSON\"\n        extra={\n          <Fragment>\n            {value && <Button onClick={() => handleFormat()}>Format</Button>}\n            {value && <Button onClick={() => handleMinify()}>Minify</Button>}\n            {value && (\n              <select onChange={(evn) => setTabWidth(Number(evn.target.value))}>\n                <option value={2}>2 Tab Space</option>\n                <option value={3}>3 Tab Space</option>\n                <option value={4}>4 Tab Space</option>\n                <option value={5}>5 Tab Space</option>\n              </select>\n            )}\n            {value && <CopyButton value={value} />}\n            {sample.json && (\n              <Button\n                onClick={() => {\n                  editor.current?.view?.focus();\n                  setValue(sample.json);\n                }}\n              >\n                Sample\n              </Button>\n            )}\n          </Fragment>\n        }\n      >\n        <CodeEditor\n          value={value}\n          ref={editor}\n          height=\"calc(100vh - 87px)\"\n          extensions={[json()]}\n          onChange={(value) => {\n            setValue(value);\n          }}\n        />\n      </StyledLayout>\n      {error && <ErrorLayout>{error}</ErrorLayout>}\n    </Wrapper>\n  );\n}\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"âš  JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n"],"names":["json","JSONFormat","editor","useRef","useState","value","setValue","error","setError","tabWidth","setTabWidth","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","Button","onClick","prettier","parser","printWidth","plugins","parserBabel","Error","message","handleFormat","JSON","stringify","parse","handleMinify","onChange","evn","Number","target","CopyButton","current","view","focus","sample","CodeEditor","ref","height","extensions","ErrorLayout","jsonHighlighting","styleTags","String","tags","PropertyName","Null","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonLanguage","LRLanguage","configure","props","indentNodeProp","Object","continuedIndent","except","Array","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","LanguageSupport"],"sourceRoot":""}