{"version":3,"file":"static/js/7438.17464678.chunk.js","mappings":"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","sources":["../../packages/svg-optimizer/src/compress.ts","../../packages/svg-optimizer/src/utils.ts","../../packages/svg-optimizer/src/index.tsx"],"sourcesContent":["import {\n  optimize,\n  OptimizeOptions,\n  OptimizedSvg,\n  OptimizedError,\n  Plugin,\n  CustomPlugin,\n  Js2SvgOptions,\n} from 'svgo/dist/svgo.browser';\n\nexport type Settings = OptimizeOptions &\n  Js2SvgOptions & {\n    /**\n     * Precision of floating point numbers. Will be passed to each plugin that suppors this param.\n     * 0 almost always breaks images when used on `cleanupNumericValues`.\n     */\n    floatPrecision?: number | undefined;\n  };\n\nexport type Dimensions = { width: number; height: number };\ntype CreateDimensionsExtractor = () => [Dimensions, Plugin];\n\nconst createDimensionsExtractor: CreateDimensionsExtractor = () => {\n  const dimensions: Dimensions = { width: 0, height: 0 };\n  const plugin: CustomPlugin<any> = {\n    // @ts-ignore\n    type: 'visitor',\n    name: 'extract-dimensions',\n    fn: () => {\n      return {\n        element: {\n          // Node, parentNode\n          enter: ({ name, attributes }, { type }) => {\n            if (name === 'svg' && type === 'root') {\n              if (attributes.width !== undefined && attributes.height !== undefined) {\n                dimensions.width = Number.parseFloat(attributes.width);\n                dimensions.height = Number.parseFloat(attributes.height);\n              } else if (attributes.viewBox !== undefined) {\n                const viewBox = attributes.viewBox.split(/,\\s*|\\s+/);\n                dimensions.width = Number.parseFloat(viewBox[2]);\n                dimensions.height = Number.parseFloat(viewBox[3]);\n              }\n            }\n          },\n        },\n      };\n    },\n  };\n  return [dimensions, plugin];\n};\n\nexport function compress(svgInput: string, settings: Settings) {\n  const plugins: Plugin[] = [];\n\n  (settings.plugins || []).forEach((item) => {\n    if (item === 'cleanupNumericValues') {\n      const floatPrecision = Number(settings.floatPrecision);\n      plugins.push({\n        name: 'cleanupNumericValues',\n        params: {\n          floatPrecision: floatPrecision === 0 ? 1 : floatPrecision,\n        },\n      });\n    } else {\n      plugins.push(item);\n    }\n  });\n\n  const [dimensions, extractDimensionsPlugin] = createDimensionsExtractor();\n  const { data, modernError } = optimize(svgInput, {\n    multipass: settings.multipass,\n    floatPrecision: settings.floatPrecision,\n    plugins: [...plugins, extractDimensionsPlugin],\n    js2svg: {\n      indent: 2,\n      pretty: settings.pretty,\n    },\n  }) as OptimizedSvg;\n  return { data, dimensions, error: modernError ? (modernError as any).message : '' };\n}\n","/**\n * Use an array dictionary of units to be accessed based on the exponent.\n * Use `Number.prototype.toPrecision()` to truncate the number to a certain number of digits.\n * Return the prettified string by building it up, taking into account the supplied options and whether it is negative or not.\n * Omit the second argument, `precision`, to use a default precision of `3` digits.\n * Omit the third argument, `addSpace`, to add space between the number and unit by default.\n */\nexport const prettyBytes = (num: number, precision = 3, addSpace = true) => {\n  const UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  if (Math.abs(num) < 1) return num + (addSpace ? ' ' : '') + UNITS[0];\n  const exponent = Math.min(Math.floor(Math.log10(num < 0 ? -num : num) / 3), UNITS.length - 1);\n  const n = Number(((num < 0 ? -num : num) / 1000 ** exponent).toPrecision(precision));\n  return (num < 0 ? '-' : '') + n + (addSpace ? ' ' : '') + UNITS[exponent];\n};\n\nexport function fileReader(file: File, type: 'base64' | 'text'): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    if (type === 'base64') reader.readAsDataURL(file);\n    if (type === 'text') reader.readAsText(file);\n    reader.onloadend = () => {\n      if (reader.result) {\n        resolve(reader.result.toString());\n      } else {\n        resolve('');\n      }\n    };\n    reader.onerror = (err) => {\n      reject(err);\n    };\n  });\n}\n\nexport function round(num: number, places: number) {\n  const mult = 10 ** places;\n  return Math.floor(Math.round(num * mult)) / mult;\n}\n","import { useEffect, useState, Fragment } from 'react';\nimport { Wrapper, StyledLayout, CopyButton, ResultCode, Spacing, Button } from '@wcj/tools-react-components';\nimport styled, { css } from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Plugin } from 'svgo/dist/svgo.browser';\nimport { gzip } from 'pako';\nimport { Settings, compress, Dimensions } from './compress';\nimport { fileReader, prettyBytes, round } from './utils';\n\nexport interface ResultProps {\n  title?: string;\n  className?: string;\n}\n\nconst Info = styled.span`\n  color: var(--color-fg-subtle);\n`;\n\nconst Iframe = styled.iframe`\n  border: none;\n  overflow: hidden;\n  pointer-events: none;\n  max-width: 100%;\n`;\n\nconst InputFile = styled.input`\n  width: 100%;\n  display: block;\n`;\n\nconst PrettyBytesInfo = styled.div`\n  background-color: var(--color-neutral-muted);\n  padding: 10px;\n  margin-bottom: 60px;\n  margin-top: 15px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst Percen = styled.span<{ num: number }>`\n  font-weight: bold;\n  ${(props) => {\n    if (props.num > 100 || props.num === 0) {\n      return css`\n        color: red;\n      `;\n    }\n    if (props.num < 100) {\n      return css`\n        color: green;\n      `;\n    }\n    return css``;\n  }}\n`;\n\nconst defaultOptions: Settings = {\n  multipass: true,\n  pretty: true,\n  floatPrecision: 8,\n  plugins: [\n    'mergeStyles',\n    'cleanupAttrs',\n    'inlineStyles',\n    'minifyStyles',\n    'cleanupIDs',\n    'removeUselessDefs',\n    'cleanupNumericValues',\n    'convertColors',\n    'removeUnknownsAndDefaults',\n    'removeNonInheritableGroupAttrs',\n    'removeUselessStrokeAndFill',\n    'removeViewBox',\n    'cleanupEnableBackground',\n    'removeHiddenElems',\n    'removeEmptyText',\n    'convertShapeToPath',\n    'moveElemsAttrsToGroup',\n    'moveGroupAttrsToElems',\n    'collapseGroups',\n    'convertPathData',\n    'convertEllipseToCircle',\n    'convertTransform',\n    'removeEmptyAttrs',\n    'removeEmptyContainers',\n    'mergePaths',\n    'removeUnusedNS',\n    'sortDefsChildren',\n    'removeTitle',\n    'removeDesc',\n  ],\n};\n\ninterface CheckboxProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {}\nconst Checkbox: React.FC<React.PropsWithChildren<CheckboxProps>> = ({ children, ...other }) => {\n  return (\n    <label>\n      <span>\n        <input type=\"checkbox\" {...other} />\n        {children}\n      </span>\n    </label>\n  );\n};\n\nconst includesPlugin = (name: Plugin, plugins: Plugin[] = []) => plugins.includes(name);\n\ninterface ImageData {\n  raw?: string;\n  base64?: string;\n  tiny?: string;\n  error?: string;\n  name?: string;\n  dimensions?: Dimensions;\n}\n\nexport default function SVGOptimizer() {\n  const { t } = useTranslation(['svg-optimizer', 'common']);\n  const [options, setOptions] = useState<Settings>(defaultOptions);\n  const [imageData, setImageData] = useState<ImageData[]>([]);\n  const handleChange = async (evn: React.ChangeEvent<HTMLInputElement>) => {\n    const files = (evn.target as HTMLInputElement).files || [];\n    const data = await Promise.all(\n      Array.from(files).map(async (file) => {\n        console.log(file);\n        const base64 = await fileReader(file, 'base64');\n        const raw = await fileReader(file, 'text');\n        const d = compress(raw || '', options);\n        return { base64, raw, name: file.name, dimensions: d.dimensions, tiny: d.data };\n      }),\n    );\n    setImageData(data);\n  };\n  const settingPlugin = (name: Plugin, checked: boolean): Settings => {\n    const plugins: Plugin[] = [...(options.plugins || [])];\n    if (checked) {\n      if (!plugins.includes(name)) {\n        plugins.push(name);\n      }\n    } else {\n      plugins.splice(plugins.indexOf(name), 1);\n    }\n    return { ...options, plugins };\n  };\n\n  useEffect(() => {\n    if (options) {\n      const data: ImageData[] = [];\n      imageData.forEach((item) => {\n        const d = compress(item.raw || '', options);\n        data.push({ ...item, dimensions: d.dimensions, tiny: d.data, error: d.error });\n      });\n      setImageData(data);\n    }\n  }, [options]);\n\n  const opts: { plugin: Plugin; label: string; content: string }[] = [\n    { plugin: 'removeDoctype', label: 'Remove doctype', content: t('remove doctype declaration') },\n    { plugin: 'removeXMLProcInst', label: 'Remove XML ProcInst', content: t('remove XML processing instructions') },\n    { plugin: 'removeComments', label: 'Remove Comments', content: t('remove comments') },\n    { plugin: 'removeMetadata', label: 'Remove <metadata>', content: t('remove <metadata>') },\n    { plugin: 'removeXMLNS', label: 'Remove xmlns', content: t('removes the xmlns attribute (for inline SVG)') },\n    {\n      plugin: 'removeEditorsNSData',\n      label: 'Remove Editors Data',\n      content: t('remove editors namespaces, elements, and attributes'),\n    },\n    {\n      plugin: 'cleanupAttrs',\n      label: 'Cleanup attribute whitespace',\n      content: t('cleanup attributes from newlines, trailing, and repeating spaces'),\n    },\n    { plugin: 'mergeStyles', label: 'Merge Styles', content: t('merge multiple style elements into one') },\n    {\n      plugin: 'inlineStyles',\n      label: 'Inline Styles',\n      content: t('move and merge styles from <style> elements to element style attributes'),\n    },\n    { plugin: 'minifyStyles', label: 'Minify Styles', content: t('minify <style> elements content with CSSO') },\n    {\n      plugin: 'convertStyleToAttrs',\n      label: t('Style to attributes'),\n      content: t('convert styles into attributes'),\n    },\n    {\n      plugin: 'cleanupIDs',\n      label: t('Clean IDs'),\n      content: t('remove unused and minify used IDs'),\n    },\n    {\n      plugin: 'removeRasterImages',\n      label: t('Remove raster images'),\n      content: t('remove raster images'),\n    },\n    {\n      plugin: 'removeUselessDefs',\n      label: t('Remove unused defs'),\n      content: t('remove elements of <defs> without id'),\n    },\n    {\n      plugin: 'cleanupNumericValues',\n      label: t('Round/rewrite numbers'),\n      content: t('round numeric values to the fixed precision, remove default px units'),\n    },\n    {\n      plugin: 'cleanupListOfValues',\n      label: t('Round/rewrite number lists'),\n      content: t('round numeric values in attributes that take a list of numbers (like viewBox or enable-background)'),\n    },\n    {\n      plugin: 'convertColors',\n      label: t('Minify colours'),\n      content: t('convert colors (from rgb() to #rrggbb, from #rrggbb to #rgb)'),\n    },\n    {\n      plugin: 'removeUnknownsAndDefaults',\n      label: t('Remove unknowns & defaults'),\n      content: t('remove unknown elements content and attributes, remove attributes with default values'),\n    },\n    {\n      plugin: 'removeNonInheritableGroupAttrs',\n      label: t('Remove unneeded group attrs'),\n      content: t(`remove non-inheritable group's \"presentation\" attributes`),\n    },\n    {\n      plugin: 'removeUselessStrokeAndFill',\n      label: t('Remove useless stroke & fill'),\n      content: t(`remove useless stroke and fill attributes`),\n    },\n    {\n      plugin: 'removeViewBox',\n      label: t('Remove viewBox'),\n      content: t(`remove viewBox attribute when possible`),\n    },\n    {\n      plugin: 'cleanupEnableBackground',\n      label: t('Remove/tidy enable-background'),\n      content: t(`remove or cleanup enable-background attribute when possible`),\n    },\n    {\n      plugin: 'removeHiddenElems',\n      label: t('Remove hidden elements'),\n      content: t(`remove hidden elements`),\n    },\n    { plugin: 'removeEmptyText', label: 'Remove empty text', content: t('remove empty Text elements') },\n    {\n      plugin: 'convertShapeToPath',\n      label: 'Shapes to (smaller) paths',\n      content: t('convert some basic shapes to <path>'),\n    },\n    {\n      plugin: 'moveElemsAttrsToGroup',\n      label: 'Move attrs to parent group',\n      content: t(`move elements' attributes to their enclosing group`),\n    },\n    {\n      plugin: 'moveGroupAttrsToElems',\n      label: 'Move group attrs to elements',\n      content: t('move some group attributes to the contained elements'),\n    },\n    { plugin: 'collapseGroups', label: 'Collapse useless groups', content: t('collapse useless groups') },\n    {\n      plugin: 'convertPathData',\n      label: 'Round/rewrite paths',\n      content: t(\n        'convert Path data to relative or absolute (whichever is shorter), convert one segment to another, trim useless delimiters, smart rounding, and much more',\n      ),\n    },\n    {\n      plugin: 'convertEllipseToCircle',\n      label: 'Convert non-eccentric <ellipse> to <circle>',\n      content: t('convert non-eccentric <ellipse> to <circle>'),\n    },\n    {\n      plugin: 'convertTransform',\n      label: 'Round/rewrite transforms',\n      content: t('collapse multiple transforms into one, convert matrices to the short aliases, and much more'),\n    },\n    { plugin: 'removeEmptyAttrs', label: 'Remove empty attrs', content: t('remove empty attributes') },\n    {\n      plugin: 'removeEmptyContainers',\n      label: 'Remove empty containers',\n      content: t('remove empty Container elements'),\n    },\n    { plugin: 'mergePaths', label: 'Merge paths', content: t('merge multiple Paths into one') },\n    { plugin: 'removeUnusedNS', label: 'Remove unused namespaces', content: t('remove unused namespaces declaration') },\n    {\n      plugin: 'reusePaths',\n      label: 'Replace duplicate elements with links',\n      content: t('Find duplicated elements and replace them with links'),\n    },\n    { plugin: 'sortAttrs', label: 'Sort attrs', content: t('sort element attributes for epic readability') },\n    {\n      plugin: 'sortDefsChildren',\n      label: 'Sort children of <defs>',\n      content: t('sort children of <defs> in order to improve compression'),\n    },\n    { plugin: 'removeTitle', label: 'Remove <title>', content: t('remove <title>') },\n    { plugin: 'removeDesc', label: 'Remove <desc>', content: t('remove <desc>') },\n    {\n      plugin: 'removeDimensions',\n      label: 'Prefer viewBox to width/height',\n      content: t(`remove width/height and add viewBox if it's missing (opposite to removeViewBox, disable it first)`),\n    },\n    { plugin: 'removeStyleElement', label: 'Remove style elements', content: t('remove <style> elements') },\n    { plugin: 'removeScriptElement', label: 'Remove script elements', content: t('remove <script> elements') },\n  ];\n\n  return (\n    <Wrapper>\n      <StyledLayout\n        title={t(`SVG Optimizer`)}\n        extra={<InputFile type=\"file\" accept=\"image/svg+xml\" multiple onChange={handleChange} />}\n      >\n        <ResultCode\n          codeProps={{\n            style: {\n              height: 'calc(100vh - 87px)',\n              overflow: 'auto',\n              margin: 0,\n              backgroundSize: '16px 16px',\n              backgroundImage: `url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"%3E%3Cpath d=\"M1 2V0h1v1H0v1z\" fill-opacity=\".05\"/%3E%3C/svg%3E')`,\n            },\n          }}\n        >\n          {imageData &&\n            imageData.length > 0 &&\n            imageData.map((item, key) => {\n              const rawLength = item.raw ? gzip(item.raw).buffer.byteLength : 0;\n              const tinyLength = item.tiny ? gzip(item.tiny).buffer.byteLength : 0;\n              const percen = round((tinyLength / rawLength) * 100, 2);\n              return (\n                <div key={key}>\n                  {item.tiny && item.dimensions && (\n                    <Iframe\n                      sandbox=\"allow-scripts\"\n                      scrolling=\"no\"\n                      src={`data:image/svg+xml,${encodeURIComponent(item.tiny)}`}\n                      width={item.dimensions.width}\n                      height={item.dimensions.height}\n                    />\n                  )}\n                  {item.error && (\n                    <div key={key} style={{ color: 'red' }}>\n                      {item.error}\n                    </div>\n                  )}\n                  <PrettyBytesInfo>\n                    <img src={item.base64} height={23} />\n                    <span>\n                      {prettyBytes(rawLength, 2, false)} → {prettyBytes(tinyLength, 2, false)}\n                    </span>\n                    <Percen num={percen}>{percen}%</Percen>\n                    <CopyButton value={item.tiny || ''} />\n                    <a href={`data:image/svg+xml,${item.tiny}`} download={item.name}>\n                      download <b>{item.name}</b>\n                    </a>\n                  </PrettyBytesInfo>\n                </div>\n              );\n            })}\n        </ResultCode>\n      </StyledLayout>\n      {imageData && imageData.length > 0 && (\n        <StyledLayout\n          title={t(`Options`, { ns: 'common' })}\n          style={{ maxWidth: 420 }}\n          extra={\n            <Fragment>\n              <Button onClick={() => setOptions(defaultOptions)}>Reset</Button>\n            </Fragment>\n          }\n        >\n          <ResultCode codeProps={{ style: { height: 'calc(100vh - 87px)', overflow: 'auto', margin: 0 } }}>\n            <Spacing>\n              <Checkbox\n                checked={!!options.pretty}\n                onChange={({ target }) => setOptions({ ...options, pretty: target.checked })}\n              >\n                Prettify markup <Info>{t('Prettify markup')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!options.multipass}\n                onChange={({ target }) => setOptions({ ...options, multipass: target.checked })}\n              >\n                {t('multipass')}{' '}\n                <Info>{t('Pass over SVGs multiple times to ensure all optimizations are applied')}</Info>\n              </Checkbox>\n              <Checkbox\n                type=\"range\"\n                max=\"8\"\n                min=\"0\"\n                step=\"1\"\n                value={options.floatPrecision}\n                onChange={({ target }) => setOptions({ ...options, floatPrecision: Number(target.value) })}\n              >\n                {options.floatPrecision} {t('Precision')}{' '}\n                <Info>\n                  {t('Precision of floating point numbers. Will be passed to each plugin that suppors this param.')}\n                </Info>\n              </Checkbox>\n              {opts.map((item, key) => {\n                return (\n                  <Checkbox\n                    key={key}\n                    checked={includesPlugin(item.plugin, options.plugins)}\n                    onChange={({ target }) => setOptions(settingPlugin(item.plugin, target.checked))}\n                  >\n                    {t(item.label)} <Info>{t(item.content)}</Info>\n                  </Checkbox>\n                );\n              })}\n            </Spacing>\n          </ResultCode>\n        </StyledLayout>\n      )}\n    </Wrapper>\n  );\n}\n"],"names":["compress","svgInput","settings","plugins","forEach","item","floatPrecision","Number","push","name","params","dimensions","width","height","plugin","type","fn","element","enter","attributes","undefined","parseFloat","viewBox","split","createDimensionsExtractor","extractDimensionsPlugin","optimize","multipass","js2svg","indent","pretty","data","modernError","error","message","prettyBytes","num","precision","addSpace","UNITS","Math","abs","exponent","min","floor","log10","length","toPrecision","fileReader","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","readAsText","onloadend","result","toString","onerror","err","Info","styled","_templateObject","Iframe","_templateObject2","InputFile","_templateObject3","PrettyBytesInfo","_templateObject4","Percen","_templateObject5","props","css","defaultOptions","Checkbox","children","_ref","other","_objectWithoutPropertiesLoose","_jsx","_jsxs","SVGOptimizer","t","useTranslation","useState","options","setOptions","imageData","setImageData","handleChange","evn","files","target","all","Array","from","map","console","log","base64","raw","d","tiny","useEffect","opts","label","content","Wrapper","StyledLayout","title","extra","accept","multiple","onChange","ResultCode","codeProps","style","overflow","margin","backgroundSize","backgroundImage","key","rawLength","gzip","buffer","byteLength","tinyLength","percen","places","mult","round","sandbox","scrolling","src","encodeURIComponent","color","CopyButton","value","href","download","ns","maxWidth","Fragment","Button","onClick","Spacing","checked","max","step","includes","splice","indexOf","settingPlugin"],"sourceRoot":""}