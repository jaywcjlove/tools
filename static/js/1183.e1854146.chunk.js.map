{"version":3,"file":"static/js/1183.e1854146.chunk.js","mappings":"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","sources":["../../node_modules/stringify-entities/lib/core.js","../../node_modules/stringify-entities/lib/util/to-hexadecimal.js","../../node_modules/stringify-entities/lib/util/to-decimal.js","../../node_modules/character-entities-html4/index.js","../../node_modules/stringify-entities/lib/constant/dangerous.js","../../node_modules/stringify-entities/lib/util/to-named.js","../../node_modules/stringify-entities/lib/util/format-smart.js","../../node_modules/stringify-entities/lib/index.js","../../node_modules/@uiw/react-md-editor/esm/Context.js","../../node_modules/@uiw/react-md-editor/esm/components/Toolbar/Child.js","../../node_modules/@uiw/react-md-editor/esm/components/Toolbar/index.js","../../node_modules/@uiw/react-md-editor/esm/components/TextArea/shortcuts.js","../../node_modules/hast-util-from-html/node_modules/hast-util-parse-selector/lib/index.js","../../node_modules/hast-util-from-html/node_modules/hastscript/lib/create-h.js","../../node_modules/hast-util-from-html/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/hast-util-from-html/node_modules/hastscript/lib/index.js","../../node_modules/hast-util-from-html/node_modules/vfile-location/lib/index.js","../../node_modules/hast-util-from-html/node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/common/unicode.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/common/error-codes.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/preprocessor.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/common/token.js","../../node_modules/hast-util-from-html/node_modules/entities/src/generated/decode-data-html.ts","../../node_modules/hast-util-from-html/node_modules/entities/src/decode-codepoint.ts","../../node_modules/hast-util-from-html/node_modules/entities/src/decode.ts","../../node_modules/hast-util-from-html/node_modules/parse5/dist/common/html.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/tokenizer/index.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/open-element-stack.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/formatting-element-list.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/tree-adapters/default.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/common/doctype.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/common/foreign-content.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/parser/index.js","../../node_modules/hast-util-from-html/node_modules/entities/src/escape.ts","../../node_modules/hast-util-from-html/node_modules/parse5/dist/serializer/index.js","../../node_modules/hast-util-from-html/node_modules/parse5/dist/index.js","../../node_modules/hast-util-from-html/lib/errors.js","../../node_modules/hast-util-from-html/lib/index.js","../../node_modules/@uiw/react-md-editor/node_modules/html-void-elements/index.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/comment.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/omission/util/siblings.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/omission/omission.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/omission/closing.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/omission/opening.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/element.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/text.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/index.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/doctype.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/raw.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/handle/root.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-html/lib/index.js","../../node_modules/@uiw/react-md-editor/node_modules/is-plain-obj/index.js","../../node_modules/@uiw/react-md-editor/node_modules/unified/lib/callable-instance.js","../../node_modules/@uiw/react-md-editor/node_modules/unified/lib/index.js","../../node_modules/@uiw/react-md-editor/node_modules/rehype/index.js","../../node_modules/@uiw/react-md-editor/node_modules/rehype-parse/lib/index.js","../../node_modules/@uiw/react-md-editor/node_modules/rehype-stringify/lib/index.js","../../node_modules/@uiw/react-md-editor/node_modules/hast-util-to-string/lib/index.js","../../node_modules/@uiw/react-md-editor/node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../../node_modules/@uiw/react-md-editor/esm/components/TextArea/Markdown.js","../../node_modules/@uiw/react-md-editor/esm/utils/InsertTextAtPosition.js","../../src/all.js","../../src/common.js","../../node_modules/@uiw/react-md-editor/esm/utils/markdownUtils.js","../../node_modules/@uiw/react-md-editor/esm/commands/bold.js","../../node_modules/@uiw/react-md-editor/esm/commands/code.js","../../node_modules/@uiw/react-md-editor/esm/commands/comment.js","../../node_modules/@uiw/react-md-editor/esm/commands/divider.js","../../node_modules/@uiw/react-md-editor/esm/commands/fullscreen.js","../../node_modules/@uiw/react-md-editor/esm/commands/group.js","../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../node_modules/@uiw/react-md-editor/esm/commands/hr.js","../../node_modules/@uiw/react-md-editor/esm/commands/image.js","../../node_modules/@uiw/react-md-editor/esm/commands/italic.js","../../node_modules/@uiw/react-md-editor/esm/commands/link.js","../../node_modules/@uiw/react-md-editor/esm/commands/list.js","../../node_modules/@uiw/react-md-editor/esm/commands/preview.js","../../node_modules/@uiw/react-md-editor/esm/commands/quote.js","../../node_modules/@uiw/react-md-editor/esm/commands/strikeThrough.js","../../node_modules/@uiw/react-md-editor/esm/commands/title1.js","../../node_modules/@uiw/react-md-editor/esm/commands/title.js","../../node_modules/@uiw/react-md-editor/esm/commands/title2.js","../../node_modules/@uiw/react-md-editor/esm/commands/title3.js","../../node_modules/@uiw/react-md-editor/esm/commands/title4.js","../../node_modules/@uiw/react-md-editor/esm/commands/title5.js","../../node_modules/@uiw/react-md-editor/esm/commands/title6.js","../../node_modules/@uiw/react-md-editor/esm/commands/table.js","../../node_modules/@uiw/react-md-editor/esm/commands/help.js","../../node_modules/@uiw/react-md-editor/esm/commands/index.js","../../node_modules/@uiw/react-md-editor/esm/components/TextArea/handleKeyDown.js","../../node_modules/@uiw/react-md-editor/esm/components/TextArea/Textarea.js","../../node_modules/@uiw/react-md-editor/esm/components/TextArea/index.js","../../node_modules/@uiw/react-md-editor/esm/components/DragBar/index.js","../../node_modules/@uiw/react-md-editor/esm/Editor.js","../../node_modules/@uiw/react-md-editor/esm/index.js"],"sourcesContent":["/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nexport function reducer(state, action) {\n  return _extends({}, state, action);\n}\nexport var EditorContext = /*#__PURE__*/React.createContext({\n  markdown: ''\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useContext, useMemo } from 'react';\nimport \"./Child.css\";\nimport Toolbar from \"./index.js\";\nimport { EditorContext } from \"../../Context.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Child(props) {\n  var {\n    prefixCls,\n    groupName,\n    commands,\n    children\n  } = props || {};\n  var {\n    barPopup = {}\n  } = useContext(EditorContext);\n  return useMemo(() => /*#__PURE__*/_jsx(\"div\", {\n    className: prefixCls + \"-toolbar-child \" + (groupName && barPopup[groupName] ? 'active' : ''),\n    onClick: e => e.stopPropagation(),\n    children: Array.isArray(commands) ? /*#__PURE__*/_jsx(Toolbar, _extends({\n      commands: commands\n    }, props, {\n      isChild: true\n    })) : children\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [commands, barPopup, groupName, prefixCls]);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Fragment, useContext, useEffect, useRef } from 'react';\nimport { EditorContext } from \"../../Context.js\";\nimport Child from \"./Child.js\";\nimport \"./index.css\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ToolbarItems(props) {\n  var {\n    prefixCls,\n    overflow\n  } = props;\n  var {\n    fullscreen,\n    preview,\n    barPopup = {},\n    components,\n    commandOrchestrator,\n    dispatch\n  } = useContext(EditorContext);\n  var originalOverflow = useRef('');\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _extends({}, barPopup)\n    };\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(item => {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(keyName => {\n        state.barPopup[keyName] = false;\n      });\n    }\n    if (Object.keys(state).length) {\n      dispatch(_extends({}, state));\n    }\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n  useEffect(() => {\n    if (document && overflow) {\n      if (fullscreen) {\n        // prevent scroll on fullscreen\n        document.body.style.overflow = 'hidden';\n      } else {\n        // get the original overflow only the first time\n        if (!originalOverflow.current) {\n          originalOverflow.current = window.getComputedStyle(document.body, null).overflow;\n        }\n        // reset to the original overflow\n        document.body.style.overflow = originalOverflow.current;\n      }\n    }\n  }, [fullscreen, originalOverflow, overflow]);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: (props.commands || []).map((item, idx) => {\n      if (item.keyCommand === 'divider') {\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\n          className: prefixCls + \"-toolbar-divider\"\n        }), idx);\n      }\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {}, idx);\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\n        getState: () => commandOrchestrator.getState(),\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n        close: () => handleClick({}, item.groupName),\n        execute: () => handleClick({\n          execute: item.execute\n        }),\n        dispatch\n      }) : undefined;\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n      var render = (components == null ? void 0 : components.toolbar) || item.render;\n      var com = render && typeof render === 'function' ? render(item, !!disabled, handleClick, idx) : null;\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\n        className: activeBtn ? \"active\" : '',\n        children: [com && /*#__PURE__*/React.isValidElement(com) && com, !com && !item.buttonProps && item.icon, !com && item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\n          type: 'button',\n          key: idx,\n          disabled,\n          'data-name': item.name\n        }, item.buttonProps, {\n          onClick: evn => {\n            evn.stopPropagation();\n            handleClick(item, item.groupName);\n          }\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\n          overflow: overflow,\n          groupName: item.groupName,\n          prefixCls: prefixCls,\n          children: childNode,\n          commands: Array.isArray(item.children) ? item.children : undefined\n        })]\n      }), idx);\n    })\n  });\n}\nexport default function Toolbar(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n    prefixCls,\n    isChild,\n    className\n  } = props;\n  var {\n    commands,\n    extraCommands\n  } = useContext(EditorContext);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: prefixCls + \"-toolbar \" + className,\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: props.commands || commands || []\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: extraCommands || []\n    }))]\n  });\n}\nexport function ToolbarVisibility(props) {\n  var {\n    hideToolbar,\n    toolbarBottom,\n    placement,\n    overflow,\n    prefixCls\n  } = props;\n  if (hideToolbar || placement === 'bottom' && !toolbarBottom || placement === 'top' && toolbarBottom) {\n    return null;\n  }\n  var cls = toolbarBottom ? 'bottom' : '';\n  return /*#__PURE__*/_jsx(Toolbar, {\n    prefixCls: prefixCls,\n    overflow: overflow,\n    className: cls\n  });\n}","import _extends from \"@babel/runtime/helpers/extends\";\nfunction getCommands(data, resulte) {\n  if (data === void 0) {\n    data = [];\n  }\n  if (resulte === void 0) {\n    resulte = {};\n  }\n  data.forEach(item => {\n    if (item.children && Array.isArray(item.children)) {\n      resulte = _extends({}, resulte, getCommands(item.children || []));\n    } else if (item.keyCommand && item.shortcuts && item.execute) {\n      resulte[item.shortcuts.toLocaleLowerCase()] = item;\n    }\n  });\n  return resulte;\n}\nexport default function shortcutsHandle(e, commands, commandOrchestrator, dispatch, state) {\n  if (commands === void 0) {\n    commands = [];\n  }\n  var data = getCommands(commands || []);\n  var shortcuts = [];\n  if (e.altKey) {\n    shortcuts.push('alt');\n  }\n  if (e.shiftKey) {\n    shortcuts.push('shift');\n  }\n  if (e.metaKey) {\n    shortcuts.push('cmd');\n  }\n  if (e.ctrlKey) {\n    shortcuts.push('ctrl');\n  }\n  if (shortcuts.length > 0 && !/(control|alt|meta|shift)/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push(e.key.toLocaleLowerCase());\n  }\n  if (/escape/.test(e.key.toLocaleLowerCase())) {\n    shortcuts.push('escape');\n  }\n  if (shortcuts.length < 1) {\n    return;\n  }\n  var equal = !!data[shortcuts.join('+')];\n  var command = equal ? data[shortcuts.join('+')] : undefined;\n  Object.keys(data).forEach(item => {\n    var isequal = item.split('+').every(v => {\n      if (/ctrlcmd/.test(v)) {\n        return shortcuts.includes('ctrl') || shortcuts.includes('cmd');\n      }\n      return shortcuts.includes(v);\n    });\n    if (isequal) {\n      command = data[item];\n    }\n  });\n  if (command && commandOrchestrator) {\n    e.stopPropagation();\n    e.preventDefault();\n    commandOrchestrator.executeCommand(command, dispatch, state, shortcuts);\n    return;\n  }\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","// Generated using scripts/write-decode-map.ts\n\nexport const htmlDecodeTree: Uint16Array = /* #__PURE__ */ new Uint16Array(\n    // prettier-ignore\n    /* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n        .split(\"\")\n        .map((c) => c.charCodeAt(0)),\n);\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\n\nconst decodeMap = new Map([\n    [0, 65_533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint: (...codePoints: number[]) => string =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n    String.fromCodePoint ??\n    function (codePoint: number): string {\n        let output = \"\";\n\n        if (codePoint > 0xff_ff) {\n            codePoint -= 0x1_00_00;\n            output += String.fromCharCode(\n                ((codePoint >>> 10) & 0x3_ff) | 0xd8_00,\n            );\n            codePoint = 0xdc_00 | (codePoint & 0x3_ff);\n        }\n\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\n\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint: number): number {\n    if (\n        (codePoint >= 0xd8_00 && codePoint <= 0xdf_ff) ||\n        codePoint > 0x10_ff_ff\n    ) {\n        return 0xff_fd;\n    }\n\n    return decodeMap.get(codePoint) ?? codePoint;\n}\n\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport function decodeCodePoint(codePoint: number): string {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n","import { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nimport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nimport { replaceCodePoint, fromCodePoint } from \"./decode-codepoint.js\";\n\nconst enum CharCodes {\n    NUM = 35, // \"#\"\n    SEMI = 59, // \";\"\n    EQUALS = 61, // \"=\"\n    ZERO = 48, // \"0\"\n    NINE = 57, // \"9\"\n    LOWER_A = 97, // \"a\"\n    LOWER_F = 102, // \"f\"\n    LOWER_X = 120, // \"x\"\n    LOWER_Z = 122, // \"z\"\n    UPPER_A = 65, // \"A\"\n    UPPER_F = 70, // \"F\"\n    UPPER_Z = 90, // \"Z\"\n}\n\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b10_0000;\n\nexport enum BinTrieFlags {\n    VALUE_LENGTH = 0b1100_0000_0000_0000,\n    BRANCH_LENGTH = 0b0011_1111_1000_0000,\n    JUMP_TABLE = 0b0000_0000_0111_1111,\n}\n\nfunction isNumber(code: number): boolean {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\n\nfunction isHexadecimalCharacter(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F)\n    );\n}\n\nfunction isAsciiAlphaNumeric(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code)\n    );\n}\n\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code: number): boolean {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\n\nconst enum EntityDecoderState {\n    EntityStart,\n    NumericStart,\n    NumericDecimal,\n    NumericHex,\n    NamedEntity,\n}\n\nexport enum DecodingMode {\n    /** Entities in text nodes that can end with any character. */\n    Legacy = 0,\n    /** Only allow entities terminated with a semicolon. */\n    Strict = 1,\n    /** Entities in attributes have limitations on ending characters. */\n    Attribute = 2,\n}\n\n/**\n * Producers for character reference errors as defined in the HTML spec.\n */\nexport interface EntityErrorProducer {\n    missingSemicolonAfterCharacterReference(): void;\n    absenceOfDigitsInNumericCharacterReference(\n        consumedCharacters: number,\n    ): void;\n    validateNumericCharacterReference(code: number): void;\n}\n\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n        /** The tree used to decode entities. */\n        private readonly decodeTree: Uint16Array,\n        /**\n         * The function that is called when a codepoint is decoded.\n         *\n         * For multi-byte named entities, this will be called multiple times,\n         * with the second codepoint, and the same `consumed` value.\n         *\n         * @param codepoint The decoded codepoint.\n         * @param consumed The number of bytes consumed by the decoder.\n         */\n        private readonly emitCodePoint: (cp: number, consumed: number) => void,\n        /** An object that is used to produce errors. */\n        private readonly errors?: EntityErrorProducer | undefined,\n    ) {}\n\n    /** The current state of the decoder. */\n    private state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    private consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    private result = 0;\n\n    /** The current index in the decode tree. */\n    private treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    private excess = 1;\n    /** The mode in which the decoder is operating. */\n    private decodeMode = DecodingMode.Strict;\n\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode: DecodingMode): void {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input: string, offset: number): number {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericStart(input: string, offset: number): number {\n        if (offset >= input.length) {\n            return -1;\n        }\n\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n\n    private addToNumericResult(\n        input: string,\n        start: number,\n        end: number,\n        base: number,\n    ): void {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericHex(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 16);\n\n        return -1;\n    }\n\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericDecimal(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 10);\n\n        return -1;\n    }\n\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    private emitNumericEntity(lastCp: number, expectedLength: number): number {\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            this.errors?.absenceOfDigitsInNumericCharacterReference(\n                this.consumed,\n            );\n            return 0;\n        }\n\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        } else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n\n        return this.consumed;\n    }\n\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNamedEntity(input: string, offset: number): number {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n\n            this.treeIndex = determineBranch(\n                decodeTree,\n                current,\n                this.treeIndex + Math.max(1, valueLength),\n                char,\n            );\n\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(\n                        this.treeIndex,\n                        valueLength,\n                        this.consumed + this.excess,\n                    );\n                }\n\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNotTerminatedNamedEntity(): number {\n        const { result, decodeTree } = this;\n\n        const valueLength =\n            (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        this.errors?.missingSemicolonAfterCharacterReference();\n\n        return this.consumed;\n    }\n\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNamedEntityData(\n        result: number,\n        valueLength: number,\n        consumed: number,\n    ): number {\n        const { decodeTree } = this;\n\n        this.emitCodePoint(\n            valueLength === 1\n                ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n                : decodeTree[result + 1],\n            consumed,\n        );\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n\n        return consumed;\n    }\n\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end(): number {\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                this.errors?.absenceOfDigitsInNumericCharacterReference(\n                    this.consumed,\n                );\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree: Uint16Array) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(\n        decodeTree,\n        (data) => (returnValue += fromCodePoint(data)),\n    );\n\n    return function decodeWithTrie(\n        input: string,\n        decodeMode: DecodingMode,\n    ): string {\n        let lastIndex = 0;\n        let offset = 0;\n\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n\n            decoder.startEntity(decodeMode);\n\n            const length = decoder.write(\n                input,\n                // Skip the \"&\"\n                offset + 1,\n            );\n\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n\n        const result = returnValue + input.slice(lastIndex);\n\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n\n        return result;\n    };\n}\n\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(\n    decodeTree: Uint16Array,\n    current: number,\n    nodeIndex: number,\n    char: number,\n): number {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n\n    // Case 3: Multiple branches encoded in dictionary\n\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n\n        if (midValue < char) {\n            lo = mid + 1;\n        } else if (midValue > char) {\n            hi = mid - 1;\n        } else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\nconst htmlDecoder = /* #__PURE__ */ getDecoder(htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(xmlDecodeTree);\n\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(\n    htmlString: string,\n    mode: DecodingMode = DecodingMode.Legacy,\n): string {\n    return htmlDecoder(htmlString, mode);\n}\n\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(htmlAttribute: string): string {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(htmlString: string): string {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(xmlString: string): string {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nexport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\n\nexport {\n    decodeCodePoint,\n    replaceCodePoint,\n    fromCodePoint,\n} from \"./decode-codepoint.js\";\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","export const xmlReplacer: RegExp = /[\"$&'<>\\u0080-\\uFFFF]/g;\n\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint: (c: string, index: number) => number =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    String.prototype.codePointAt == null\n        ? (c: string, index: number): number =>\n              (c.charCodeAt(index) & 0xfc_00) === 0xd8_00\n                  ? (c.charCodeAt(index) - 0xd8_00) * 0x4_00 +\n                    c.charCodeAt(index + 1) -\n                    0xdc_00 +\n                    0x1_00_00\n                  : c.charCodeAt(index)\n        : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          (input: string, index: number): number => input.codePointAt(index)!;\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(input: string): string {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n\n    while ((match = xmlReplacer.exec(input)) !== null) {\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(\n                input,\n                index,\n            ).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number(\n                (char & 0xfc_00) === 0xd8_00,\n            );\n        } else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n\n    return returnValue + input.substr(lastIndex);\n}\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape: typeof encodeXML = encodeXML;\n\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(\n    regex: RegExp,\n    map: Map<number, string>,\n): (data: string) => string {\n    return function escape(data: string): string {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n\n        while ((match = regex.exec(data))) {\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0))!;\n\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n\n        return result + data.substring(lastIndex);\n    };\n}\n\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[\"&'<>]/g,\n    xmlCodeMap,\n);\n\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute: (data: string) => string =\n    /* #__PURE__ */ getEscaper(\n        /[\"&\\u00A0]/g,\n        new Map([\n            [34, \"&quot;\"],\n            [38, \"&amp;\"],\n            [160, \"&nbsp;\"],\n        ]),\n    );\n\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[&<>\\u00A0]/g,\n    new Map([\n        [38, \"&amp;\"],\n        [60, \"&lt;\"],\n        [62, \"&gt;\"],\n        [160, \"&nbsp;\"],\n    ]),\n);\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n","/**\n * @typedef ErrorInfo\n *   Info on a `parse5` error.\n * @property {string} reason\n *   Reason of error.\n * @property {string} description\n *   More info on error.\n * @property {false} [url]\n *   Turn off if this is not documented in the html5 spec (optional).\n */\n\nexport const errors = {\n  /** @type {ErrorInfo} */\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  /** @type {ErrorInfo} */\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  /** @type {ErrorInfo} */\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  /** @type {ErrorInfo} */\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  /** @type {ErrorInfo} */\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  /** @type {ErrorInfo} */\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  /** @type {ErrorInfo} */\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  /** @type {ErrorInfo} */\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  /** @type {ErrorInfo} */\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  /** @type {ErrorInfo} */\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  /** @type {ErrorInfo} */\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  /** @type {ErrorInfo} */\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  /** @type {ErrorInfo} */\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  /** @type {ErrorInfo} */\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  /** @type {ErrorInfo} */\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  /** @type {ErrorInfo} */\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  /** @type {ErrorInfo} */\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  /** @type {ErrorInfo} */\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  /** @type {ErrorInfo} */\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n","/**\n * @import {Root} from 'hast'\n * @import {ParserError} from 'parse5'\n * @import {Value} from 'vfile'\n * @import {ErrorCode, Options} from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {parse, parseFragment} from 'parse5'\nimport {VFile} from 'vfile'\nimport {VFileMessage} from 'vfile-message'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst dashToCamelRe = /-[a-z]/g\nconst formatCRe = /%c(?:([-+])(\\d+))?/g\nconst formatXRe = /%x/g\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/** @type {Readonly<Options>} */\nconst emptyOptions = {}\n\n/**\n * Turn serialized HTML into a hast tree.\n *\n * @param {VFile | Value} value\n *   Serialized HTML to parse.\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Root}\n *   Tree.\n */\nexport function fromHtml(value, options) {\n  const settings = options || emptyOptions\n  const onerror = settings.onerror\n  const file = value instanceof VFile ? value : new VFile(value)\n  const parseFunction = settings.fragment ? parseFragment : parse\n  const document = String(file)\n  const p5Document = parseFunction(document, {\n    sourceCodeLocationInfo: true,\n    // Note `parse5` types currently do not allow `undefined`.\n    onParseError: settings.onerror ? internalOnerror : null,\n    scriptingEnabled: false\n  })\n\n  // `parse5` returns document which are always mapped to roots.\n  return /** @type {Root} */ (\n    fromParse5(p5Document, {\n      file,\n      space: settings.space,\n      verbose: settings.verbose\n    })\n  )\n\n  /**\n   * Handle a parse error.\n   *\n   * @param {ParserError} error\n   *   Parse5 error.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function internalOnerror(error) {\n    const code = error.code\n    const name = camelcase(code)\n    const setting = settings[name]\n    const config = setting === null || setting === undefined ? true : setting\n    const level = typeof config === 'number' ? config : config ? 1 : 0\n\n    if (level) {\n      const info = errors[name]\n      assert(info, 'expected known error from `parse5`')\n\n      const message = new VFileMessage(format(info.reason), {\n        place: {\n          start: {\n            line: error.startLine,\n            column: error.startCol,\n            offset: error.startOffset\n          },\n          end: {\n            line: error.endLine,\n            column: error.endCol,\n            offset: error.endOffset\n          }\n        },\n        ruleId: code,\n        source: 'hast-util-from-html'\n      })\n\n      if (file.path) {\n        message.file = file.path\n        message.name = file.path + ':' + message.name\n      }\n\n      message.fatal = fatalities[level]\n      message.note = format(info.description)\n      message.url = info.url === false ? undefined : base + code\n\n      assert(onerror, '`internalOnerror` is not passed if `onerror` is not set')\n      onerror(message)\n    }\n\n    /**\n     * Format a human readable string about an error.\n     *\n     * @param {string} value\n     *   Value to format.\n     * @returns {string}\n     *   Formatted.\n     */\n    function format(value) {\n      return value.replace(formatCRe, formatC).replace(formatXRe, formatX)\n\n      /**\n       * Format the character.\n       *\n       * @param {string} _\n       *   Match.\n       * @param {string} $1\n       *   Sign (`-` or `+`, optional).\n       * @param {string} $2\n       *   Offset.\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatC(_, $1, $2) {\n        const offset =\n          ($2 ? Number.parseInt($2, 10) : 0) * ($1 === '-' ? -1 : 1)\n        const char = document.charAt(error.startOffset + offset)\n        return visualizeCharacter(char)\n      }\n\n      /**\n       * Format the character code.\n       *\n       * @returns {string}\n       *   Formatted.\n       */\n      function formatX() {\n        return visualizeCharacterCode(document.charCodeAt(error.startOffset))\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n *   Error code in dash case.\n * @returns {ErrorCode}\n *   Error code in camelcase.\n */\nfunction camelcase(value) {\n  // This should match an error code.\n  return /** @type {ErrorCode} */ (value.replace(dashToCamelRe, dashToCamel))\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @returns {string}\n *   Camelcased.\n */\nfunction dashToCamel($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n/**\n * @param {string} char\n *   Character.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacter(char) {\n  return char === '`' ? '` ` `' : char\n}\n\n/**\n * @param {number} charCode\n *   Character code.\n * @returns {string}\n *   Formatted.\n */\nfunction visualizeCharacterCode(charCode) {\n  return '0x' + charCode.toString(16).toUpperCase()\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n","/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    (info.boolean || info.overloadedBoolean) &&\n    (typeof value !== 'string' || value === info.attribute || value === '')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Note: types exposed from `index.d.ts`\nimport rehypeParse from 'rehype-parse'\nimport rehypeStringify from 'rehype-stringify'\nimport {unified} from 'unified'\n\n/**\n * Create a new unified processor that already uses `rehype-parse` and\n * `rehype-stringify`.\n */\nexport const rehype = unified().use(rehypeParse).use(rehypeStringify).freeze()\n","/**\n * @import {Root} from 'hast'\n * @import {Options as FromHtmlOptions} from 'hast-util-from-html'\n * @import {Parser, Processor} from 'unified'\n */\n\n/**\n * @typedef {Omit<FromHtmlOptions, 'onerror'> & RehypeParseFields} Options\n *   Configuration.\n *\n * @typedef RehypeParseFields\n *   Extra fields.\n * @property {boolean | null | undefined} [emitParseErrors=false]\n *   Whether to emit parse errors while parsing (default: `false`).\n *\n *   > 👉 **Note**: parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or us) are specced yet.\n *   > Some documentation may still be missing.\n */\n\nimport {fromHtml} from 'hast-util-from-html'\n\n/**\n * Plugin to add support for parsing from HTML.\n *\n * > 👉 **Note**: this is not an XML parser.\n * > It supports SVG as embedded in HTML.\n * > It does not support the features available in XML.\n * > Passing SVG files might break but fragments of modern SVG should be fine.\n * > Use [`xast-util-from-xml`][xast-util-from-xml] to parse XML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeParse(options) {\n  /** @type {Processor<Root>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const {emitParseErrors, ...settings} = {...self.data('settings'), ...options}\n\n  self.parser = parser\n\n  /**\n   * @type {Parser<Root>}\n   */\n  function parser(document, file) {\n    return fromHtml(document, {\n      ...settings,\n      onerror: emitParseErrors\n        ? function (message) {\n            if (file.path) {\n              message.name = file.path + ':' + message.name\n              message.file = file.path\n            }\n\n            file.messages.push(message)\n          }\n        : undefined\n    })\n  }\n}\n","/**\n * @import {Root} from 'hast'\n * @import {Options} from 'hast-util-to-html'\n * @import {Compiler, Processor} from 'unified'\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * Plugin to add support for serializing as HTML.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function rehypeStringify(options) {\n  /** @type {Processor<undefined, undefined, undefined, Root, string>} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n  const settings = {...self.data('settings'), ...options}\n\n  self.compiler = compiler\n\n  /**\n   * @type {Compiler<Root, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @template {Node} Tree\n * @template {Test} Check\n *\n * @overload\n * @param {Tree} tree\n * @param {Options | null | undefined} options\n * @param {Check} test\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} test\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\n *\n * @overload\n * @param {Tree} tree\n * @param {null | undefined} [options]\n * @returns {Tree}\n *\n * @param {Node} tree\n *   Tree to filter.\n * @param {Options | Test} [options]\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {Node | undefined}\n *   New filtered tree.\n *\n *   `undefined` is returned if `tree` itself didn’t pass the test, or is\n *   cascaded away.\n */\nexport function filter(tree, options, test) {\n  const is = convert(test || options)\n  const cascadeRaw =\n    options && typeof options === 'object' && 'cascade' in options\n      ? /** @type {boolean | null | undefined} */ (options.cascade)\n      : undefined\n  const cascade =\n    cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n  return preorder(tree)\n\n  /**\n   * @param {Node} node\n   *   Current node.\n   * @param {number | undefined} [index]\n   *   Index of `node` in `parent`.\n   * @param {Parent | undefined} [parentNode]\n   *   Parent node.\n   * @returns {Node | undefined}\n   *   Shallow copy of `node`.\n   */\n  function preorder(node, index, parentNode) {\n    /** @type {Array<Node>} */\n    const children = []\n\n    if (!is(node, index, parentNode)) return undefined\n\n    if (parent(node)) {\n      let childIndex = -1\n\n      while (++childIndex < node.children.length) {\n        const result = preorder(node.children[childIndex], childIndex, node)\n\n        if (result) {\n          children.push(result)\n        }\n      }\n\n      if (cascade && node.children.length > 0 && children.length === 0) {\n        return undefined\n      }\n    }\n\n    // Create a shallow clone, using the new children.\n    /** @type {typeof node} */\n    // @ts-expect-error all the fields will be copied over.\n    const next = {}\n    /** @type {string} */\n    let key\n\n    for (key in node) {\n      if (own.call(node, key)) {\n        // @ts-expect-error: Looks like a record.\n        next[key] = key === 'children' ? children : node[key]\n      }\n    }\n\n    return next\n  }\n}\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nfunction parent(node) {\n  return 'children' in node && node.children !== undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean|string[]} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      // @ts-ignore meta is a custom code block property\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        const isShowNumbers =\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers === true ||\n            (typeof options.showLineNumbers === 'object' &&\n              options.showLineNumbers.includes(lang))) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n\n        if (isShowNumbers) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport React, { useContext, useEffect } from 'react';\nimport { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\nimport { EditorContext } from \"../../Context.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction html2Escape(sHtml) {\n  return sHtml\n  // .replace(/```(\\w+)?([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\n  //   return str.replace(\n  //     /[<&\"]/g,\n  //     (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  //   );\n  // })\n  .replace(/[<&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport default function Markdown(props) {\n  var {\n    prefixCls\n  } = props;\n  var {\n    markdown = '',\n    highlightEnable,\n    dispatch\n  } = useContext(EditorContext);\n  var preRef = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    if (preRef.current && dispatch) {\n      dispatch({\n        textareaPre: preRef.current\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (!markdown) {\n    return /*#__PURE__*/_jsx(\"pre\", {\n      ref: preRef,\n      className: prefixCls + \"-text-pre wmde-markdown-color\"\n    });\n  }\n  var mdStr = \"<pre class=\\\"language-markdown \" + prefixCls + \"-text-pre wmde-markdown-color\\\"><code class=\\\"language-markdown\\\">\" + html2Escape(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\", \"\"])), markdown)) + \"\\n</code></pre>\";\n  if (highlightEnable) {\n    try {\n      mdStr = rehype().data('settings', {\n        fragment: true\n      })\n      // https://github.com/uiwjs/react-md-editor/issues/593\n      // @ts-ignore\n      .use(rehypePrism, {\n        ignoreMissing: true\n      }).processSync(mdStr).toString();\n    } catch (error) {}\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'wmde-markdown-color',\n    dangerouslySetInnerHTML: {\n      __html: mdStr || ''\n    }\n  });\n}","/**\n * The MIT License\n * Copyright (c) 2018 Dmitriy Kubyshkin\n * Copied from https://github.com/grassator/insert-text-at-cursor\n */\n\nvar browserSupportsTextareaTextNodes;\n\n/**\n * @param {HTMLElement} input\n * @return {boolean}\n */\nfunction canManipulateViaTextNodes(input) {\n  if (input.nodeName !== 'TEXTAREA') {\n    return false;\n  }\n  if (typeof browserSupportsTextareaTextNodes === 'undefined') {\n    var textarea = document.createElement('textarea');\n    textarea.value = '1';\n    browserSupportsTextareaTextNodes = !!textarea.firstChild;\n  }\n  return browserSupportsTextareaTextNodes;\n}\n\n/**\n * @param {HTMLTextAreaElement|HTMLInputElement} input\n * @param {string} text\n * @returns {void}\n */\nexport function insertTextAtPosition(input, text) {\n  // Most of the used APIs only work with the field selected\n  input.focus();\n\n  // IE 8-10\n  if (document.selection) {\n    var ieRange = document.selection.createRange();\n    ieRange.text = text;\n\n    // Move cursor after the inserted text\n    ieRange.collapse(false /* to the end */);\n    ieRange.select();\n    return;\n  }\n\n  // Webkit + Edge\n  var isSuccess = false;\n  if (text !== '') {\n    isSuccess = document.execCommand && document.execCommand('insertText', false, text);\n  } else {\n    isSuccess = document.execCommand && document.execCommand('delete', false);\n  }\n  if (!isSuccess) {\n    var start = input.selectionStart;\n    var end = input.selectionEnd;\n    // Firefox (non-standard method)\n    if (typeof input.setRangeText === 'function') {\n      input.setRangeText(text);\n    } else {\n      // To make a change we just need a Range, not a Selection\n      var range = document.createRange();\n      var textNode = document.createTextNode(text);\n      if (canManipulateViaTextNodes(input)) {\n        var node = input.firstChild;\n\n        // If textarea is empty, just insert the text\n        if (!node) {\n          input.appendChild(textNode);\n        } else {\n          // Otherwise we need to find a nodes for start and end\n          var offset = 0;\n          var startNode = null;\n          var endNode = null;\n          while (node && (startNode === null || endNode === null)) {\n            var nodeLength = node.nodeValue.length;\n\n            // if start of the selection falls into current node\n            if (start >= offset && start <= offset + nodeLength) {\n              range.setStart(startNode = node, start - offset);\n            }\n\n            // if end of the selection falls into current node\n            if (end >= offset && end <= offset + nodeLength) {\n              range.setEnd(endNode = node, end - offset);\n            }\n            offset += nodeLength;\n            node = node.nextSibling;\n          }\n\n          // If there is some text selected, remove it as we should replace it\n          if (start !== end) {\n            range.deleteContents();\n          }\n        }\n      }\n\n      // If the node is a textarea and the range doesn't span outside the element\n      //\n      // Get the commonAncestorContainer of the selected range and test its type\n      // If the node is of type `#text` it means that we're still working with text nodes within our textarea element\n      // otherwise, if it's of type `#document` for example it means our selection spans outside the textarea.\n      if (canManipulateViaTextNodes(input) && range.commonAncestorContainer.nodeName === '#text') {\n        // Finally insert a new node. The browser will automatically split start and end nodes into two if necessary\n        range.insertNode(textNode);\n      } else {\n        // If the node is not a textarea or the range spans outside a textarea the only way is to replace the whole value\n        var value = input.value;\n        input.value = value.slice(0, start) + text + value.slice(end);\n      }\n    }\n\n    // Correct the cursor position to be at the end of the insertion\n    input.setSelectionRange(start + text.length, start + text.length);\n\n    // Notify any possible listeners of the change\n    var e = document.createEvent('UIEvent');\n    e.initEvent('input', true, false);\n    input.dispatchEvent(e);\n  }\n}","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","export function selectWord(_ref) {\n  var {\n    text,\n    selection,\n    prefix,\n    suffix = prefix\n  } = _ref;\n  var result = selection;\n  if (text && text.length && selection.start === selection.end) {\n    result = getSurroundingWord(text, selection.start);\n  }\n  if (result.start >= prefix.length && result.end <= text.length - suffix.length) {\n    var selectedTextContext = text.slice(result.start - prefix.length, result.end + suffix.length);\n    if (selectedTextContext.startsWith(prefix) && selectedTextContext.endsWith(suffix)) {\n      return {\n        start: result.start - prefix.length,\n        end: result.end + suffix.length\n      };\n    }\n  }\n  return result;\n}\nexport function selectLine(_ref2) {\n  var {\n    text,\n    selection\n  } = _ref2;\n  var start = text.slice(0, selection.start).lastIndexOf('\\n') + 1;\n  var end = text.slice(selection.end).indexOf('\\n') + selection.end;\n  if (end === selection.end - 1) {\n    end = text.length;\n  }\n  return {\n    start,\n    end\n  };\n}\n\n/**\n *  Gets the number of line-breaks that would have to be inserted before the given 'startPosition'\n *  to make sure there's an empty line between 'startPosition' and the previous text\n */\nexport function getBreaksNeededForEmptyLineBefore(text, startPosition) {\n  if (text === void 0) {\n    text = '';\n  }\n  if (startPosition === 0) return 0;\n\n  // rules:\n  // - If we're in the first line, no breaks are needed\n  // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\n  //      may need to insert 0, 1 or 2 breaks\n\n  var neededBreaks = 2;\n  var isInFirstLine = true;\n  for (var i = startPosition - 1; i >= 0 && neededBreaks >= 0; i--) {\n    switch (text.charCodeAt(i)) {\n      case 32:\n        // blank space\n        continue;\n      case 10:\n        // line break\n        neededBreaks--;\n        isInFirstLine = false;\n        break;\n      default:\n        return neededBreaks;\n    }\n  }\n  return isInFirstLine ? 0 : neededBreaks;\n}\n\n/**\n *  Gets the number of line-breaks that would have to be inserted after the given 'startPosition'\n *  to make sure there's an empty line between 'startPosition' and the next text\n */\nexport function getBreaksNeededForEmptyLineAfter(text, startPosition) {\n  if (text === void 0) {\n    text = '';\n  }\n  if (startPosition === text.length - 1) return 0;\n\n  // rules:\n  // - If we're in the first line, no breaks are needed\n  // - Otherwise there must be 2 breaks before the previous character. Depending on how many breaks exist already, we\n  //      may need to insert 0, 1 or 2 breaks\n\n  var neededBreaks = 2;\n  var isInLastLine = true;\n  for (var i = startPosition; i < text.length && neededBreaks >= 0; i++) {\n    switch (text.charCodeAt(i)) {\n      case 32:\n        continue;\n      case 10:\n        {\n          neededBreaks--;\n          isInLastLine = false;\n          break;\n        }\n      default:\n        return neededBreaks;\n    }\n  }\n  return isInLastLine ? 0 : neededBreaks;\n}\nexport function getSurroundingWord(text, position) {\n  if (!text) throw Error(\"Argument 'text' should be truthy\");\n  var isWordDelimiter = c => c === ' ' || c.charCodeAt(0) === 10;\n\n  // leftIndex is initialized to 0 because if selection is 0, it won't even enter the iteration\n  var start = 0;\n  // rightIndex is initialized to text.length because if selection is equal to text.length it won't even enter the interation\n  var end = text.length;\n\n  // iterate to the left\n  for (var i = position; i - 1 > -1; i--) {\n    if (isWordDelimiter(text[i - 1])) {\n      start = i;\n      break;\n    }\n  }\n\n  // iterate to the right\n  for (var _i = position; _i < text.length; _i++) {\n    if (isWordDelimiter(text[_i])) {\n      end = _i;\n      break;\n    }\n  }\n  return {\n    start,\n    end\n  };\n}\nexport function executeCommand(_ref3) {\n  var {\n    api,\n    selectedText,\n    selection,\n    prefix,\n    suffix = prefix\n  } = _ref3;\n  if (selectedText.length >= prefix.length + suffix.length && selectedText.startsWith(prefix) && selectedText.endsWith(suffix)) {\n    api.replaceSelection(selectedText.slice(prefix.length, suffix.length ? -suffix.length : undefined));\n    api.setSelectionRange({\n      start: selection.start - prefix.length,\n      end: selection.end - prefix.length\n    });\n  } else {\n    api.replaceSelection(\"\" + prefix + selectedText + suffix);\n    api.setSelectionRange({\n      start: selection.start + prefix.length,\n      end: selection.end + prefix.length\n    });\n  }\n}\n/**\n * Inserts insertionString before each line\n */\nexport function insertBeforeEachLine(selectedText, insertBefore) {\n  var lines = selectedText.split(/\\n/);\n  var insertionLength = 0;\n  var modifiedText = lines.map((item, index) => {\n    if (typeof insertBefore === 'string') {\n      if (item.startsWith(insertBefore)) {\n        insertionLength -= insertBefore.length;\n        return item.slice(insertBefore.length);\n      }\n      insertionLength += insertBefore.length;\n      return insertBefore + item;\n    }\n    if (typeof insertBefore === 'function') {\n      if (item.startsWith(insertBefore(item, index))) {\n        insertionLength -= insertBefore(item, index).length;\n        return item.slice(insertBefore(item, index).length);\n      }\n      var insertionResult = insertBefore(item, index);\n      insertionLength += insertionResult.length;\n      return insertBefore(item, index) + item;\n    }\n    throw Error('insertion is expected to be either a string or a function');\n  }).join('\\n');\n  return {\n    modifiedText,\n    insertionLength\n  };\n}","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var bold = {\n  name: 'bold',\n  keyCommand: 'bold',\n  shortcuts: 'ctrlcmd+b',\n  prefix: '**',\n  buttonProps: {\n    'aria-label': 'Add bold text (ctrl + b)',\n    title: 'Add bold text (ctrl + b)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    role: \"img\",\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 384 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M304.793 243.891c33.639-18.537 53.657-54.16 53.657-95.693 0-48.236-26.25-87.626-68.626-104.179C265.138 34.01 240.849 32 209.661 32H24c-8.837 0-16 7.163-16 16v33.049c0 8.837 7.163 16 16 16h33.113v318.53H24c-8.837 0-16 7.163-16 16V464c0 8.837 7.163 16 16 16h195.69c24.203 0 44.834-1.289 66.866-7.584C337.52 457.193 376 410.647 376 350.014c0-52.168-26.573-91.684-71.207-106.123zM142.217 100.809h67.444c16.294 0 27.536 2.019 37.525 6.717 15.828 8.479 24.906 26.502 24.906 49.446 0 35.029-20.32 56.79-53.029 56.79h-76.846V100.809zm112.642 305.475c-10.14 4.056-22.677 4.907-31.409 4.907h-81.233V281.943h84.367c39.645 0 63.057 25.38 63.057 63.057.001 28.425-13.66 52.483-34.782 61.284z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    executeCommand({\n      api,\n      selectedText: state1.selectedText,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var codeBlock = {\n  name: 'codeBlock',\n  keyCommand: 'codeBlock',\n  shortcuts: 'ctrlcmd+shift+j',\n  prefix: '```',\n  buttonProps: {\n    'aria-label': 'Insert Code Block (ctrl + shift + j)',\n    title: 'Insert Code Block (ctrl + shift +j)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"13\",\n    height: \"13\",\n    role: \"img\",\n    viewBox: \"0 0 156 156\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M110.85 120.575 43.7 120.483333 43.7083334 110.091667 110.85 110.191667 110.841667 120.583333 110.85 120.575ZM85.1333334 87.1916666 43.625 86.7083332 43.7083334 76.3166666 85.2083334 76.7916666 85.1333334 87.1916666 85.1333334 87.1916666ZM110.841667 53.4166666 43.7 53.3166666 43.7083334 42.925 110.85 43.025 110.841667 53.4166666ZM36 138C27.2916666 138 20.75 136.216667 16.4 132.666667 12.1333334 129.2 10 124.308333 10 118L10 95.3333332C10 91.0666666 9.25 88.1333332 7.7333334 86.5333332 6.3166668 84.8416666 3.7333334 84 0 84L0 72C3.7333334 72 6.3083334 71.2 7.7333334 69.6 9.2416668 67.9083334 10 64.9333334 10 60.6666666L10 38C10 31.775 12.1333334 26.8833334 16.4 23.3333332 20.7583334 19.7749998 27.2916666 18 36 18L40.6666668 18 40.6666668 30 36 30C34.0212222 29.9719277 32.1263151 30.7979128 30.8 32.2666666 29.3605875 33.8216362 28.5938182 35.8823287 28.6666668 38L28.6666668 60.6666666C28.6666668 67.5083332 26.6666668 72.4 22.6666668 75.3333332 20.9317416 76.7274684 18.8640675 77.6464347 16.6666668 78 18.8916668 78.35 20.8916668 79.2416666 22.6666668 80.6666666 26.6666668 83.95 28.6666668 88.8416666 28.6666668 95.3333332L28.6666668 118C28.6666668 120.308333 29.3750002 122.216667 30.8 123.733333 32.2166666 125.241667 33.9583334 126 36 126L40.6666668 126 40.6666668 138 36 138 36 138ZM114.116667 126 118.783333 126C120.833333 126 122.566667 125.241667 123.983333 123.733333 125.422746 122.178364 126.189515 120.117671 126.116667 118L126.116667 95.3333332C126.116667 88.8333332 128.116667 83.9499998 132.116667 80.6666666 133.9 79.2416666 135.9 78.35 138.116667 78 135.919156 77.6468047 133.851391 76.7277979 132.116667 75.3333332 128.116667 72.3999998 126.116667 67.5 126.116667 60.6666666L126.116667 38C126.189515 35.8823287 125.422746 33.8216361 123.983333 32.2666666 122.657018 30.7979128 120.762111 29.9719277 118.783333 30L114.116667 30 114.116667 18 118.783333 18C127.5 18 133.983333 19.775 138.25 23.3333332 142.608333 26.8833332 144.783333 31.7749998 144.783333 38L144.783333 60.6666666C144.783333 64.9333332 145.5 67.9083332 146.916667 69.6 148.433333 71.2 151.05 72 154.783333 72L154.783333 84C151.05 84 148.433333 84.8333334 146.916667 86.5333332 145.5 88.1333332 144.783333 91.0666666 144.783333 95.3333332L144.783333 118C144.783333 124.308333 142.616667 129.2 138.25 132.666667 133.983333 136.216667 127.5 138 118.783333 138L114.116667 138 114.116667 126 114.116667 126Z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: '```\\n',\n      suffix: '\\n```'\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n\n    // Based on context determine if new line is needed or not\n    var prefix = '\\n```\\n';\n    var suffix = '\\n```\\n';\n    if (state1.selectedText.length >= prefix.length + suffix.length - 2 && state1.selectedText.startsWith(prefix) && state1.selectedText.endsWith(suffix)) {\n      // Remove code block\n      prefix = '```\\n';\n      suffix = '\\n```';\n    } else {\n      // Add code block\n      if (state1.selection.start >= 1 && state.text.slice(state1.selection.start - 1, state1.selection.start) === '\\n' || state1.selection.start === 0) {\n        prefix = '```\\n';\n      }\n      if (state1.selection.end <= state.text.length - 1 && state.text.slice(state1.selection.end, state1.selection.end + 1) === '\\n' || state1.selection.end === state.text.length) {\n        suffix = '\\n```';\n      }\n    }\n    var newSelectionRange2 = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix,\n      suffix\n    });\n    var state2 = api.setSelectionRange(newSelectionRange2);\n    executeCommand({\n      api,\n      selectedText: state2.selectedText,\n      selection: state.selection,\n      prefix,\n      suffix\n    });\n  }\n};\nexport var code = {\n  name: 'code',\n  keyCommand: 'code',\n  shortcuts: 'ctrlcmd+j',\n  prefix: '`',\n  buttonProps: {\n    'aria-label': 'Insert code (ctrl + j)',\n    title: 'Insert code (ctrl + j)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"14\",\n    height: \"14\",\n    role: \"img\",\n    viewBox: \"0 0 640 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"\n    })\n  }),\n  execute: (state, api) => {\n    if (state.selectedText.indexOf('\\n') === -1) {\n      var newSelectionRange = selectWord({\n        text: state.text,\n        selection: state.selection,\n        prefix: state.command.prefix\n      });\n      var state1 = api.setSelectionRange(newSelectionRange);\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: state.command.prefix\n      });\n    } else {\n      codeBlock.execute(state, api);\n    }\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var comment = {\n  name: 'comment',\n  keyCommand: 'comment',\n  shortcuts: 'ctrlcmd+/',\n  prefix: '<!-- ',\n  suffix: ' -->',\n  buttonProps: {\n    'aria-label': 'Insert comment (ctrl + /)',\n    title: 'Insert comment (ctrl + /)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 25 25\",\n    children: /*#__PURE__*/_jsxs(\"g\", {\n      fill: \"none\",\n      fillRule: \"evenodd\",\n      children: [/*#__PURE__*/_jsx(\"polygon\", {\n        points: \".769 .727 24.981 .727 24.981 24.727 .769 24.727\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"3\",\n        d: \"M12.625,23.8787879 L8.125,19.6969697 L5.125,19.6969697 C2.63971863,19.6969697 0.625,17.8247059 0.625,15.5151515 L0.625,7.15151515 C0.625,4.84196074 2.63971863,2.96969697 5.125,2.96969697 L20.125,2.96969697 C22.6102814,2.96969697 24.625,4.84196074 24.625,7.15151515 L24.625,15.5151515 C24.625,17.8247059 22.6102814,19.6969697 20.125,19.6969697 L17.125,19.6969697 L12.625,23.8787879\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"3\",\n        d: \"M10.625,8.54545455 L7.25,11.3333333 L10.625,14.1212121 M15.6875,8.54545455 L19.0625,11.3333333 L15.6875,14.1212121\"\n      })]\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    executeCommand({\n      api,\n      selectedText: state1.selectedText,\n      selection: state.selection,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","export var divider = {\n  keyCommand: 'divider'\n};","import React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var fullscreen = {\n  name: 'fullscreen',\n  keyCommand: 'fullscreen',\n  shortcuts: 'ctrlcmd+0',\n  value: 'fullscreen',\n  buttonProps: {\n    'aria-label': 'Toggle fullscreen (ctrl + 0)',\n    title: 'Toggle fullscreen (ctrl+ 0)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M118 171.133334L118 342.200271C118 353.766938 126.675 365.333605 141.133333 365.333605L382.634614 365.333605C394.201281 365.333605 405.767948 356.658605 405.767948 342.200271L405.767948 171.133334C405.767948 159.566667 397.092948 148 382.634614 148L141.133333 148C126.674999 148 117.999999 156.675 118 171.133334zM465.353591 413.444444L370 413.444444 370 471.222222 474.0221 471.222222C500.027624 471.222222 520.254143 451 520.254143 425L520.254143 321 462.464089 321 462.464089 413.444444 465.353591 413.444444zM471.0221 43L367 43 367 100.777778 462.353591 100.777778 462.353591 196.111111 520.143647 196.111111 520.143647 89.2222219C517.254144 63.2222219 497.027624 43 471.0221 43zM57.7900547 100.777778L153.143646 100.777778 153.143646 43 46.2320439 43C20.2265191 43 0 63.2222219 0 89.2222219L0 193.222222 57.7900547 193.222222 57.7900547 100.777778zM57.7900547 321L0 321 0 425C0 451 20.2265191 471.222222 46.2320439 471.222223L150.254143 471.222223 150.254143 413.444445 57.7900547 413.444445 57.7900547 321z\"\n    })\n  }),\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\n    api.textArea.focus();\n    if (shortcuts && dispatch && executeCommandState) {\n      dispatch({\n        fullscreen: !executeCommandState.fullscreen\n      });\n    }\n  }\n};","import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var group = (arr, options) => {\n  var data = _extends({\n    children: arr,\n    icon: /*#__PURE__*/_jsx(\"svg\", {\n      width: \"12\",\n      height: \"12\",\n      viewBox: \"0 0 520 520\",\n      children: /*#__PURE__*/_jsx(\"path\", {\n        fill: \"currentColor\",\n        d: \"M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z\"\n      })\n    }),\n    execute: () => {}\n  }, options, {\n    keyCommand: 'group'\n  });\n  if (Array.isArray(data.children)) {\n    data.children = data.children.map(_ref => {\n      var item = _extends({}, (_objectDestructuringEmpty(_ref), _ref));\n      item.parent = data;\n      return _extends({}, item);\n    });\n  }\n  return data;\n};","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var hr = {\n  name: 'hr',\n  keyCommand: 'hr',\n  shortcuts: 'ctrlcmd+h',\n  prefix: '\\n\\n---\\n',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert HR (ctrl + h)',\n    title: 'Insert HR (ctrl + h)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 175 175\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M0,129 L175,129 L175,154 L0,154 L0,129 Z M3,9 L28.2158203,9 L28.2158203,47.9824219 L55.7695313,47.9824219 L55.7695313,9 L81.0966797,9 L81.0966797,107.185547 L55.7695313,107.185547 L55.7695313,68.0214844 L28.2158203,68.0214844 L28.2158203,107.185547 L3,107.185547 L3,9 Z M93.1855469,100.603516 L93.1855469,19 L135.211914,19 C143.004922,19 148.960917,19.6679621 153.080078,21.0039063 C157.199239,22.3398504 160.520495,24.8168764 163.043945,28.4350586 C165.567395,32.0532407 166.829102,36.459935 166.829102,41.6552734 C166.829102,46.1826398 165.864267,50.0883625 163.93457,53.3725586 C162.004873,56.6567547 159.351579,59.3193257 155.974609,61.3603516 C153.822255,62.6591862 150.872089,63.7353473 147.124023,64.5888672 C150.129898,65.5908253 152.319329,66.5927684 153.692383,67.5947266 C154.620122,68.2626987 155.965323,69.6913953 157.728027,71.8808594 C159.490731,74.0703234 160.668942,75.7587831 161.262695,76.9462891 L173,100.603516 L144.953125,100.603516 L131.482422,75.6660156 C129.775382,72.4374839 128.253913,70.3408251 126.917969,69.3759766 C125.0996,68.1142515 123.040051,67.4833984 120.739258,67.4833984 L118.512695,67.4833984 L118.512695,100.603516 L93.1855469,100.603516 Z M118.512695,52.0644531 L129.144531,52.0644531 C130.294928,52.0644531 132.521468,51.6933631 135.824219,50.9511719 C137.494149,50.6171858 138.857905,49.7636787 139.915527,48.390625 C140.97315,47.0175713 141.501953,45.4404386 141.501953,43.6591797 C141.501953,41.0244009 140.667001,39.0019602 138.99707,37.5917969 C137.32714,36.1816336 134.191429,35.4765625 129.589844,35.4765625 L117.512695,35.4765625 L118.512695,52.0644531 Z\",\n      transform: \"translate(0 9)\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    if (state1.selectedText.length >= state.command.prefix.length && state1.selectedText.startsWith(state.command.prefix)) {\n      // Remove\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: state.command.prefix,\n        suffix: state.command.suffix\n      });\n    } else {\n      // Add\n      state1 = api.setSelectionRange({\n        start: state.selection.start,\n        end: state.selection.start\n      });\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: state.command.prefix,\n        suffix: state.command.suffix\n      });\n    }\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var image = {\n  name: 'image',\n  keyCommand: 'image',\n  shortcuts: 'ctrlcmd+k',\n  prefix: '![image](',\n  suffix: ')',\n  buttonProps: {\n    'aria-label': 'Add image (ctrl + k)',\n    title: 'Add image (ctrl + k)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"13\",\n    height: \"13\",\n    viewBox: \"0 0 20 20\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    if (state1.selectedText.includes('http') || state1.selectedText.includes('www')) {\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: state.command.prefix,\n        suffix: state.command.suffix\n      });\n    } else {\n      newSelectionRange = selectWord({\n        text: state.text,\n        selection: state.selection,\n        prefix: '![',\n        suffix: ']()'\n      });\n      state1 = api.setSelectionRange(newSelectionRange);\n      if (state1.selectedText.length === 0) {\n        executeCommand({\n          api,\n          selectedText: state1.selectedText,\n          selection: state.selection,\n          prefix: '![image',\n          suffix: '](url)'\n        });\n      } else {\n        executeCommand({\n          api,\n          selectedText: state1.selectedText,\n          selection: state.selection,\n          prefix: '![',\n          suffix: ']()'\n        });\n      }\n    }\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var italic = {\n  name: 'italic',\n  keyCommand: 'italic',\n  shortcuts: 'ctrlcmd+i',\n  prefix: '*',\n  buttonProps: {\n    'aria-label': 'Add italic text (ctrl + i)',\n    title: 'Add italic text (ctrl + i)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 320 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M204.758 416h-33.849l62.092-320h40.725a16 16 0 0 0 15.704-12.937l6.242-32C297.599 41.184 290.034 32 279.968 32H120.235a16 16 0 0 0-15.704 12.937l-6.242 32C96.362 86.816 103.927 96 113.993 96h33.846l-62.09 320H46.278a16 16 0 0 0-15.704 12.935l-6.245 32C22.402 470.815 29.967 480 40.034 480h158.479a16 16 0 0 0 15.704-12.935l6.245-32c1.927-9.88-5.638-19.065-15.704-19.065z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    executeCommand({\n      api,\n      selectedText: state1.selectedText,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var link = {\n  name: 'link',\n  keyCommand: 'link',\n  shortcuts: 'ctrlcmd+l',\n  prefix: '[',\n  suffix: '](url)',\n  buttonProps: {\n    'aria-label': 'Add a link (ctrl + l)',\n    title: 'Add a link (ctrl + l)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"italic\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 520 520\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M331.751196,182.121107 C392.438214,241.974735 391.605313,337.935283 332.11686,396.871226 C332.005129,396.991316 331.873084,397.121413 331.751196,397.241503 L263.493918,464.491645 C203.291404,523.80587 105.345257,523.797864 45.151885,464.491645 C-15.0506283,405.187427 -15.0506283,308.675467 45.151885,249.371249 L82.8416853,212.237562 C92.836501,202.39022 110.049118,208.9351 110.56511,222.851476 C111.223305,240.5867 114.451306,258.404985 120.407566,275.611815 C122.424812,281.438159 120.983487,287.882964 116.565047,292.23621 L103.272145,305.332975 C74.8052033,333.379887 73.9123737,379.047937 102.098973,407.369054 C130.563883,435.969378 177.350591,436.139505 206.033884,407.879434 L274.291163,340.6393 C302.9257,312.427264 302.805844,266.827265 274.291163,238.733318 C270.531934,235.036561 266.74528,232.16442 263.787465,230.157924 C259.544542,227.2873 256.928256,222.609848 256.731165,217.542518 C256.328935,206.967633 260.13184,196.070508 268.613213,187.714278 L289.998463,166.643567 C295.606326,161.118448 304.403592,160.439942 310.906317,164.911276 C318.353355,170.034591 325.328531,175.793397 331.751196,182.121107 Z M240.704978,55.4828366 L172.447607,122.733236 C172.325719,122.853326 172.193674,122.983423 172.081943,123.103513 C117.703294,179.334654 129.953294,261.569283 185.365841,328.828764 C191.044403,335.721376 198.762988,340.914712 206.209732,346.037661 C212.712465,350.509012 221.510759,349.829503 227.117615,344.305363 L248.502893,323.234572 C256.984277,314.87831 260.787188,303.981143 260.384957,293.406218 C260.187865,288.338869 257.571576,283.661398 253.328648,280.790763 C250.370829,278.78426 246.58417,275.912107 242.824936,272.215337 C214.310216,244.121282 206.209732,204.825874 229.906702,179.334654 L298.164073,112.094263 C326.847404,83.8340838 373.633159,84.0042113 402.099123,112.604645 C430.285761,140.92587 429.393946,186.594095 400.92595,214.641114 L387.63303,227.737929 C383.214584,232.091191 381.773257,238.536021 383.790506,244.362388 C389.746774,261.569283 392.974779,279.387637 393.632975,297.122928 C394.149984,311.039357 411.361608,317.584262 421.356437,307.736882 L459.046288,270.603053 C519.249898,211.29961 519.249898,114.787281 459.047304,55.4828366 C398.853851,-3.82360914 300.907572,-3.83161514 240.704978,55.4828366 Z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    if (state1.selectedText.includes('http') || state1.selectedText.includes('www')) {\n      newSelectionRange = selectWord({\n        text: state.text,\n        selection: state.selection,\n        prefix: '[](',\n        suffix: ')'\n      });\n      state1 = api.setSelectionRange(newSelectionRange);\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: '[](',\n        suffix: ')'\n      });\n    } else {\n      if (state1.selectedText.length === 0) {\n        executeCommand({\n          api,\n          selectedText: state1.selectedText,\n          selection: state.selection,\n          prefix: '[title',\n          suffix: '](url)'\n        });\n      } else {\n        executeCommand({\n          api,\n          selectedText: state1.selectedText,\n          selection: state.selection,\n          prefix: state.command.prefix,\n          suffix: state.command.suffix\n        });\n      }\n    }\n  }\n};","import React from 'react';\nimport { selectWord, getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, insertBeforeEachLine } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var makeList = (state, api, insertBefore) => {\n  var newSelectionRange = selectWord({\n    text: state.text,\n    selection: state.selection,\n    prefix: state.command.prefix\n  });\n  var state1 = api.setSelectionRange(newSelectionRange);\n  var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n  var breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\n  var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n  var breaksAfter = Array(breaksAfterCount + 1).join('\\n');\n  var {\n    modifiedText,\n    insertionLength\n  } = insertBeforeEachLine(state1.selectedText, insertBefore);\n  if (insertionLength < 0) {\n    // Remove\n    var selectionStart = state1.selection.start;\n    var selectionEnd = state1.selection.end;\n    if (state1.selection.start > 0 && state.text.slice(state1.selection.start - 1, state1.selection.start) === '\\n') {\n      selectionStart -= 1;\n    }\n    if (state1.selection.end < state.text.length - 1 && state.text.slice(state1.selection.end, state1.selection.end + 1) === '\\n') {\n      selectionEnd += 1;\n    }\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n    api.replaceSelection(\"\" + modifiedText);\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionStart + modifiedText.length\n    });\n  } else {\n    // Add\n    api.replaceSelection(\"\" + breaksBefore + modifiedText + breaksAfter);\n    var _selectionStart = state1.selection.start + breaksBeforeCount;\n    var _selectionEnd = _selectionStart + modifiedText.length;\n    api.setSelectionRange({\n      start: _selectionStart,\n      end: _selectionEnd\n    });\n  }\n};\nexport var unorderedListCommand = {\n  name: 'unordered-list',\n  keyCommand: 'list',\n  shortcuts: 'ctrl+shift+u',\n  prefix: '- ',\n  buttonProps: {\n    'aria-label': 'Add unordered list (ctrl + shift + u)',\n    title: 'Add unordered list (ctrl + shift + u)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"unordered-list\",\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 512 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M96 96c0 26.51-21.49 48-48 48S0 122.51 0 96s21.49-48 48-48 48 21.49 48 48zM48 208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm0 160c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm96-236h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n    })\n  }),\n  execute: (state, api) => {\n    makeList(state, api, '- ');\n  }\n};\nexport var orderedListCommand = {\n  name: 'ordered-list',\n  keyCommand: 'list',\n  shortcuts: 'ctrl+shift+o',\n  prefix: '1. ',\n  buttonProps: {\n    'aria-label': 'Add ordered list (ctrl + shift + o)',\n    title: 'Add ordered list (ctrl + shift + o)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"ordered-list\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M3.263 139.527c0-7.477 3.917-11.572 11.573-11.572h15.131V88.078c0-5.163.534-10.503.534-10.503h-.356s-1.779 2.67-2.848 3.738c-4.451 4.273-10.504 4.451-15.666-1.068l-5.518-6.231c-5.342-5.341-4.984-11.216.534-16.379l21.72-19.938C32.815 33.602 36.732 32 42.785 32H54.89c7.656 0 11.749 3.916 11.749 11.572v84.384h15.488c7.655 0 11.572 4.094 11.572 11.572v8.901c0 7.477-3.917 11.572-11.572 11.572H14.836c-7.656 0-11.573-4.095-11.573-11.572v-8.902zM2.211 304.591c0-47.278 50.955-56.383 50.955-69.165 0-7.18-5.954-8.755-9.28-8.755-3.153 0-6.479 1.051-9.455 3.852-5.079 4.903-10.507 7.004-16.111 2.451l-8.579-6.829c-5.779-4.553-7.18-9.805-2.803-15.409C13.592 201.981 26.025 192 47.387 192c19.437 0 44.476 10.506 44.476 39.573 0 38.347-46.753 46.402-48.679 56.909h39.049c7.529 0 11.557 4.027 11.557 11.382v8.755c0 7.354-4.028 11.382-11.557 11.382h-67.94c-7.005 0-12.083-4.028-12.083-11.382v-4.028zM5.654 454.61l5.603-9.28c3.853-6.654 9.105-7.004 15.584-3.152 4.903 2.101 9.63 3.152 14.359 3.152 10.155 0 14.358-3.502 14.358-8.23 0-6.654-5.604-9.106-15.934-9.106h-4.728c-5.954 0-9.28-2.101-12.258-7.88l-1.05-1.926c-2.451-4.728-1.226-9.806 2.801-14.884l5.604-7.004c6.829-8.405 12.257-13.483 12.257-13.483v-.35s-4.203 1.051-12.608 1.051H16.685c-7.53 0-11.383-4.028-11.383-11.382v-8.755c0-7.53 3.853-11.382 11.383-11.382h58.484c7.529 0 11.382 4.027 11.382 11.382v3.327c0 5.778-1.401 9.806-5.079 14.183l-17.509 20.137c19.611 5.078 28.716 20.487 28.716 34.845 0 21.363-14.358 44.126-48.503 44.126-16.636 0-28.192-4.728-35.896-9.455-5.779-4.202-6.304-9.805-2.626-15.934zM144 132h352c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h352c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H144c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\n    })\n  }),\n  execute: (state, api) => {\n    makeList(state, api, (item, index) => index + 1 + \". \");\n  }\n};\nexport var checkedListCommand = {\n  name: 'checked-list',\n  keyCommand: 'list',\n  shortcuts: 'ctrl+shift+c',\n  prefix: '- [ ] ',\n  buttonProps: {\n    'aria-label': 'Add checked list (ctrl + shift + c)',\n    title: 'Add checked list (ctrl + shift + c)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"checked-list\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M208 132h288c8.8 0 16-7.2 16-16V76c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zm0 160h288c8.8 0 16-7.2 16-16v-40c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16v40c0 8.8 7.2 16 16 16zM64 368c-26.5 0-48.6 21.5-48.6 48s22.1 48 48.6 48 48-21.5 48-48-21.5-48-48-48zm92.5-299l-72.2 72.2-15.6 15.6c-4.7 4.7-12.9 4.7-17.6 0L3.5 109.4c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.3c4.7-4.7 12.3-4.7 17 0l17 16.5c4.6 4.7 4.6 12.3-.1 17zm0 159.6l-72.2 72.2-15.7 15.7c-4.7 4.7-12.9 4.7-17.6 0L3.5 269c-4.7-4.7-4.7-12.3 0-17l15.7-15.7c4.7-4.7 12.3-4.7 17 0l22.7 22.1 63.7-63.7c4.7-4.7 12.3-4.7 17 0l17 17c4.6 4.6 4.6 12.2-.1 16.9z\"\n    })\n  }),\n  execute: (state, api) => {\n    makeList(state, api, (item, index) => \"- [ ] \");\n  }\n};","import React from 'react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var codePreview = {\n  name: 'preview',\n  keyCommand: 'preview',\n  value: 'preview',\n  shortcuts: 'ctrlcmd+9',\n  buttonProps: {\n    'aria-label': 'Preview code (ctrl + 9)',\n    title: 'Preview code (ctrl + 9)'\n  },\n  icon: /*#__PURE__*/_jsxs(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: [/*#__PURE__*/_jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"0 71.293 0 122 38.023 123 38.023 398 0 397 0 449.707 91.023 450.413 91.023 72.293\"\n    }), /*#__PURE__*/_jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"148.023 72.293 520 71.293 520 122 200.023 124 200.023 397 520 396 520 449.707 148.023 450.413\"\n    })]\n  }),\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\n    api.textArea.focus();\n    if (shortcuts && dispatch && executeCommandState) {\n      dispatch({\n        preview: 'preview'\n      });\n    }\n  }\n};\nexport var codeEdit = {\n  name: 'edit',\n  keyCommand: 'preview',\n  value: 'edit',\n  shortcuts: 'ctrlcmd+7',\n  buttonProps: {\n    'aria-label': 'Edit code (ctrl + 7)',\n    title: 'Edit code (ctrl + 7)'\n  },\n  icon: /*#__PURE__*/_jsxs(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: [/*#__PURE__*/_jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"0 71.293 0 122 319 122 319 397 0 397 0 449.707 372 449.413 372 71.293\"\n    }), /*#__PURE__*/_jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"429 71.293 520 71.293 520 122 481 123 481 396 520 396 520 449.707 429 449.413\"\n    })]\n  }),\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\n    api.textArea.focus();\n    if (shortcuts && dispatch && executeCommandState) {\n      dispatch({\n        preview: 'edit'\n      });\n    }\n  }\n};\nexport var codeLive = {\n  name: 'live',\n  keyCommand: 'preview',\n  value: 'live',\n  shortcuts: 'ctrlcmd+8',\n  buttonProps: {\n    'aria-label': 'Live code (ctrl + 8)',\n    title: 'Live code (ctrl + 8)'\n  },\n  icon: /*#__PURE__*/_jsxs(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: [/*#__PURE__*/_jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"0 71.293 0 122 179 122 179 397 0 397 0 449.707 232 449.413 232 71.293\"\n    }), /*#__PURE__*/_jsx(\"polygon\", {\n      fill: \"currentColor\",\n      points: \"289 71.293 520 71.293 520 122 341 123 341 396 520 396 520 449.707 289 449.413\"\n    })]\n  }),\n  execute: (state, api, dispatch, executeCommandState, shortcuts) => {\n    api.textArea.focus();\n    if (shortcuts && dispatch && executeCommandState) {\n      dispatch({\n        preview: 'live'\n      });\n    }\n  }\n};","import React from 'react';\nimport { getBreaksNeededForEmptyLineBefore, getBreaksNeededForEmptyLineAfter, selectWord, insertBeforeEachLine } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var quote = {\n  name: 'quote',\n  keyCommand: 'quote',\n  shortcuts: 'ctrlcmd+q',\n  prefix: '> ',\n  buttonProps: {\n    'aria-label': 'Insert a quote (ctrl + q)',\n    title: 'Insert a quote (ctrl + q)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M520,95.75 L520,225.75 C520,364.908906 457.127578,437.050625 325.040469,472.443125 C309.577578,476.586875 294.396016,464.889922 294.396016,448.881641 L294.396016,414.457031 C294.396016,404.242891 300.721328,395.025078 310.328125,391.554687 C377.356328,367.342187 414.375,349.711094 414.375,274.5 L341.25,274.5 C314.325781,274.5 292.5,252.674219 292.5,225.75 L292.5,95.75 C292.5,68.8257812 314.325781,47 341.25,47 L471.25,47 C498.174219,47 520,68.8257812 520,95.75 Z M178.75,47 L48.75,47 C21.8257813,47 0,68.8257812 0,95.75 L0,225.75 C0,252.674219 21.8257813,274.5 48.75,274.5 L121.875,274.5 C121.875,349.711094 84.8563281,367.342187 17.828125,391.554687 C8.22132813,395.025078 1.89601563,404.242891 1.89601563,414.457031 L1.89601563,448.881641 C1.89601563,464.889922 17.0775781,476.586875 32.5404687,472.443125 C164.627578,437.050625 227.5,364.908906 227.5,225.75 L227.5,95.75 C227.5,68.8257812 205.674219,47 178.75,47 Z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    var breaksBeforeCount = getBreaksNeededForEmptyLineBefore(state1.text, state1.selection.start);\n    var breaksBefore = Array(breaksBeforeCount + 1).join('\\n');\n    var breaksAfterCount = getBreaksNeededForEmptyLineAfter(state1.text, state1.selection.end);\n    var breaksAfter = Array(breaksAfterCount + 1).join('\\n');\n    var modifiedText = insertBeforeEachLine(state1.selectedText, state.command.prefix);\n    api.replaceSelection(\"\" + breaksBefore + modifiedText.modifiedText + breaksAfter);\n    var selectionStart = state1.selection.start + breaksBeforeCount;\n    var selectionEnd = selectionStart + modifiedText.modifiedText.length;\n    api.setSelectionRange({\n      start: selectionStart,\n      end: selectionEnd\n    });\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var strikethrough = {\n  name: 'strikethrough',\n  keyCommand: 'strikethrough',\n  shortcuts: 'ctrl+shift+x',\n  buttonProps: {\n    'aria-label': 'Add strikethrough text (ctrl + shift + x)',\n    title: 'Add strikethrough text (ctrl + shift + x)'\n  },\n  prefix: '~~',\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    \"data-name\": \"strikethrough\",\n    width: \"12\",\n    height: \"12\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M496 288H16c-8.837 0-16-7.163-16-16v-32c0-8.837 7.163-16 16-16h480c8.837 0 16 7.163 16 16v32c0 8.837-7.163 16-16 16zm-214.666 16c27.258 12.937 46.524 28.683 46.524 56.243 0 33.108-28.977 53.676-75.621 53.676-32.325 0-76.874-12.08-76.874-44.271V368c0-8.837-7.164-16-16-16H113.75c-8.836 0-16 7.163-16 16v19.204c0 66.845 77.717 101.82 154.487 101.82 88.578 0 162.013-45.438 162.013-134.424 0-19.815-3.618-36.417-10.143-50.6H281.334zm-30.952-96c-32.422-13.505-56.836-28.946-56.836-59.683 0-33.92 30.901-47.406 64.962-47.406 42.647 0 64.962 16.593 64.962 32.985V136c0 8.837 7.164 16 16 16h45.613c8.836 0 16-7.163 16-16v-30.318c0-52.438-71.725-79.875-142.575-79.875-85.203 0-150.726 40.972-150.726 125.646 0 22.71 4.665 41.176 12.777 56.547h129.823z\"\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    executeCommand({\n      api,\n      selectedText: state1.selectedText,\n      selection: state.selection,\n      prefix: state.command.prefix\n    });\n  }\n};","import React from 'react';\nimport { titleExecute } from \"../commands/title.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title1 = {\n  name: 'title1',\n  keyCommand: 'title1',\n  shortcuts: 'ctrlcmd+1',\n  prefix: '# ',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert title1 (ctrl + 1)',\n    title: 'Insert title1 (ctrl + 1)'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 18,\n      textAlign: 'left'\n    },\n    children: \"Title 1\"\n  }),\n  execute: (state, api) => {\n    titleExecute({\n      state,\n      api,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { title1 } from \"./title1.js\";\nimport { selectLine, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function titleExecute(_ref) {\n  var {\n    state,\n    api,\n    prefix,\n    suffix = prefix\n  } = _ref;\n  var newSelectionRange = selectLine({\n    text: state.text,\n    selection: state.selection\n  });\n  var state1 = api.setSelectionRange(newSelectionRange);\n  executeCommand({\n    api,\n    selectedText: state1.selectedText,\n    selection: state.selection,\n    prefix,\n    suffix\n  });\n}\nexport var title = _extends({}, title1, {\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 520 520\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M15.7083333,468 C7.03242448,468 0,462.030833 0,454.666667 L0,421.333333 C0,413.969167 7.03242448,408 15.7083333,408 L361.291667,408 C369.967576,408 377,413.969167 377,421.333333 L377,454.666667 C377,462.030833 369.967576,468 361.291667,468 L15.7083333,468 Z M21.6666667,366 C9.69989583,366 0,359.831861 0,352.222222 L0,317.777778 C0,310.168139 9.69989583,304 21.6666667,304 L498.333333,304 C510.300104,304 520,310.168139 520,317.777778 L520,352.222222 C520,359.831861 510.300104,366 498.333333,366 L21.6666667,366 Z M136.835938,64 L136.835937,126 L107.25,126 L107.25,251 L40.75,251 L40.75,126 L-5.68434189e-14,126 L-5.68434189e-14,64 L136.835938,64 Z M212,64 L212,251 L161.648438,251 L161.648438,64 L212,64 Z M378,64 L378,126 L343.25,126 L343.25,251 L281.75,251 L281.75,126 L238,126 L238,64 L378,64 Z M449.047619,189.550781 L520,189.550781 L520,251 L405,251 L405,64 L449.047619,64 L449.047619,189.550781 Z\"\n    })\n  })\n});","import React from 'react';\nimport { titleExecute } from \"../commands/title.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title2 = {\n  name: 'title2',\n  keyCommand: 'title2',\n  shortcuts: 'ctrlcmd+2',\n  prefix: '## ',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert title2 (ctrl + 2)',\n    title: 'Insert title2 (ctrl + 2)'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 16,\n      textAlign: 'left'\n    },\n    children: \"Title 2\"\n  }),\n  execute: (state, api) => {\n    titleExecute({\n      state,\n      api,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","import React from 'react';\nimport { titleExecute } from \"../commands/title.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title3 = {\n  name: 'title3',\n  keyCommand: 'title3',\n  shortcuts: 'ctrlcmd+3',\n  prefix: '### ',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert title3 (ctrl + 3)',\n    title: 'Insert title3 (ctrl + 3)'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 15,\n      textAlign: 'left'\n    },\n    children: \"Title 3\"\n  }),\n  execute: (state, api) => {\n    titleExecute({\n      state,\n      api,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","import React from 'react';\nimport { titleExecute } from \"../commands/title.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title4 = {\n  name: 'title4',\n  keyCommand: 'title4',\n  shortcuts: 'ctrlcmd+4',\n  prefix: '#### ',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert title4 (ctrl + 4)',\n    title: 'Insert title4 (ctrl + 4)'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 14,\n      textAlign: 'left'\n    },\n    children: \"Title 4\"\n  }),\n  execute: (state, api) => {\n    titleExecute({\n      state,\n      api,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","import React from 'react';\nimport { titleExecute } from \"../commands/title.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title5 = {\n  name: 'title5',\n  keyCommand: 'title5',\n  shortcuts: 'ctrlcmd+5',\n  prefix: '##### ',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert title5 (ctrl + 5)',\n    title: 'Insert title5 (ctrl + 5)'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 12,\n      textAlign: 'left'\n    },\n    children: \"Title 5\"\n  }),\n  execute: (state, api) => {\n    titleExecute({\n      state,\n      api,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","import React from 'react';\nimport { titleExecute } from \"../commands/title.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var title6 = {\n  name: 'title6',\n  keyCommand: 'title6',\n  shortcuts: 'ctrlcmd+6',\n  prefix: '###### ',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Insert title6 (ctrl + 6)',\n    title: 'Insert title6 (ctrl + 6)'\n  },\n  icon: /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: 12,\n      textAlign: 'left'\n    },\n    children: \"Title 6\"\n  }),\n  execute: (state, api) => {\n    titleExecute({\n      state,\n      api,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n  }\n};","import React from 'react';\nimport { selectWord, executeCommand } from \"../utils/markdownUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var table = {\n  name: 'table',\n  keyCommand: 'table',\n  prefix: '\\n| Header | Header |\\n|--------|--------|\\n| Cell | Cell |\\n| Cell | Cell |\\n| Cell | Cell |\\n\\n',\n  suffix: '',\n  buttonProps: {\n    'aria-label': 'Add table',\n    title: 'Add table'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    role: \"img\",\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 512 512\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M64 256V160H224v96H64zm0 64H224v96H64V320zm224 96V320H448v96H288zM448 256H288V160H448v96zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64z\"\n      //Font Awesome Free 6.4.2 by @fontawesome - https://fontawesome.com\n    })\n  }),\n  execute: (state, api) => {\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection,\n      prefix: state.command.prefix,\n      suffix: state.command.suffix\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    if (state1.selectedText.length >= state.command.prefix.length + state.command.suffix.length && state1.selectedText.startsWith(state.command.prefix)) {\n      // Remove\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: state.command.prefix,\n        suffix: state.command.suffix\n      });\n    } else {\n      // Add\n      state1 = api.setSelectionRange({\n        start: state.selection.start,\n        end: state.selection.start\n      });\n      executeCommand({\n        api,\n        selectedText: state1.selectedText,\n        selection: state.selection,\n        prefix: state.command.prefix,\n        suffix: state.command.suffix\n      });\n    }\n  }\n};","import React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var help = {\n  name: 'help',\n  keyCommand: 'help',\n  buttonProps: {\n    'aria-label': 'Open help',\n    title: 'Open help'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    viewBox: \"0 0 16 16\",\n    width: \"12px\",\n    height: \"12px\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      d: \"M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8Zm.9 13H7v-1.8h1.9V13Zm-.1-3.6v.5H7.1v-.6c.2-2.1 2-1.9 1.9-3.2.1-.7-.3-1.1-1-1.1-.8 0-1.2.7-1.2 1.6H5c0-1.7 1.2-3 2.9-3 2.3 0 3 1.4 3 2.3.1 2.3-1.9 2-2.1 3.5Z\",\n      fill: \"currentColor\"\n    })\n  }),\n  execute: () => {\n    window.open('https://www.markdownguide.org/basic-syntax/', '_blank', 'noreferrer');\n  }\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport { insertTextAtPosition } from \"../utils/InsertTextAtPosition.js\";\nimport { bold } from \"./bold.js\";\nimport { code, codeBlock } from \"./code.js\";\nimport { comment } from \"./comment.js\";\nimport { divider } from \"./divider.js\";\nimport { fullscreen } from \"./fullscreen.js\";\nimport { group } from \"./group.js\";\nimport { hr } from \"./hr.js\";\nimport { image } from \"./image.js\";\nimport { italic } from \"./italic.js\";\nimport { link } from \"./link.js\";\nimport { checkedListCommand, orderedListCommand, unorderedListCommand } from \"./list.js\";\nimport { codeEdit, codeLive, codePreview } from \"./preview.js\";\nimport { quote } from \"./quote.js\";\nimport { strikethrough } from \"./strikeThrough.js\";\nimport { title } from \"./title.js\";\nimport { title1 } from \"./title1.js\";\nimport { title2 } from \"./title2.js\";\nimport { title3 } from \"./title3.js\";\nimport { title4 } from \"./title4.js\";\nimport { title5 } from \"./title5.js\";\nimport { title6 } from \"./title6.js\";\nimport { table } from \"./table.js\";\nimport { issue } from \"./issue.js\";\nimport { help } from \"./help.js\";\nvar getCommands = () => [bold, italic, strikethrough, hr, group([title1, title2, title3, title4, title5, title6], {\n  name: 'title',\n  groupName: 'title',\n  buttonProps: {\n    'aria-label': 'Insert title',\n    title: 'Insert title'\n  }\n}), divider, link, quote, code, codeBlock, comment, image, table, divider, unorderedListCommand, orderedListCommand, checkedListCommand, divider, help];\nvar getExtraCommands = () => [codeEdit, codeLive, codePreview, divider, fullscreen];\nfunction getStateFromTextArea(textArea) {\n  var _textArea$value;\n  return {\n    selection: {\n      start: textArea.selectionStart,\n      end: textArea.selectionEnd\n    },\n    text: textArea.value,\n    selectedText: (_textArea$value = textArea.value) == null ? void 0 : _textArea$value.slice(textArea.selectionStart, textArea.selectionEnd)\n  };\n}\nclass TextAreaTextApi {\n  constructor(textArea) {\n    this.textArea = void 0;\n    this.textArea = textArea;\n  }\n\n  /**\n   * Replaces the current selection with the new text. This will make the new selectedText to be empty, the\n   * selection start and selection end will be the same and will both point to the end\n   * @param text Text that should replace the current selection\n   */\n  replaceSelection(text) {\n    insertTextAtPosition(this.textArea, text);\n    return getStateFromTextArea(this.textArea);\n  }\n\n  /**\n   * Selects the specified text range\n   * @param selection\n   */\n  setSelectionRange(selection) {\n    this.textArea.focus();\n    this.textArea.selectionStart = selection.start;\n    this.textArea.selectionEnd = selection.end;\n    return getStateFromTextArea(this.textArea);\n  }\n}\nclass TextAreaCommandOrchestrator {\n  constructor(textArea) {\n    this.textArea = void 0;\n    this.textApi = void 0;\n    this.textArea = textArea;\n    this.textApi = new TextAreaTextApi(textArea);\n  }\n  getState() {\n    if (!this.textArea) return false;\n    return getStateFromTextArea(this.textArea);\n  }\n  executeCommand(command, dispatch, state, shortcuts) {\n    command.execute && command.execute(_extends({\n      command\n    }, getStateFromTextArea(this.textArea)), this.textApi, dispatch, state, shortcuts);\n  }\n}\nexport { title, title1, title2, title3, title4, title5, title6, bold, codeBlock, comment, italic, strikethrough, hr, group, divider, link, quote, code, image, unorderedListCommand, orderedListCommand, checkedListCommand, table, issue, help, codeEdit, codeLive, codePreview, fullscreen,\n// Tool method.\ngetCommands, getExtraCommands, getStateFromTextArea, TextAreaCommandOrchestrator, TextAreaTextApi };","import { insertTextAtPosition } from \"../../utils/InsertTextAtPosition.js\";\nimport { insertBeforeEachLine, selectLine } from \"../../utils/markdownUtils.js\";\nimport { TextAreaTextApi } from \"../../commands/index.js\";\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\nfunction handleLineMove(e, direction) {\n  stopPropagation(e);\n  var target = e.target;\n  var textArea = new TextAreaTextApi(target);\n  var selection = {\n    start: target.selectionStart,\n    end: target.selectionEnd\n  };\n  selection = selectLine({\n    text: target.value,\n    selection\n  });\n  if (direction < 0 && selection.start <= 0 || direction > 0 && selection.end >= target.value.length) {\n    return;\n  }\n  var blockText = target.value.slice(selection.start, selection.end);\n  if (direction < 0) {\n    var prevLineSelection = selectLine({\n      text: target.value,\n      selection: {\n        start: selection.start - 1,\n        end: selection.start - 1\n      }\n    });\n    var prevLineText = target.value.slice(prevLineSelection.start, prevLineSelection.end);\n    textArea.setSelectionRange({\n      start: prevLineSelection.start,\n      end: selection.end\n    });\n    insertTextAtPosition(target, blockText + \"\\n\" + prevLineText);\n    textArea.setSelectionRange({\n      start: prevLineSelection.start,\n      end: prevLineSelection.start + blockText.length\n    });\n  } else {\n    var nextLineSelection = selectLine({\n      text: target.value,\n      selection: {\n        start: selection.end + 1,\n        end: selection.end + 1\n      }\n    });\n    var nextLineText = target.value.slice(nextLineSelection.start, nextLineSelection.end);\n    textArea.setSelectionRange({\n      start: selection.start,\n      end: nextLineSelection.end\n    });\n    insertTextAtPosition(target, nextLineText + \"\\n\" + blockText);\n    textArea.setSelectionRange({\n      start: nextLineSelection.end - blockText.length,\n      end: nextLineSelection.end\n    });\n  }\n}\nexport default function handleKeyDown(e, tabSize, defaultTabEnable) {\n  if (tabSize === void 0) {\n    tabSize = 2;\n  }\n  if (defaultTabEnable === void 0) {\n    defaultTabEnable = false;\n  }\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    var space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      var modifiedTextLine = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\n      var text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text.split('\\n').map(item => item.replace(new RegExp(\"^\" + space), '')).join('\\n');\n      }\n      textArea.replaceSelection(text);\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize\n      });\n    } else {\n      return insertTextAtPosition(target, space);\n    }\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr)) && !e.shiftKey) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    var startStr = '\\n- ';\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n    if (currentLineStr.startsWith('- [ ]') || currentLineStr.startsWith('- [X]') || currentLineStr.startsWith('- [x]')) {\n      startStr = '\\n- [ ] ';\n    }\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = \"\\n\" + (parseInt(currentLineStr) + 1) + \". \";\n    }\n    return insertTextAtPosition(target, startStr);\n  } else if (e.code && e.code.toLowerCase() === 'keyd' && e.ctrlKey) {\n    // Duplicate lines\n    stopPropagation(e);\n    var selection = {\n      start: target.selectionStart,\n      end: target.selectionEnd\n    };\n    var savedSelection = selection;\n    selection = selectLine({\n      text: target.value,\n      selection\n    });\n    var textToDuplicate = target.value.slice(selection.start, selection.end);\n    textArea.setSelectionRange({\n      start: selection.end,\n      end: selection.end\n    });\n    insertTextAtPosition(target, \"\\n\" + textToDuplicate);\n    textArea.setSelectionRange({\n      start: savedSelection.start,\n      end: savedSelection.end\n    });\n  } else if (e.code && e.code.toLowerCase() === 'arrowup' && e.altKey) {\n    handleLineMove(e, -1);\n  } else if (e.code && e.code.toLowerCase() === 'arrowdown' && e.altKey) {\n    handleLineMove(e, 1);\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"onChange\"],\n  _excluded2 = [\"markdown\", \"commands\", \"fullscreen\", \"preview\", \"highlightEnable\", \"extraCommands\", \"tabSize\", \"defaultTabEnable\", \"dispatch\"];\nimport React, { useContext, useEffect } from 'react';\nimport { EditorContext } from \"../../Context.js\";\nimport { TextAreaCommandOrchestrator } from \"../../commands/index.js\";\nimport handleKeyDown from \"./handleKeyDown.js\";\nimport shortcuts from \"./shortcuts.js\";\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Textarea(props) {\n  var {\n      prefixCls,\n      onChange: _onChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useContext = useContext(EditorContext),\n    {\n      markdown,\n      commands,\n      fullscreen,\n      preview,\n      highlightEnable,\n      extraCommands,\n      tabSize,\n      defaultTabEnable,\n      dispatch\n    } = _useContext,\n    otherStore = _objectWithoutPropertiesLoose(_useContext, _excluded2);\n  var textRef = React.useRef(null);\n  var executeRef = React.useRef();\n  var statesRef = React.useRef({\n    fullscreen,\n    preview\n  });\n  useEffect(() => {\n    statesRef.current = {\n      fullscreen,\n      preview,\n      highlightEnable\n    };\n  }, [fullscreen, preview, highlightEnable]);\n  useEffect(() => {\n    if (textRef.current && dispatch) {\n      var commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n      executeRef.current = commandOrchestrator;\n      dispatch({\n        textarea: textRef.current,\n        commandOrchestrator\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var onKeyDown = e => {\n    handleKeyDown(e, tabSize, defaultTabEnable);\n    shortcuts(e, [...(commands || []), ...(extraCommands || [])], executeRef.current, dispatch, statesRef.current);\n  };\n  useEffect(() => {\n    if (textRef.current) {\n      textRef.current.addEventListener('keydown', onKeyDown);\n    }\n    return () => {\n      if (textRef.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        textRef.current.removeEventListener('keydown', onKeyDown);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsx(\"textarea\", _extends({\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: false\n  }, other, {\n    ref: textRef,\n    className: prefixCls + \"-text-input \" + (other.className ? other.className : ''),\n    value: markdown,\n    onChange: e => {\n      dispatch && dispatch({\n        markdown: e.target.value\n      });\n      _onChange && _onChange(e);\n    }\n  }));\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"onScroll\", \"renderTextarea\"];\nimport React, { useEffect, Fragment, useContext } from 'react';\nimport { EditorContext } from \"../../Context.js\";\nimport shortcuts from \"./shortcuts.js\";\nimport Markdown from \"./Markdown.js\";\nimport Textarea from \"./Textarea.js\";\nimport { TextAreaCommandOrchestrator } from \"../../commands/index.js\";\nimport \"./index.css\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TextArea(props) {\n  var _ref = props || {},\n    {\n      prefixCls,\n      className,\n      onScroll,\n      renderTextarea\n    } = _ref,\n    otherProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var {\n    markdown,\n    scrollTop,\n    commands,\n    minHeight,\n    highlightEnable,\n    extraCommands,\n    dispatch\n  } = useContext(EditorContext);\n  var textRef = React.useRef(null);\n  var executeRef = React.useRef();\n  var warp = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    var state = {};\n    if (warp.current) {\n      state.textareaWarp = warp.current || undefined;\n      warp.current.scrollTop = scrollTop || 0;\n    }\n    if (dispatch) {\n      dispatch(_extends({}, state));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (textRef.current && dispatch) {\n      var commandOrchestrator = new TextAreaCommandOrchestrator(textRef.current);\n      executeRef.current = commandOrchestrator;\n      dispatch({\n        textarea: textRef.current,\n        commandOrchestrator\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var textStyle = highlightEnable ? {} : {\n    WebkitTextFillColor: 'initial',\n    overflow: 'auto'\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: warp,\n    className: prefixCls + \"-area \" + (className || ''),\n    onScroll: onScroll,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: prefixCls + \"-text\",\n      style: {\n        minHeight\n      },\n      children: renderTextarea ? (/*#__PURE__*/React.cloneElement(renderTextarea(_extends({}, otherProps, {\n        value: markdown,\n        autoComplete: 'off',\n        autoCorrect: 'off',\n        spellCheck: 'false',\n        autoCapitalize: 'off',\n        className: prefixCls + \"-text-input\",\n        style: {\n          WebkitTextFillColor: 'inherit',\n          overflow: 'auto'\n        }\n      }), {\n        dispatch,\n        onChange: otherProps.onChange,\n        shortcuts,\n        useContext: {\n          commands,\n          extraCommands,\n          commandOrchestrator: executeRef.current\n        }\n      }), {\n        ref: textRef\n      })) : /*#__PURE__*/_jsxs(Fragment, {\n        children: [highlightEnable && /*#__PURE__*/_jsx(Markdown, {\n          prefixCls: prefixCls\n        }), /*#__PURE__*/_jsx(Textarea, _extends({\n          prefixCls: prefixCls\n        }, otherProps, {\n          style: textStyle\n        }))]\n      })\n    })\n  });\n}","import React, { useEffect, useMemo, useRef } from 'react';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DragBar = props => {\n  var {\n    prefixCls,\n    onChange\n  } = props || {};\n  var $dom = useRef(null);\n  var dragRef = useRef();\n  var heightRef = useRef(props.height);\n  useEffect(() => {\n    if (heightRef.current !== props.height) {\n      heightRef.current = props.height;\n    }\n  }, [props.height]);\n  function handleMouseMove(event) {\n    if (dragRef.current) {\n      var _changedTouches$;\n      var clientY = event.clientY || ((_changedTouches$ = event.changedTouches[0]) == null ? void 0 : _changedTouches$.clientY);\n      var newHeight = dragRef.current.height + clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    var _$dom$current, _$dom$current2;\n    dragRef.current = undefined;\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n    (_$dom$current = $dom.current) == null || _$dom$current.removeEventListener('touchmove', handleMouseMove);\n    (_$dom$current2 = $dom.current) == null || _$dom$current2.removeEventListener('touchend', handleMouseUp);\n  }\n  function handleMouseDown(event) {\n    var _changedTouches$2, _$dom$current3, _$dom$current4;\n    event.preventDefault();\n    var clientY = event.clientY || ((_changedTouches$2 = event.changedTouches[0]) == null ? void 0 : _changedTouches$2.clientY);\n    dragRef.current = {\n      height: heightRef.current,\n      dragY: clientY\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    (_$dom$current3 = $dom.current) == null || _$dom$current3.addEventListener('touchmove', handleMouseMove, {\n      passive: false\n    });\n    (_$dom$current4 = $dom.current) == null || _$dom$current4.addEventListener('touchend', handleMouseUp, {\n      passive: false\n    });\n  }\n  useEffect(() => {\n    if (document) {\n      var _$dom$current5, _$dom$current6;\n      (_$dom$current5 = $dom.current) == null || _$dom$current5.addEventListener('touchstart', handleMouseDown, {\n        passive: false\n      });\n      (_$dom$current6 = $dom.current) == null || _$dom$current6.addEventListener('mousedown', handleMouseDown);\n    }\n    return () => {\n      if (document) {\n        var _$dom$current7;\n        (_$dom$current7 = $dom.current) == null || _$dom$current7.removeEventListener('touchstart', handleMouseDown);\n        document.removeEventListener('mousemove', handleMouseMove);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var svg = useMemo(() => /*#__PURE__*/_jsx(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n    })\n  }), []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: prefixCls + \"-bar\",\n    ref: $dom,\n    children: svg\n  });\n};\nexport default DragBar;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"value\", \"commands\", \"commandsFilter\", \"direction\", \"extraCommands\", \"height\", \"enableScroll\", \"visibleDragbar\", \"highlightEnable\", \"preview\", \"fullscreen\", \"overflow\", \"previewOptions\", \"textareaProps\", \"maxHeight\", \"minHeight\", \"autoFocus\", \"tabSize\", \"defaultTabEnable\", \"onChange\", \"onStatistics\", \"onHeightChange\", \"hideToolbar\", \"toolbarBottom\", \"components\", \"renderTextarea\"];\nimport React, { useEffect, useReducer, useMemo, useRef, useImperativeHandle } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport { ToolbarVisibility } from \"./components/Toolbar/index.js\";\nimport TextArea from \"./components/TextArea/index.js\";\nimport DragBar from \"./components/DragBar/index.js\";\nimport { getCommands, getExtraCommands, TextAreaCommandOrchestrator } from \"./commands/index.js\";\nimport { reducer, EditorContext } from \"./Context.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction setGroupPopFalse(data) {\n  if (data === void 0) {\n    data = {};\n  }\n  Object.keys(data).forEach(keyname => {\n    data[keyname] = false;\n  });\n  return data;\n}\nvar InternalMDEditor = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _ref = props || {},\n    {\n      prefixCls = 'w-md-editor',\n      className,\n      value: propsValue,\n      commands = getCommands(),\n      commandsFilter,\n      direction,\n      extraCommands = getExtraCommands(),\n      height = 200,\n      enableScroll = true,\n      visibleDragbar = typeof props.visiableDragbar === 'boolean' ? props.visiableDragbar : true,\n      highlightEnable = true,\n      preview: previewType = 'live',\n      fullscreen = false,\n      overflow = true,\n      previewOptions = {},\n      textareaProps,\n      maxHeight = 1200,\n      minHeight = 100,\n      autoFocus,\n      tabSize = 2,\n      defaultTabEnable = false,\n      onChange,\n      onStatistics,\n      onHeightChange,\n      hideToolbar,\n      toolbarBottom = false,\n      components,\n      renderTextarea\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  var cmds = commands.map(item => commandsFilter ? commandsFilter(item, false) : item).filter(Boolean);\n  var extraCmds = extraCommands.map(item => commandsFilter ? commandsFilter(item, true) : item).filter(Boolean);\n  var [state, dispatch] = useReducer(reducer, {\n    markdown: propsValue,\n    preview: previewType,\n    components,\n    height,\n    minHeight,\n    highlightEnable,\n    tabSize,\n    defaultTabEnable,\n    scrollTop: 0,\n    scrollTopPreview: 0,\n    commands: cmds,\n    extraCommands: extraCmds,\n    fullscreen,\n    barPopup: {}\n  });\n  var container = useRef(null);\n  var previewRef = useRef(null);\n  var enableScrollRef = useRef(enableScroll);\n  useImperativeHandle(ref, () => _extends({}, state, {\n    container: container.current,\n    dispatch\n  }));\n  useMemo(() => enableScrollRef.current = enableScroll, [enableScroll]);\n  useEffect(() => {\n    var stateInit = {};\n    if (container.current) {\n      stateInit.container = container.current || undefined;\n    }\n    stateInit.markdown = propsValue || '';\n    stateInit.barPopup = {};\n    if (dispatch) {\n      dispatch(_extends({}, state, stateInit));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var cls = [className, 'wmde-markdown-var', direction ? prefixCls + \"-\" + direction : null, prefixCls, state.preview ? prefixCls + \"-show-\" + state.preview : null, state.fullscreen ? prefixCls + \"-fullscreen\" : null].filter(Boolean).join(' ').trim();\n  useMemo(() => propsValue !== state.markdown && dispatch({\n    markdown: propsValue || ''\n  }), [propsValue, state.markdown]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => previewType !== state.preview && dispatch({\n    preview: previewType\n  }), [previewType]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => tabSize !== state.tabSize && dispatch({\n    tabSize\n  }), [tabSize]);\n  useMemo(() => highlightEnable !== state.highlightEnable && dispatch({\n    highlightEnable\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [highlightEnable]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => autoFocus !== state.autoFocus && dispatch({\n    autoFocus: autoFocus\n  }), [autoFocus]);\n  useMemo(() => fullscreen !== state.fullscreen && dispatch({\n    fullscreen: fullscreen\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [fullscreen]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => height !== state.height && dispatch({\n    height: height\n  }), [height]);\n  useMemo(() => height !== state.height && onHeightChange && onHeightChange(state.height, height, state), [height, onHeightChange, state]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => commands !== state.commands && dispatch({\n    commands: cmds\n  }), [props.commands]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemo(() => extraCommands !== state.extraCommands && dispatch({\n    extraCommands: extraCmds\n  }), [props.extraCommands]);\n  var textareaDomRef = useRef();\n  var active = useRef('preview');\n  var initScroll = useRef(false);\n  useMemo(() => {\n    textareaDomRef.current = state.textareaWarp;\n    if (state.textareaWarp) {\n      state.textareaWarp.addEventListener('mouseover', () => {\n        active.current = 'text';\n      });\n      state.textareaWarp.addEventListener('mouseleave', () => {\n        active.current = 'preview';\n      });\n    }\n  }, [state.textareaWarp]);\n  var handleScroll = (e, type) => {\n    if (!enableScrollRef.current) return;\n    var textareaDom = textareaDomRef.current;\n    var previewDom = previewRef.current ? previewRef.current : undefined;\n    if (!initScroll.current) {\n      active.current = type;\n      initScroll.current = true;\n    }\n    if (textareaDom && previewDom) {\n      var scale = (textareaDom.scrollHeight - textareaDom.offsetHeight) / (previewDom.scrollHeight - previewDom.offsetHeight);\n      if (e.target === textareaDom && active.current === 'text') {\n        previewDom.scrollTop = textareaDom.scrollTop / scale;\n      }\n      if (e.target === previewDom && active.current === 'preview') {\n        textareaDom.scrollTop = previewDom.scrollTop * scale;\n      }\n      var scrollTop = 0;\n      if (active.current === 'text') {\n        scrollTop = textareaDom.scrollTop || 0;\n      } else if (active.current === 'preview') {\n        scrollTop = previewDom.scrollTop || 0;\n      }\n      dispatch({\n        scrollTop\n      });\n    }\n  };\n  var previewClassName = prefixCls + \"-preview \" + (previewOptions.className || '');\n  var handlePreviewScroll = e => handleScroll(e, 'preview');\n  var mdPreview = useMemo(() => /*#__PURE__*/_jsx(\"div\", {\n    ref: previewRef,\n    className: previewClassName,\n    children: /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, previewOptions, {\n      onScroll: handlePreviewScroll,\n      source: state.markdown || ''\n    }))\n  }), [previewClassName, previewOptions, state.markdown]);\n  var preview = (components == null ? void 0 : components.preview) && (components == null ? void 0 : components.preview(state.markdown || '', state, dispatch));\n  if (preview && /*#__PURE__*/React.isValidElement(preview)) {\n    mdPreview = /*#__PURE__*/_jsx(\"div\", {\n      className: previewClassName,\n      ref: previewRef,\n      onScroll: handlePreviewScroll,\n      children: preview\n    });\n  }\n  var containerStyle = _extends({}, other.style, {\n    height: state.height || '100%'\n  });\n  var containerClick = () => dispatch({\n    barPopup: _extends({}, setGroupPopFalse(state.barPopup))\n  });\n  var dragBarChange = newHeight => dispatch({\n    height: newHeight\n  });\n  var changeHandle = evn => {\n    onChange && onChange(evn.target.value, evn, state);\n    if (textareaProps && textareaProps.onChange) {\n      textareaProps.onChange(evn);\n    }\n    if (state.textarea && state.textarea instanceof HTMLTextAreaElement && onStatistics) {\n      var obj = new TextAreaCommandOrchestrator(state.textarea);\n      var objState = obj.getState() || {};\n      onStatistics(_extends({}, objState, {\n        lineCount: evn.target.value.split('\\n').length,\n        length: evn.target.value.length\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsx(EditorContext.Provider, {\n    value: _extends({}, state, {\n      dispatch\n    }),\n    children: /*#__PURE__*/_jsxs(\"div\", _extends({\n      ref: container,\n      className: cls\n    }, other, {\n      onClick: containerClick,\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsx(ToolbarVisibility, {\n        hideToolbar: hideToolbar,\n        toolbarBottom: toolbarBottom,\n        prefixCls: prefixCls,\n        overflow: overflow,\n        placement: \"top\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: prefixCls + \"-content\",\n        children: [/(edit|live)/.test(state.preview || '') && /*#__PURE__*/_jsx(TextArea, _extends({\n          className: prefixCls + \"-input\",\n          prefixCls: prefixCls,\n          autoFocus: autoFocus\n        }, textareaProps, {\n          onChange: changeHandle,\n          renderTextarea: (components == null ? void 0 : components.textarea) || renderTextarea,\n          onScroll: e => handleScroll(e, 'text')\n        })), /(live|preview)/.test(state.preview || '') && mdPreview]\n      }), visibleDragbar && !state.fullscreen && /*#__PURE__*/_jsx(DragBar, {\n        prefixCls: prefixCls,\n        height: state.height,\n        maxHeight: maxHeight,\n        minHeight: minHeight,\n        onChange: dragBarChange\n      }), /*#__PURE__*/_jsx(ToolbarVisibility, {\n        hideToolbar: hideToolbar,\n        toolbarBottom: toolbarBottom,\n        prefixCls: prefixCls,\n        overflow: overflow,\n        placement: \"bottom\"\n      })]\n    }))\n  });\n});\nvar Editor = InternalMDEditor;\nEditor.Markdown = MarkdownPreview;\nexport default Editor;","import MDEditor from \"./Editor.js\";\nimport * as commands from \"./commands/index.js\";\nimport * as MarkdownUtil from \"./utils/markdownUtils.js\";\nimport \"./index.css\";\nexport * from \"./commands/index.js\";\nexport * from \"./commands/group.js\";\nexport * from \"./utils/markdownUtils.js\";\nexport * from \"./utils/InsertTextAtPosition.js\";\nexport * from \"./Editor.js\";\nexport * from \"./Context.js\";\nexport * from \"./Types.js\";\nexport { MarkdownUtil, commands };\nexport default MDEditor;"],"names":["defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","WeakMap","core","value","options","replace","subset","cached","get","groups","index","length","push","RegExp","join","charactersToExpression","set","charactersToExpressionCached","basic","escapeOnly","pair","all","format","charCodeAt","character","hexadecimalRegex","decimalRegex","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","own","hasOwnProperty","characters","key","call","notAlphanumericRegex","formatSmart","code","next","named","numeric","omit","toString","toUpperCase","test","String","fromCharCode","toHexadecimal","omitOptionalSemicolons","useNamedReferences","useShortestReferences","attribute","name","characterEntitiesLegacy","includes","toNamed","decimal","toDecimal","stringifyEntities","Object","assign","reducer","state","action","_extends","EditorContext","React","markdown","Child","props","prefixCls","groupName","commands","children","barPopup","useContext","useMemo","_jsx","className","onClick","e","stopPropagation","Array","isArray","Toolbar","isChild","ToolbarItems","overflow","fullscreen","preview","components","commandOrchestrator","dispatch","originalOverflow","useRef","handleClick","command","keyCommand","forEach","item","parent","keys","keyName","executeCommand","useEffect","document","body","style","current","window","getComputedStyle","map","idx","liProps","Fragment","activeBtn","childNode","getState","textApi","undefined","close","execute","disabled","render","toolbar","com","_jsxs","buttonProps","icon","type","evn","extraCommands","ToolbarVisibility","hideToolbar","toolbarBottom","placement","cls","getCommands","data","resulte","shortcuts","toLocaleLowerCase","shortcutsHandle","altKey","shiftKey","metaKey","ctrlKey","split","every","v","preventDefault","search","createH","schema","defaultTagName","caseSensitive","adjust","values","result","Map","toLowerCase","createAdjustMap","selector","properties","node","_len","arguments","_key","child","unshift","previous","tagName","start","lastIndex","match","exec","subvalue","slice","id","parseSelector","lower","adjusted","record","list","entries","addProperty","addChild","content","info","find","Number","isNaN","spaceSeparated","parseSpaces","commaSeparated","parseCommas","commaOrSpaceSeparated","parsePrimitive","property","styles","finalResult","concat","nodes","Error","number","boolean","overloadedBoolean","normalize","h","html","s","svg","from","cr","indexOf","lf","proto","prototype","one","nodeName","reference","patch","quirksMode","mode","childNodes","file","location","loc","indices","toOffset","point","line","column","eol","end","offset","toPoint","assert","position","namespaceURI","webNamespaces","attrs","prefix","x","space","pos","sourceCodeLocation","startTag","endTag","element","results","to","createLocation","tail","verbose","opening","closing","startLine","startCol","startOffset","endLine","endCol","endOffset","UNDEFINED_CODE_POINTS","Set","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","has","ERR","Preprocessor","constructor","handler","this","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","cpOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","$","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","htmlDecodeTree","Uint16Array","c","decodeMap","_a","fromCodePoint","replaceCodePoint","codePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","input","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","base","digitCount","Math","pow","parseInt","substr","startIndex","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","nodeIndex","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midValue","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","DIGIT_0","DIGIT_9","isAsciiDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","error","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","getErrorForNumericCharacterReference","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","tn","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","parentNode","createCommentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","text","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","ns","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","doctype","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","_ref","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","rawTextStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","codePointAt","getEscaper","regex","parseFragment","reason","description","url","dashToCamelRe","formatCRe","formatXRe","fatalities","emptyOptions","fromHtml","settings","onerror","VFile","parseFunction","p5Document","dashToCamel","camelcase","setting","config","level","message","VFileMessage","place","ruleId","source","path","fatal","note","_","$1","$2","visualizeCharacter","charAt","charCode","tree","fromParse5","$0","htmlVoidElements","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","siblingAfter","siblingBefore","emptyChildren","increment","includeWhitespace","whitespace","omission","handlers","caption","headOrColgroupOrCaption","colgroup","dd","dt","Boolean","head","li","optgroup","option","rp","rubyElement","rt","tbody","td","cells","tfoot","th","thead","tr","seen","add","constants","unquoted","single","double","serializeAttribute","allowParseErrors","y","allowDangerousCharacters","quote","characterReferences","commas","spaces","padLeft","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","ccount","alternative","textEntitySubset","handle","zwitch","invalid","unknown","node_","comment","_1","_2","bogusComments","_3","upperDoctype","tightDoctype","omitOptionalTags","closeEmptyElements","voids","parts","last","attributes","tightAttributes","serializeAttributes","closeSelfClosing","tightSelfClosing","raw","allowDangerousHtml","root","emptyCharacterReferences","isPlainObject","getPrototypeOf","Symbol","toStringTag","iterator","CallableInstance","apply","setPrototypeOf","Processor","super","Compiler","attachers","compiler","freezeIndex","frozen","transformers","trough","destination","attacher","use","extend","assertUnfrozen","freeze","self","transformer","POSITIVE_INFINITY","realFile","vfile","assertParser","process","done","assertCompiler","executor","Promise","resolve","reject","parseTree","realDone","run","compileTree","compileResult","stringify","isUint8Array","processSync","complete","bail","assertDone","assertNode","outputTree","resultingTree","runSync","parameters","addPlugin","TypeError","addList","addPreset","plugin","plugins","primary","rest","currentPrimary","isPlainObj","asyncName","looksLikeAVFile","rehype","unified","emitParseErrors","messages","options_","toHtml","filter","is","convert","cascadeRaw","cascade","preorder","childIndex","_templateObject","browserSupportsTextareaTextNodes","o","r","registered","defaultLanguage","a","f","meta","metastring","m","d","t","u","n","g","highlight","ignoreMissing","reduce","l","b","trim","w","lines","N","showLineNumbers","L","Markdown","highlightEnable","preRef","textareaPre","ref","mdStr","_taggedTemplateLiteralLoose","rehypePrism","dangerouslySetInnerHTML","__html","canManipulateViaTextNodes","textarea","firstChild","insertTextAtPosition","focus","selection","ieRange","createRange","collapse","select","execCommand","selectionStart","selectionEnd","setRangeText","range","startNode","endNode","nodeLength","nodeValue","setStart","setEnd","nextSibling","deleteContents","commonAncestorContainer","insertNode","setSelectionRange","createEvent","initEvent","dispatchEvent","selectWord","suffix","isWordDelimiter","_i","getSurroundingWord","selectedTextContext","endsWith","selectLine","_ref2","getBreaksNeededForEmptyLineBefore","startPosition","neededBreaks","isInFirstLine","getBreaksNeededForEmptyLineAfter","isInLastLine","_ref3","api","selectedText","replaceSelection","insertBeforeEachLine","insertionLength","modifiedText","insertionResult","bold","title","role","width","height","viewBox","fill","newSelectionRange","state1","codeBlock","newSelectionRange2","state2","fillRule","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","divider","executeCommandState","textArea","group","arr","_objectDestructuringEmpty","hr","transform","italic","link","makeList","breaksBeforeCount","breaksBefore","breaksAfterCount","breaksAfter","_selectionStart","_selectionEnd","unorderedListCommand","orderedListCommand","checkedListCommand","codePreview","codeEdit","codeLive","strikethrough","title1","fontSize","textAlign","titleExecute","title2","title3","title4","title5","title6","table","help","open","getExtraCommands","getStateFromTextArea","_textArea$value","TextAreaTextApi","TextAreaCommandOrchestrator","handleLineMove","direction","blockText","prevLineSelection","prevLineText","nextLineSelection","nextLineText","_excluded","_excluded2","Textarea","onChange","_onChange","other","_objectWithoutPropertiesLoose","_useContext","tabSize","defaultTabEnable","textRef","executeRef","statesRef","onKeyDown","valArr","currentLineStr","_star","_end","modifiedTextLine","oldSelectText","newStarNum","startTabSize","endTabSize","keyCode","startStr","savedSelection","textToDuplicate","handleKeyDown","addEventListener","removeEventListener","autoComplete","autoCorrect","autoCapitalize","spellCheck","TextArea","onScroll","renderTextarea","otherProps","scrollTop","minHeight","warp","textareaWarp","textStyle","WebkitTextFillColor","$dom","dragRef","heightRef","handleMouseMove","event","_changedTouches$","clientY","changedTouches","newHeight","dragY","maxHeight","handleMouseUp","_$dom$current","_$dom$current2","handleMouseDown","_changedTouches$2","_$dom$current3","_$dom$current4","passive","_$dom$current5","_$dom$current6","_$dom$current7","InternalMDEditor","propsValue","commandsFilter","enableScroll","visibleDragbar","visiableDragbar","previewType","previewOptions","textareaProps","autoFocus","onStatistics","onHeightChange","cmds","extraCmds","useReducer","scrollTopPreview","container","previewRef","enableScrollRef","useImperativeHandle","stateInit","textareaDomRef","initScroll","handleScroll","textareaDom","previewDom","scale","scrollHeight","offsetHeight","previewClassName","handlePreviewScroll","mdPreview","MarkdownPreview","containerStyle","Provider","containerClick","keyname","HTMLTextAreaElement","objState","lineCount","DragBar","Editor"],"sourceRoot":""}