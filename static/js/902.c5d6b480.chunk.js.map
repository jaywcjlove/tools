{"version":3,"file":"static/js/902.c5d6b480.chunk.js","mappings":"wMAyBe,SAASA,EAAUC,GAChC,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,YAA9B,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAgCJ,EAAAA,EAAAA,YAAhC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,YAA1B,eAAOO,EAAP,KAAcC,EAAd,KACMC,EAAc,SAACC,EAAkBC,QAAyB,IAA3CD,IAAAA,EAAc,IACjC,IACe,QAATC,GACFH,EAAS,OACTN,EAASQ,GACTN,GAAWQ,EAAAA,EAAAA,IAAUC,KAAKC,MAAMJ,MACd,SAATC,IACTH,EAAS,QACTJ,EAAWM,GACXR,EAASW,KAAKD,WAAUE,EAAAA,EAAAA,IAAMJ,GAAM,KAAM,KAE5CJ,EAAY,IACZ,MAAOS,GACHA,aAAiBC,OACnBV,EAAYS,EAAME,WAIxB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAD,CAAAC,SAAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CACEC,MAAM,OACNC,OACEN,EAAAA,EAAAA,MAACO,EAAAA,SAAD,CAAAL,SAAAA,CACGnB,IAASoB,EAAAA,EAAAA,KAACK,EAAAA,GAAD,CAAYzB,MAAOA,KAC7BoB,EAAAA,EAAAA,KAACM,EAAAA,GAAD,CAAQC,QAAS,kBAAMnB,EAjDhB,kOAiDwC,QAA/CW,SAAAA,cALNA,UASEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAD,CACEC,YAAY,EACZ7B,MAAOA,EACPc,QAASV,GAAsB,QAAVE,EACrBwB,QAAUC,SAAAA,GAAD,OAASvB,EAAauB,EAAIC,OAA+BhC,MAAO,aAG7EoB,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CACEC,MAAO,OACPC,OACEN,EAAAA,EAAAA,MAACO,EAAAA,SAAD,CAAAL,SAAAA,CACGjB,IAAWkB,EAAAA,EAAAA,KAACK,EAAAA,GAAD,CAAYzB,MAAOE,KAC/BkB,EAAAA,EAAAA,KAACM,EAAAA,GAAD,CAAQC,QAAS,kBAAMnB,EAtDhB,kKAsDwC,SAA/CW,SAAAA,cALNA,UASEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAD,CACEC,YAAY,EACZ7B,MAAOE,EACPY,QAASV,GAAsB,SAAVE,EACrBwB,QAAUC,SAAAA,GAAD,OAASvB,EAAauB,EAAIC,OAA+BhC,MAAO","sources":["../../packages/json-yaml/src/index.tsx"],"sourcesContent":["import { Fragment, useState } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton, Button } from '@wcj/tools-react-components';\nimport { parse, stringify } from 'yaml';\n\nexport interface URLEncodeProps {}\n\nconst sampleJSON = `{\n  \"YAML\": [\n    \"A human-readable data serialization language\",\n    \"https://en.wikipedia.org/wiki/YAML\"\n  ],\n  \"yaml\": [\n    \"A complete JavaScript implementation\",\n    \"https://www.npmjs.com/package/yaml\"\n  ]\n}`;\n\nconst sampleYAML = `%YAML 1.2\n---\nYAML: YAML Ain't Markup Languageâ„¢\n\nWhat It Is:\n  YAML is a human-friendly data serialization\n  language for all programming languages.`;\n\nexport default function URLEncode(props: URLEncodeProps) {\n  const [value, setValue] = useState<string>();\n  const [yamlStr, setYamlStr] = useState<string>();\n  const [errorStr, setErrorStr] = useState<string>();\n  const [etype, setEtype] = useState<'raw' | 'yaml'>();\n  const handleInput = (val: string = '', type: 'raw' | 'yaml') => {\n    try {\n      if (type === 'raw') {\n        setEtype('raw');\n        setValue(val);\n        setYamlStr(stringify(JSON.parse(val)));\n      } else if (type === 'yaml') {\n        setEtype('yaml');\n        setYamlStr(val);\n        setValue(JSON.stringify(parse(val), null, 2));\n      }\n      setErrorStr('');\n    } catch (error) {\n      if (error instanceof Error) {\n        setErrorStr(error.message);\n      }\n    }\n  };\n  return (\n    <Wrapper>\n      <StyledLayout\n        title=\"JSON\"\n        extra={\n          <Fragment>\n            {value && <CopyButton value={value} />}\n            <Button onClick={() => handleInput(sampleJSON, 'raw')}>Sample</Button>\n          </Fragment>\n        }\n      >\n        <Textarea\n          spellCheck={false}\n          value={value}\n          error={!!errorStr && etype === 'raw'}\n          onInput={(evn) => handleInput((evn.target as HTMLTextAreaElement).value, 'raw')}\n        />\n      </StyledLayout>\n      <StyledLayout\n        title={'YAML'}\n        extra={\n          <Fragment>\n            {yamlStr && <CopyButton value={yamlStr} />}\n            <Button onClick={() => handleInput(sampleYAML, 'yaml')}>Sample</Button>\n          </Fragment>\n        }\n      >\n        <Textarea\n          spellCheck={false}\n          value={yamlStr}\n          error={!!errorStr && etype === 'yaml'}\n          onInput={(evn) => handleInput((evn.target as HTMLTextAreaElement).value, 'yaml')}\n        />\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["URLEncode","props","useState","value","setValue","yamlStr","setYamlStr","errorStr","setErrorStr","etype","setEtype","handleInput","val","type","stringify","JSON","parse","error","Error","message","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","CopyButton","Button","onClick","Textarea","spellCheck","onInput","evn","target"],"sourceRoot":""}