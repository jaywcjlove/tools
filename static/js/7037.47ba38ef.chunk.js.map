{"version":3,"file":"static/js/7037.47ba38ef.chunk.js","mappings":"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","sources":["../../packages/text-case/esm/utils.js","../../packages/text-case/esm/index.js"],"sourcesContent":["export var toCamelCase = function toCamelCase(str) {\n  var _str$match;\n  if (str === void 0) {\n    str = '';\n  }\n  var s = ((_str$match = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) == null ? void 0 : _str$match.map(x => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase()).join('')) || '';\n  return s.slice(0, 1).toLowerCase() + s.slice(1);\n};\nexport var toSnakeCase = function toSnakeCase(str) {\n  var _str$match2;\n  if (str === void 0) {\n    str = '';\n  }\n  return (_str$match2 = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) == null ? void 0 : _str$match2.map(x => x.toLowerCase()).join('_');\n};\nexport var toKebabCase = function toKebabCase(str) {\n  var _str$match3;\n  if (str === void 0) {\n    str = '';\n  }\n  return (_str$match3 = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) == null ? void 0 : _str$match3.map(x => x.toLowerCase()).join('-');\n};\nexport var toTitleCase = function toTitleCase(str) {\n  var _str$match4;\n  if (str === void 0) {\n    str = '';\n  }\n  return (_str$match4 = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) == null ? void 0 : _str$match4.map(x => x.charAt(0).toUpperCase() + x.slice(1)).join(' ');\n};\nexport var toPascalCase = function toPascalCase(str) {\n  var _str$match5;\n  if (str === void 0) {\n    str = '';\n  }\n  return (_str$match5 = str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)) == null ? void 0 : _str$match5.map(x => x.charAt(0).toUpperCase() + x.slice(1).toLowerCase()).join('');\n};\nexport var swapCase = function swapCase(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return [...str].map(c => c === c.toLowerCase() ? c.toUpperCase() : c.toLowerCase()).join('');\n};\nexport var toPathCase = function toPathCase(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return str.replace(/\\s/g, '/');\n};\nexport var toUpperCase = function toUpperCase(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return str.toLocaleUpperCase();\n};\nexport var toLowerCase = function toLowerCase(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return str.toLocaleLowerCase();\n};\nexport var toDotCase = function toDotCase(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return str.replace(/(-|_|\\s|\\+|\\/)+/g, '.');\n};","import { Fragment, useState } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton, ResultCode, Button } from '@wcj/tools-react-components';\nimport { toCamelCase, toPascalCase, toSnakeCase, toKebabCase, toTitleCase, toUpperCase, toDotCase, toLowerCase, toPathCase, swapCase } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport * from './utils';\nvar sample = \"Hello World!\\nCamel Case\";\nfunction handle(fun, value) {\n  if (value === void 0) {\n    value = '';\n  }\n  return value.split('\\n').filter(Boolean).map(str => fun(str)).join('\\n');\n}\nexport default function TextCase() {\n  var [value, setValue] = useState();\n  var camelCase = handle(toCamelCase, value);\n  var pascalCase = handle(toPascalCase, value);\n  var snakeCase = handle(toSnakeCase, value);\n  var kebabCase = handle(toKebabCase, value);\n  var titleCase = handle(toTitleCase, value);\n  var swapCaseStr = handle(swapCase, value);\n  var pathCase = handle(toPathCase, value);\n  var upperCase = handle(toUpperCase, value);\n  var lowerCase = handle(toLowerCase, value);\n  var dotCase = handle(toDotCase, value);\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsx(StyledLayout, {\n      title: \"Input\",\n      extra: /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: () => setValue(sample),\n          children: \"Sample\"\n        }), value && /*#__PURE__*/_jsx(CopyButton, {\n          value: value\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(Textarea, {\n        spellCheck: false,\n        value: value,\n        onInput: evn => setValue(evn.target.value)\n      })\n    }), /*#__PURE__*/_jsx(StyledLayout, {\n      title: \"Result\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsx(ResultCode, {\n          title: \"Camel Case\",\n          extra: camelCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: camelCase\n          }),\n          children: camelCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Pascal Case\",\n          extra: pascalCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: pascalCase\n          }),\n          children: pascalCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Snake Case\",\n          extra: snakeCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: snakeCase\n          }),\n          children: snakeCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Kebab Case\",\n          extra: kebabCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: kebabCase\n          }),\n          children: kebabCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Title Case\",\n          extra: titleCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: titleCase\n          }),\n          children: titleCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Swap Case\",\n          extra: swapCaseStr && /*#__PURE__*/_jsx(CopyButton, {\n            value: swapCaseStr\n          }),\n          children: swapCaseStr\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Path Case\",\n          extra: pathCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: pathCase\n          }),\n          children: pathCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Upper Case\",\n          extra: upperCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: upperCase\n          }),\n          children: upperCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Lower Case\",\n          extra: lowerCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: lowerCase\n          }),\n          children: lowerCase\n        }), /*#__PURE__*/_jsx(ResultCode, {\n          title: \"Dot Case\",\n          extra: dotCase && /*#__PURE__*/_jsx(CopyButton, {\n            value: dotCase\n          }),\n          children: dotCase\n        })]\n      })\n    })]\n  });\n}"],"names":["toCamelCase","str","_str$match","s","match","map","x","slice","toUpperCase","toLowerCase","join","toSnakeCase","_str$match2","toKebabCase","_str$match3","toTitleCase","_str$match4","charAt","toPascalCase","_str$match5","swapCase","_toConsumableArray","c","toPathCase","replace","toLocaleUpperCase","toLocaleLowerCase","toDotCase","sample","handle","fun","value","split","filter","Boolean","TextCase","_useState","useState","_useState2","_slicedToArray","setValue","camelCase","pascalCase","snakeCase","kebabCase","titleCase","swapCaseStr","pathCase","upperCase","lowerCase","dotCase","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","Button","onClick","CopyButton","Textarea","spellCheck","onInput","evn","target","style","height","ResultCode"],"sourceRoot":""}