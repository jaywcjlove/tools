{"version":3,"file":"static/js/5327.0c770d49.chunk.js","mappings":"oPAEaA,GAAWC,EAAAA,EAAAA,OAAmC,YAAkB,IAAfC,EAAe,EAAfA,SAC5D,OACEC,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,QAAQ,YAAbF,UACEG,EAAAA,EAAAA,MAAAA,IAAAA,CAAGC,KAAK,OAAOC,SAAS,UAAxBL,SAAAA,EACEC,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,GAAG,KAAKC,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAAKC,OAAO,4BAA4BC,cAAc,YACzFV,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,GAAG,IACHC,GAAG,KACHC,GAAG,OACHC,GAAG,OACHC,OAAO,4BACPC,cAAc,SACdC,UAAU,wBAEZX,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,OAAO,4BACPG,gBAAgB,MAChBF,cAAc,SACdC,UAAU,8BAEZX,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,GAAG,QACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,OAAO,4BACPG,gBAAgB,MAChBF,cAAc,SACdC,UAAU,8BAEZX,EAAAA,EAAAA,KAAAA,OAAAA,CAAMa,MAAM,KAAKC,OAAO,KAAKC,EAAE,KAAKC,EAAE,KAAKP,OAAO,4BAA4BQ,GAAG,OACjFjB,EAAAA,EAAAA,KAAAA,OAAAA,CACEkB,WAAW,0HACXC,SAAS,KACTC,cAAc,eACdjB,KAAK,eAJPJ,UAMEG,EAAAA,EAAAA,MAAAA,QAAAA,CAAOa,EAAE,aAAaC,EAAE,KAAxBjB,SAAAA,CACGA,EAAU,iBCrCjBsB,EAAcC,EAAAA,GAAAA,IAAHC,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,iEAMXC,EAAYF,EAAAA,GAAAA,IAAHG,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,0CAKTC,GAAO5B,EAAAA,EAAAA,OAAmC,YAAkB,IAAfC,EAAe,EAAfA,SACjD,OACEC,EAAAA,EAAAA,KAACqB,EAAD,CAAAtB,UACEC,EAAAA,EAAAA,KAACwB,EAAD,CAAAzB,SAAYA,SAKH,SAAS4B,IACtB,IAAQC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,8BAA+B,WAArDD,EAER,OACE5B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAD,CAAA/B,UACEC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAD,CAAcC,SAAS,UAAUC,MAAOL,EAAE,+CAAgD,IAA1F7B,UACEC,EAAAA,EAAAA,KAACkC,EAAAA,GAAD,CAASC,MAAO,CAAEC,WAAY,GAAIC,SAAU,OAAQC,cAAe,OAAnEvC,SACGwC,OAAOC,KAAKC,KAAYC,KAAI,SAACC,EAASC,GACrC,OACE5C,EAAAA,EAAAA,KAAC0B,EAAD,CAAA3B,UACEC,EAAAA,EAAAA,KAACH,EAAD,CAAAE,SAAW4C,KADFC","sources":["../../packages/standard-chinese-characters/src/Icon.tsx","../../packages/standard-chinese-characters/src/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\nexport const HansIcon = memo<React.PropsWithChildren<any>>(({ children }) => {\n  return (\n    <svg viewBox=\"0 0 46 46\">\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <line x1=\".5\" x2=\"45.5\" y1=\"23\" y2=\"23\" stroke=\"var(--color-border-muted)\" strokeLinecap=\"square\" />\n        <line\n          x1=\"1\"\n          x2=\"45\"\n          y1=\"23.5\"\n          y2=\"23.5\"\n          stroke=\"var(--color-border-muted)\"\n          strokeLinecap=\"square\"\n          transform=\"rotate(90 23 23.5)\"\n        />\n        <line\n          x1=\"-7.712\"\n          x2=\"53.099\"\n          y1=\"22.883\"\n          y2=\"22.883\"\n          stroke=\"var(--color-border-muted)\"\n          strokeDasharray=\"2 4\"\n          strokeLinecap=\"square\"\n          transform=\"rotate(45 22.705 23.311)\"\n        />\n        <line\n          x1=\"-7.88\"\n          x2=\"52.922\"\n          y1=\"22.835\"\n          y2=\"21.774\"\n          stroke=\"var(--color-border-muted)\"\n          strokeDasharray=\"2 4\"\n          strokeLinecap=\"square\"\n          transform=\"rotate(136 22.62 22.749)\"\n        />\n        <rect width=\"45\" height=\"45\" x=\".5\" y=\".5\" stroke=\"var(--color-border-muted)\" rx=\"3\" />\n        <text\n          fontFamily=\"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif\"\n          fontSize=\"23\"\n          letterSpacing=\"-0.828571429\"\n          fill=\"currentColor\"\n        >\n          <tspan x=\"11.9142857\" y=\"31\">\n            {children}{' '}\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  );\n});\n","import { memo } from 'react';\nimport { Wrapper, StyledLayout, Spacing } from '@wcj/tools-react-components';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport characters from 'togscc';\nimport { HansIcon } from './Icon';\n\nconst HansWarpper = styled.div`\n  width: 42px;\n  height: 42px;\n  border-radius: 2px;\n`;\n\nconst HansInner = styled.div`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Hans = memo<React.PropsWithChildren<any>>(({ children }) => {\n  return (\n    <HansWarpper>\n      <HansInner>{children}</HansInner>\n    </HansWarpper>\n  );\n});\n\nexport default function AmountInRMB() {\n  const { t } = useTranslation(['standard-chinese-characters', 'common']);\n\n  return (\n    <Wrapper>\n      <StyledLayout overflow=\"initial\" title={t('Table of General Standard Chinese Characters', {})}>\n        <Spacing style={{ paddingTop: 10, flexWrap: 'wrap', flexDirection: 'row' }}>\n          {Object.keys(characters).map((keyname, idx) => {\n            return (\n              <Hans key={idx}>\n                <HansIcon>{keyname}</HansIcon>\n              </Hans>\n            );\n          })}\n        </Spacing>\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["HansIcon","memo","children","_jsx","viewBox","_jsxs","fill","fillRule","x1","x2","y1","y2","stroke","strokeLinecap","transform","strokeDasharray","width","height","x","y","rx","fontFamily","fontSize","letterSpacing","HansWarpper","styled","_templateObject","HansInner","_templateObject2","Hans","AmountInRMB","t","useTranslation","Wrapper","StyledLayout","overflow","title","Spacing","style","paddingTop","flexWrap","flexDirection","Object","keys","characters","map","keyname","idx"],"sourceRoot":""}