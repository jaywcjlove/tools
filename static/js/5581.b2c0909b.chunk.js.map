{"version":3,"file":"static/js/5581.b2c0909b.chunk.js","mappings":"8OAAWA,EAAM,ikB,WCQF,SAASC,IACtB,IAAIC,GAASC,EAAAA,EAAAA,QAAO,MACpBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACpBG,GAA8BT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAApCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAiC1B,OAAoBG,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CACjCC,SAAU,EAAcC,EAAAA,EAAAA,KAAKC,EAAAA,GAAc,CACzCC,MAAO,uBACPC,OAAoBN,EAAAA,EAAAA,MAAMO,EAAAA,SAAU,CAClCL,SAAU,CAACZ,IAAsBa,EAAAA,EAAAA,KAAKK,EAAAA,GAAQ,CAC5CC,QAAS,kBArCE,WACjB,IACEd,EAAS,IACTJ,EAASmB,IAAAA,OAAgBpB,EAAO,CAC9BqB,OAAQ,MACRb,SAAUA,EACVc,WAAY,IACZC,QAAS,CAACC,OAEd,CAAE,MAAOpB,GACHA,aAAiBqB,OACnBpB,EAASD,EAAMsB,QAEnB,CACF,CAuBuBC,EAAc,EAC7Bf,SAAU,WACRZ,IAAsBa,EAAAA,EAAAA,KAAKK,EAAAA,GAAQ,CACrCC,QAAS,kBAzBE,WACjB,IACEd,EAAS,IACT,IAAIuB,EAAMR,IAAAA,OAAgBpB,EAAO,CAC/BqB,OAAQ,MACRb,SAAU,EACVqB,SAAS,EACTP,WAAY,EACZC,QAAS,CAACC,OAEZvB,GAAU2B,GAAO,IAAIE,QAAQ,MAAO,IACtC,CAAE,MAAO1B,GACHA,aAAiBqB,OACnBpB,EAASD,EAAMsB,QAEnB,CACF,CASuBK,EAAc,EAC7BnB,SAAU,WACRZ,IAAsBU,EAAAA,EAAAA,MAAM,SAAU,CACxCsB,SAAU,SAAAC,GAAG,OAAIxB,EAAYyB,OAAOD,EAAIE,OAAOnC,OAAO,EACtDY,SAAU,EAAcC,EAAAA,EAAAA,KAAK,SAAU,CACrCb,MAAO,EACPY,SAAU,iBACKC,EAAAA,EAAAA,KAAK,SAAU,CAC9Bb,MAAO,EACPY,SAAU,iBACKC,EAAAA,EAAAA,KAAK,SAAU,CAC9Bb,MAAO,EACPY,SAAU,iBACKC,EAAAA,EAAAA,KAAK,SAAU,CAC9Bb,MAAO,EACPY,SAAU,mBAEVZ,IAAsBa,EAAAA,EAAAA,KAAKuB,EAAAA,GAAY,CACzCpC,MAAOA,IACLqC,IAA2BxB,EAAAA,EAAAA,KAAKK,EAAAA,GAAQ,CAC1CC,QAAS,WACP,IAAImB,EAAiBC,EACiB,OAArCD,EAAkB5C,EAAO8C,UAA6E,OAAhDD,EAAuBD,EAAgBG,OAAyBF,EAAqBG,QAC5IzC,EAASoC,EACX,EACAzB,SAAU,cAGdA,UAAuBC,EAAAA,EAAAA,KAAK8B,EAAAA,GAAY,CACtC3C,MAAOA,EACP4C,IAAKlD,EACLmD,OAAQ,qBACRC,WAAY,EAACtD,EAAAA,EAAAA,QACbwC,SAAU,SAAAhC,GACRC,EAASD,EACX,MAEAI,IAAsBS,EAAAA,EAAAA,KAAKkC,EAAAA,GAAa,CAC1CnC,SAAUR,MAGhB,C","sources":["../../packages/css-formatter/esm/sample.js","../../packages/css-formatter/esm/index.js"],"sourcesContent":["export var css = \"/*! @uiw/reset.css v1.0.4 | MIT (c) 2021  |  */\\narticle,aside,blockquote,body,dd,details,dl,dt,fieldset,figcaption,figure,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,html,iframe,legend,li,menu,nav,ol,p,pre,section,textarea,ul{padding:0;margin:0}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}ul{list-style:none}button,input,select{margin:0}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}embed,iframe,object,video{height:auto;max-width:100%}audio{max-width:100%}iframe{border:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0;text-align:left}\";\nexport var val = \"\";","import { Fragment, useRef, useState } from 'react';\nimport { StyledLayout, CopyButton, CodeEditor, Button, Wrapper, ErrorLayout } from '@wcj/tools-react-components';\nimport { css } from '@codemirror/lang-css';\nimport prettier from 'prettier';\nimport parserPostcss from 'prettier/parser-postcss';\nimport * as sample from './sample';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CSSFormatter() {\n  var editor = useRef(null);\n  var [value, setValue] = useState('');\n  var [error, setError] = useState('');\n  var [tabWidth, setTabWidth] = useState(2);\n  var handleFormat = () => {\n    try {\n      setError('');\n      setValue(prettier.format(value, {\n        parser: 'css',\n        tabWidth: tabWidth,\n        printWidth: 120,\n        plugins: [parserPostcss]\n      }));\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      }\n    }\n  };\n  var handleMinify = () => {\n    try {\n      setError('');\n      var val = prettier.format(value, {\n        parser: 'css',\n        tabWidth: 0,\n        useTabs: false,\n        printWidth: 0,\n        plugins: [parserPostcss]\n      });\n      setValue((val || '').replace(/\\n/g, ''));\n    } catch (error) {\n      if (error instanceof Error) {\n        setError(error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsx(StyledLayout, {\n      title: \"CSS Formatter/Minify\",\n      extra: /*#__PURE__*/_jsxs(Fragment, {\n        children: [value && /*#__PURE__*/_jsx(Button, {\n          onClick: () => handleFormat(),\n          children: \"Format\"\n        }), value && /*#__PURE__*/_jsx(Button, {\n          onClick: () => handleMinify(),\n          children: \"Minify\"\n        }), value && /*#__PURE__*/_jsxs(\"select\", {\n          onChange: evn => setTabWidth(Number(evn.target.value)),\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: 2,\n            children: \"2 Tab Space\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: 3,\n            children: \"3 Tab Space\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: 4,\n            children: \"4 Tab Space\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: 5,\n            children: \"5 Tab Space\"\n          })]\n        }), value && /*#__PURE__*/_jsx(CopyButton, {\n          value: value\n        }), sample.css && /*#__PURE__*/_jsx(Button, {\n          onClick: () => {\n            var _editor$current, _editor$current$view;\n            (_editor$current = editor.current) == null ? void 0 : (_editor$current$view = _editor$current.view) == null ? void 0 : _editor$current$view.focus();\n            setValue(sample.css);\n          },\n          children: \"Sample\"\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(CodeEditor, {\n        value: value,\n        ref: editor,\n        height: \"calc(100vh - 87px)\",\n        extensions: [css()],\n        onChange: value => {\n          setValue(value);\n        }\n      })\n    }), error && /*#__PURE__*/_jsx(ErrorLayout, {\n      children: error\n    })]\n  });\n}"],"names":["css","CSSFormatter","editor","useRef","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","error","setError","_useState5","_useState6","tabWidth","setTabWidth","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","Button","onClick","prettier","parser","printWidth","plugins","parserPostcss","Error","message","handleFormat","val","useTabs","replace","handleMinify","onChange","evn","Number","target","CopyButton","sample","_editor$current","_editor$current$view","current","view","focus","CodeEditor","ref","height","extensions","ErrorLayout"],"sourceRoot":""}