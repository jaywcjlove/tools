{"version":3,"file":"static/js/2310.465f942f.chunk.js","mappings":"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","sources":["../../node_modules/exifreader/src/dataview.js","../../node_modules/exifreader/src/utils.js","../../node_modules/exifreader/src/constants.js","../../node_modules/exifreader/src/tag-names-utils.js","../../node_modules/exifreader/src/byte-order.js","../../node_modules/exifreader/src/image-header-tiff.js","../../node_modules/exifreader/src/image-header-jpeg.js","../../node_modules/exifreader/src/image-header-png.js","../../node_modules/exifreader/src/image-header-heic.js","../../node_modules/exifreader/src/image-header-webp.js","../../node_modules/exifreader/src/image-header-gif.js","../../node_modules/exifreader/src/image-header.js","../../node_modules/exifreader/src/tag-names-common.js","../../node_modules/exifreader/src/tag-names-0th-ifd.js","../../node_modules/exifreader/src/tag-names-gps-ifd.js","../../node_modules/exifreader/src/tag-names-interoperability-ifd.js","../../node_modules/exifreader/src/tag-names-mpf-ifd.js","../../node_modules/exifreader/src/tag-names.js","../../node_modules/exifreader/src/tag-names-exif-ifd.js","../../node_modules/exifreader/src/types.js","../../node_modules/exifreader/src/tags-helpers.js","../../node_modules/exifreader/src/tags.js","../../node_modules/exifreader/src/mpf-tags.js","../../node_modules/exifreader/src/file-tags.js","../../node_modules/exifreader/src/jfif-tags.js","../../node_modules/exifreader/src/iptc-tag-names.js","../../node_modules/exifreader/src/text-decoder.js","../../node_modules/exifreader/src/tag-decoder.js","../../node_modules/exifreader/src/iptc-tags.js","../../node_modules/exifreader/src/xmp-tag-names.js","../../node_modules/exifreader/src/dom-parser.js","../../node_modules/exifreader/src/xmp-tags.js","../../node_modules/exifreader/src/photoshop-tag-names.js","../../node_modules/exifreader/src/photoshop-tags.js","../../node_modules/exifreader/src/icc-tag-names.js","../../node_modules/exifreader/src/icc-tags.js","../../node_modules/exifreader/src/png-file-tags.js","../../node_modules/exifreader/src/png-text-tags.js","../../node_modules/exifreader/src/png-tags.js","../../node_modules/exifreader/src/vp8x-tags.js","../../node_modules/exifreader/src/gif-file-tags.js","../../node_modules/exifreader/src/thumbnail.js","../../node_modules/exifreader/src/errors.js","../../node_modules/exifreader/src/exif-reader.js","../../node_modules/@lezer/json/dist/index.js","../../node_modules/@codemirror/lang-json/dist/index.js"],"sourcesContent":["export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport DataViewWrapper from './dataview.js';\n\nexport function getDataView(data, byteOffset, byteLength) {\n    try {\n        return new DataView(data, byteOffset, byteLength);\n    } catch (error) {\n        return new DataViewWrapper(data, byteOffset, byteLength);\n    }\n}\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getNullTerminatedStringFromDataView(dataView, offset) {\n    const chars = [];\n    let i = 0;\n    while (offset + i < dataView.byteLength) {\n        const char = dataView.getUint8(offset + i);\n        if (char === 0) {\n            break;\n        }\n        chars.push(char);\n        i++;\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    if (chars[chars.length - 1] === 0) {\n        chars.pop();\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getPascalStringFromDataView(dataView, offset) {\n    const size = dataView.getUint8(offset);\n    const string = getStringFromDataView(dataView, offset + 1, size);\n    return [size, string];\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n\nexport function padStart(string, length, character) {\n    const padding = strRepeat(character, length - string.length);\n    return padding + string;\n}\n\nexport function parseFloatRadix(string, radix) {\n    return parseInt(string.replace('.', ''), radix)\n        / Math.pow(radix, (string.split('.')[1] || '').length);\n}\n\nexport function strRepeat(string, num) {\n    return new Array(num + 1).join(string);\n}\n\nexport const COMPRESSION_METHOD_NONE = undefined;\nexport const COMPRESSION_METHOD_DEFLATE = 0;\n\nexport function decompress(dataView, compressionMethod, returnType = 'string') {\n    if (compressionMethod === COMPRESSION_METHOD_DEFLATE) {\n        if (typeof DecompressionStream === 'function') {\n            const decompressionStream = new DecompressionStream('deflate');\n            const decompressedStream = new Blob([dataView]).stream().pipeThrough(decompressionStream);\n            if (returnType === 'dataview') {\n                return new Response(decompressedStream).arrayBuffer().then((arrayBuffer) => new DataView(arrayBuffer));\n            }\n            return new Response(decompressedStream).text();\n        }\n    }\n    if (compressionMethod !== undefined) {\n        return Promise.reject(`Unknown compression method ${compressionMethod}.`);\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_PHOTOSHOP: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_WEBP: true,\n    USE_GIF: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP0_JFIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView, getNullTerminatedStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_ZTXT = 'zTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\nexport const TYPE_ICCP = 'iCCP';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView, async) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset, async)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_ICC && async && isPngIccpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkDataLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n            const iccHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n            const {profileName, compressionMethod, compressedProfileOffset} = parseIccHeader(dataView, iccHeaderOffset);\n            if (!offsets.iccChunks) {\n                offsets.iccChunks = [];\n            }\n            offsets.iccChunks.push({\n                offset: compressedProfileOffset,\n                length: chunkDataLength - (compressedProfileOffset - iccHeaderOffset),\n                chunkNumber: 1,\n                chunksTotal: 1,\n                profileName,\n                compressionMethod\n            });\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ITXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset, async) {\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === TYPE_TEXT || chunkType === TYPE_ITXT || (chunkType === TYPE_ZTXT && async);\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngIccpChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ICCP;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n\nfunction parseIccHeader(dataView, offset) {\n    const NULL_SEPARATOR_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    const profileName = getNullTerminatedStringFromDataView(dataView, offset);\n    offset += profileName.length + NULL_SEPARATOR_SIZE;\n\n    const compressionMethod = dataView.getUint8(offset);\n    offset += COMPRESSION_METHOD_SIZE;\n\n    return {\n        profileName,\n        compressionMethod,\n        compressedProfileOffset: offset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_ID = 'ftyp';\n    const HEIC_ID_OFFSET = 4;\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n    const HEIC_MAJOR_BRAND_LENGTH = 4;\n\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_ICC) {\n        const {offset: metaOffset, length: metaLength} = findMetaAtom(dataView);\n        if (metaOffset === undefined) {\n            return {hasAppMarkers: false};\n        }\n\n        const metaEndOffset = Math.min(metaOffset + metaLength, dataView.byteLength);\n        const {exifItemOffset, ilocOffset, colrOffset} = findMetaItems(dataView, metaOffset, metaEndOffset);\n\n        const exifOffset = findExifOffset(dataView, exifItemOffset, ilocOffset, metaEndOffset);\n        const iccChunks = findIccChunks(dataView, colrOffset, metaEndOffset);\n        return {\n            hasAppMarkers: (exifOffset !== undefined) || (iccChunks !== undefined),\n            tiffHeaderOffset: exifOffset,\n            iccChunks\n        };\n    }\n\n    return {hasAppMarkers: false};\n}\n\nfunction findMetaAtom(dataView) {\n    const ATOM_LENGTH_SIZE = 4;\n    const ATOM_TYPE_SIZE = 4;\n    const ATOM_MIN_LENGTH = 8;\n    const ATOM_TYPE_OFFSET = 4;\n\n    let offset = 0;\n\n    while (offset + ATOM_LENGTH_SIZE + ATOM_TYPE_SIZE <= dataView.byteLength) {\n        const atomLength = getAtomLength(dataView, offset);\n        if (atomLength >= ATOM_MIN_LENGTH) {\n            const atomType = getStringFromDataView(dataView, offset + ATOM_TYPE_OFFSET, ATOM_TYPE_SIZE);\n            if (atomType === 'meta') {\n                return {\n                    offset,\n                    length: atomLength\n                };\n            }\n        }\n\n        offset += atomLength;\n    }\n\n    return {\n        offset: undefined,\n        length: 0\n    };\n}\n\nfunction getAtomLength(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const atomLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(atomLength)) {\n        return dataView.byteLength - offset;\n    }\n    if (hasExtendedSize(atomLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_LOW_OFFSET);\n        }\n    }\n\n    return atomLength;\n}\n\nfunction extendsToEndOfFile(atomLength) {\n    return atomLength === 0;\n}\n\nfunction hasExtendedSize(atomLength) {\n    return atomLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_OFFSET) === 0;\n}\n\nfunction findMetaItems(dataView, offset, metaEndOffset) {\n    const STRING_SIZE = 4;\n    const ITEM_INDEX_REL_OFFSET = -4;\n    const offsets = {\n        ilocOffset: undefined,\n        exifItemOffset: undefined,\n        colrOffset: undefined\n    };\n\n    while ((offset + STRING_SIZE <= metaEndOffset)\n        && (!offsets.ilocOffset || !offsets.exifItemOffset || !offsets.colrOffset)) {\n        const itemName = getStringFromDataView(dataView, offset, STRING_SIZE);\n        if (Constants.USE_EXIF && (itemName === 'iloc')) {\n            offsets.ilocOffset = offset;\n        } else if (Constants.USE_EXIF && (itemName === 'Exif')) {\n            offsets.exifItemOffset = offset + ITEM_INDEX_REL_OFFSET;\n        } else if (Constants.USE_ICC && (itemName === 'colr')) {\n            offsets.colrOffset = offset + ITEM_INDEX_REL_OFFSET;\n        }\n\n        offset++;\n    }\n\n    return offsets;\n}\n\nfunction findExifOffset(dataView, exifItemOffset, offset, metaEndOffset) {\n    const EXIF_ITEM_OFFSET_SIZE = 2;\n    const ILOC_DATA_OFFSET = 12;\n    const EXIF_POINTER_OFFSET = 8;\n    const EXIF_POINTER_SIZE = 4;\n    const EXIF_PREFIX_LENGTH_OFFSET = 4;\n    const ILOC_ITEM_SIZE = 16;\n\n    if (!offset || !exifItemOffset || (exifItemOffset + EXIF_ITEM_OFFSET_SIZE > metaEndOffset)) {\n        return undefined;\n    }\n\n    const exifItemIndex = dataView.getUint16(exifItemOffset);\n    offset += ILOC_DATA_OFFSET;\n\n    while (offset + ILOC_ITEM_SIZE <= metaEndOffset) {\n        const itemIndex = dataView.getUint16(offset);\n        if (itemIndex === exifItemIndex) {\n            const exifPointer = dataView.getUint32(offset + EXIF_POINTER_OFFSET);\n            if (exifPointer + EXIF_POINTER_SIZE <= dataView.byteLength) {\n                const exifOffset = dataView.getUint32(exifPointer);\n                const prefixLength = exifOffset + EXIF_PREFIX_LENGTH_OFFSET;\n                return exifPointer + prefixLength;\n            }\n        }\n        offset += ILOC_ITEM_SIZE;\n    }\n\n    return undefined;\n}\n\nfunction findIccChunks(dataView, offset, metaEndOffset) {\n    const ITEM_TYPE_OFFSET = 8;\n    const ITEM_TYPE_SIZE = 4;\n    const ITEM_CONTENT_OFFSET = 12;\n\n    if (!offset || (offset + ITEM_CONTENT_OFFSET > metaEndOffset)) {\n        return undefined;\n    }\n\n    const colorType = getStringFromDataView(dataView, offset + ITEM_TYPE_OFFSET, ITEM_TYPE_SIZE);\n    if ((colorType !== 'prof') && (colorType !== 'rICC')) {\n        return undefined;\n    }\n\n    return [{\n        offset: offset + ITEM_CONTENT_OFFSET,\n        length: getAtomLength(dataView, offset) - ITEM_CONTENT_OFFSET,\n        chunkNumber: 1,\n        chunksTotal: 1\n    }];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n    let vp8xChunkOffset;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        } else if (chunkId === 'VP8X') {\n            hasAppMarkers = true;\n            vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks,\n        vp8xChunkOffset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isGifFile,\n    findOffsets\n};\n\nconst GIF_SIGNATURE_SIZE = 6;\nconst GIF_SIGNATURES = ['GIF87a', 'GIF89a'];\n\nfunction isGifFile(dataView) {\n    return !!dataView && GIF_SIGNATURES.includes(getStringFromDataView(dataView, 0, GIF_SIGNATURE_SIZE));\n}\n\nfunction findOffsets() {\n    return {\n        gifHeaderOffset: 0\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport {objectAssign} from './utils.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView, async) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n    }\n\n    if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n        return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n    return objectAssign({}, offsets, {fileType: {value: fileType, description: fileTypeDescription}});\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] >= value[1]) {\n            return `${Math.round(value[0] / value[1])}`;\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\n\nexport default {\n    [IFD_TYPE_0TH]: tagNames0thExifIfds,\n    [IFD_TYPE_1ST]: TagNames0thIfd,\n    [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n    [IFD_TYPE_GPS]: TagNamesGpsIfd,\n    [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n    [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x935c: 'ImageSourceData',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Types from './types.js';\nimport TagNames, {IFD_TYPE_0TH, IFD_TYPE_1ST} from './tag-names.js';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nexport function readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n            tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport {IFD_TYPE_0TH, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY} from './tag-names.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nexport default {\n    read,\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport {IFD_TYPE_MPF} from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nexport default {\n    read\n};\n\nconst ENTRY_SIZE = 16;\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = getImageOffset(i, tags['MPEntry'], byteOrder, dataOffset);\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction getImageOffset(imageIndex, mpEntry, byteOrder, dataOffset) {\n    if (isFirstIndividualImage(imageIndex)) {\n        return 0;\n    }\n    return getImageNumberValue(mpEntry.value, imageIndex * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n}\n\nfunction isFirstIndividualImage(imageIndex) {\n    return imageIndex === 0;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(tagValue instanceof DataView ? tagValue.buffer : Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        return new (__non_webpack_require__('@xmldom/xmldom').DOMParser)({\n            errorHandler: {\n                error: () => {\n                    throw new Error('Faulty XML');\n                }\n            }\n        });\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks));\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const domParser = DOMParser.get();\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        try {\n            if (isTagAttribute(name)) {\n                tags[getLocalName(name)] = {\n                    value: attributes[name],\n                    attributes: {},\n                    description: getDescription(attributes[name], name)\n                };\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        try {\n            if (!isNamespaceDefinition(name)) {\n                tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (isDuplicateTag(node)) {\n        return parseNodeAsDuplicateTag(node, name);\n    }\n    if (isEmptyResourceTag(node)) {\n        return {value: '', attributes: {}, description: ''};\n    }\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction isEmptyResourceTag(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        && (typeof node.value === 'string')\n        && (node.value.trim() === '');\n}\n\nfunction isDuplicateTag(node) {\n    return Array.isArray(node);\n}\n\nfunction parseNodeAsDuplicateTag(node, name) {\n    return parseNodeAsSimpleValue(node[node.length - 1], name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {\n    getPascalStringFromDataView,\n    padStart,\n    parseFloatRadix,\n    strRepeat\n} from './utils.js';\n\n// export const OsTypeKeys = {\n//     OBJC: 'Objc',\n//     DOUB: 'doub',\n//     UNTF: 'UntF',\n//     TEXT: 'TEXT',\n//     BOOL: 'bool',\n//     ENUM: 'enum',\n//     LONG: 'long'\n// };\n\nexport const PathRecordTypes = {\n    CLOSED_SUBPATH_LENGTH: 0,\n    CLOSED_SUBPATH_BEZIER_LINKED: 1,\n    CLOSED_SUBPATH_BEZIER_UNLINKED: 2,\n    OPEN_SUBPATH_LENGTH: 3,\n    OPEN_SUBPATH_BEZIER_LINKED: 4,\n    OPEN_SUBPATH_BEZIER_UNLINKED: 5,\n    FILL_RULE: 6,\n    CLIPBOARD: 7,\n    INITIAL_FILL_RULE: 8\n};\n\nconst PATH_RECORD_SIZE = 24;\n\nexport default {\n    // 0x0425: {\n    //     name: 'CaptionDigest',\n    //     description(dataView) {\n    //         let description = '';\n    //         for (let i = 0; i < dataView.byteLength; i++) {\n    //             const byte = dataView.getUint8(i);\n    //             description += padStart(byte.toString(16), 2, '0');\n    //         }\n    //         return description;\n    //     }\n    // },\n    // Commented out for now to lower bundle size until someone asks for it.\n    // 0x043a: {\n    //     name: 'PrintInformation',\n    //     description: parseDescriptor\n    // },\n    // 0x043b: {\n    //     name: 'PrintStyle',\n    //     description: parseDescriptor\n    // },\n    0x07d0: {\n        name: 'PathInformation',\n        description: pathResource\n    },\n    0x0bb7: {\n        name: 'ClippingPathName',\n        description(dataView) {\n            const [, string] = getPascalStringFromDataView(dataView, 0);\n            return string;\n        }\n    },\n};\n\n// function parseDescriptor(dataView) {\n//     const DESCRIPTOR_VERSION_SIZE = 4;\n//     // This is a unicode string terminated with null. Unsure about the format though since in my example image it starts with 0x0000.\n//     const UNCLEAR_CLASS_ID_NAME_PART_SIZE = 6;\n//     let offset = 0;\n//     offset += DESCRIPTOR_VERSION_SIZE + UNCLEAR_CLASS_ID_NAME_PART_SIZE;\n//     const [classId, classIdSize] = getBlockValue(dataView, offset);\n//     offset += classIdSize;\n//     const numItems = Types.getLongAt(dataView, offset);\n//     offset += 4;\n//     const descriptor = {[classId]: {}};\n//     for (let i = 0; i < numItems; i++) {\n//         const [itemKey, itemKeySize] = getBlockValue(dataView, offset);\n//         offset += itemKeySize;\n//         const osTypeKey = getStringFromDataView(dataView, offset, 4);\n//         offset += 4;\n//         try {\n//             const {itemValue, itemSize} = getItemValue(dataView, offset, osTypeKey);\n//             offset += itemSize;\n//             descriptor[classId][ITEM_KEY_TERMS[itemKey] || itemKey] = itemValue;\n//         } catch (error) {\n//             // We can't recover from unknown OS type key since we don't know\n//             // where the next one starts.\n//             break;\n//         }\n//     }\n//     return JSON.stringify(descriptor);\n// }\n\n// function getBlockValue(dataView, offset, unicode = false) {\n//     const length = (unicode ? 2 : 1) * Types.getLongAt(dataView, offset) || 4;\n//     offset += 4;\n//     const value = (unicode ? getUnicodeStringFromDataView : getStringFromDataView)(dataView, offset, length);\n//     offset += length;\n//     return [value, 4 + length];\n// }\n\n// function getItemValue(dataView, offset, osTypeKey) {\n//     // Not all OSType keys are implemented yet because they are missing in the example image.\n//     if (osTypeKey === OsTypeKeys.OBJC) {\n//         const [classIdName, classIdNameSize] = getBlockValue(dataView, offset, true);\n//         offset += classIdNameSize;\n//         const [classId, classIdSize] = getBlockValue(dataView, offset);\n//         offset += classIdSize;\n//         const _offset = Types.getLongAt(dataView, offset);\n//         return {\n//             itemValue: {[classIdName]: {[classId]: _offset}},\n//             itemSize: classIdNameSize + classIdSize + 4\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.DOUB) {\n//         return {\n//             itemValue: parseDouble(dataView, offset),\n//             itemSize: 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.UNTF) {\n//         const unit = getStringFromDataView(dataView, offset, 4);\n//         return {\n//             itemValue: {unit, value: parseDouble(dataView, offset + 4)},\n//             itemSize: unit.length + 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.TEXT) {\n//         const length = 2 * Types.getLongAt(dataView, offset);\n//         offset += 4;\n//         const text = getUnicodeStringFromDataView(dataView, offset, length);\n//         return {\n//             itemValue: text,\n//             itemSize: 4 + length\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.BOOL) {\n//         return {\n//             itemValue: Types.getByteAt(dataView, offset) === 1,\n//             itemSize: 1\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.ENUM) {\n//         const [type, typeSize] = getBlockValue(dataView, offset);\n//         offset += typeSize;\n//         const [enumName, enumSize] = getBlockValue(dataView, offset);\n//         return {\n//             itemValue: {[type]: enumName},\n//             itemSize: typeSize + enumSize\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.LONG) {\n//         return {\n//             itemValue: Types.getLongAt(dataView, offset),\n//             itemSize: 4\n//         };\n//     }\n//     throw new Error(`Unknown OS type key: ${osTypeKey}`);\n// }\n\n// function parseDouble(dataView, offset) {\n//     const BIAS = 1023;\n//     const sign = (Types.getByteAt(dataView, offset) & parseInt('10000000', 2)) === 0 ? 1 : -1;\n//     const exponent = ((Types.getShortAt(dataView, offset) & parseInt('0111111111110000', 2)) >> 4) - BIAS;\n//     const fractionHigh = padStart((Types.getLongAt(dataView, offset) & parseInt('00000000000011111111111111111111', 2)).toString(2), 20, '0');\n//     const fractionLow = padStart(Types.getLongAt(dataView, offset + 4).toString(2), 32, '0');\n//     const fraction = parseFloatRadix('1.' + fractionHigh + fractionLow, 2);\n//     return sign * fraction * Math.pow(2, exponent);\n// }\n\nfunction pathResource(dataView) {\n    const TYPE_SIZE = 2;\n    const types = {};\n    const paths = [];\n\n    for (let offset = 0; offset < dataView.byteLength; offset += TYPE_SIZE + PATH_RECORD_SIZE) {\n        const type = Types.getShortAt(dataView, offset);\n        if (PATH_RECORD_TYPES[type]) {\n            if (!types[type]) {\n                types[type] = PATH_RECORD_TYPES[type].description;\n            }\n            paths.push({\n                type,\n                path: PATH_RECORD_TYPES[type].path(dataView, offset + TYPE_SIZE)\n            });\n        }\n    }\n    return JSON.stringify({types, paths});\n}\n\nconst PATH_RECORD_TYPES = {\n    [PathRecordTypes.CLOSED_SUBPATH_LENGTH]: {\n        description: 'Closed subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_LINKED]: {\n        description: 'Closed subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Closed subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_LENGTH]: {\n        description: 'Open subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_LINKED]: {\n        description: 'Open subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Open subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.FILL_RULE]: {\n        description: 'Path fill rule',\n        path: () => []\n    },\n    [PathRecordTypes.INITIAL_FILL_RULE]: {\n        description: 'Initial fill rule',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLIPBOARD]: {\n        description: 'Clipboard',\n        path: parseClipboard\n    }\n};\n\nfunction parseBezierKnot(dataView, offset) {\n    const PATH_POINT_SIZE = 8;\n    const path = [];\n    for (let i = 0; i < PATH_RECORD_SIZE; i += PATH_POINT_SIZE) {\n        path.push(parsePathPoint(dataView, offset + i));\n    }\n    return path;\n}\n\nfunction parsePathPoint(dataView, offset) {\n    const vertical = getFixedPointNumber(dataView, offset, 8);\n    const horizontal = getFixedPointNumber(dataView, offset + 4, 8);\n    return [horizontal, vertical];\n}\n\nfunction parseClipboard(dataView, offset) {\n    return [\n        [\n            getFixedPointNumber(dataView, offset, 8), // Top\n            getFixedPointNumber(dataView, offset + 4, 8), // Left\n            getFixedPointNumber(dataView, offset + 8, 8), // Botton\n            getFixedPointNumber(dataView, offset + 12, 8), // Right\n        ],\n        getFixedPointNumber(dataView, offset + 16, 8) // Resolution\n    ];\n}\n\nfunction getFixedPointNumber(dataView, offset, binaryPoint) {\n    const number = Types.getLongAt(dataView, offset);\n\n    const sign = (number >>> 31) === 0 ? 1 : -1;\n    const integer = (number & 0x7f000000) >>> (32 - binaryPoint);\n    const fraction = number & parseInt(strRepeat('1', 32 - binaryPoint), 2);\n\n    return sign * parseFloatRadix(integer.toString(2) + '.' + padStart(fraction.toString(2), 32 - binaryPoint, '0'), 2);\n}\n\n// Item key terminology: https://psd-tools.readthedocs.io/en/latest/reference/psd_tools.terminology.html\n// Are these correct? There are collisions that are commented out. A lot of code for little gain?\n// const ITEM_KEY_TERMS = {\n//     'A   ': 'A',\n//     'Adjs': 'Adjustment',\n//     'Algd': 'Aligned',\n//     'Algn': 'Alignment',\n//     'AllE': 'AllExcept',\n//     'All ': 'AllPS',\n//     'AlTl': 'AllToolOptions',\n//     'AChn': 'AlphaChannelOptions',\n//     'AlpC': 'AlphaChannels',\n//     'AmbB': 'AmbientBrightness',\n//     'AmbC': 'AmbientColor',\n//     'Amnt': 'Amount',\n//     'AmMx': 'AmplitudeMax',\n//     'AmMn': 'AmplitudeMin',\n//     'Anch': 'Anchor',\n//     'Angl': 'Angle',\n//     'Ang1': 'Angle1',\n//     'Ang2': 'Angle2',\n//     'Ang3': 'Angle3',\n//     'Ang4': 'Angle4',\n//     'AntA': 'AntiAlias',\n//     'Appe': 'Append',\n//     'Aply': 'Apply',\n//     'Ar  ': 'Area',\n//     'Arrw': 'Arrowhead',\n//     'As  ': 'As',\n//     'Asst': 'AssetBin',\n//     'AssC': 'AssumedCMYK',\n//     'AssG': 'AssumedGray',\n//     'AssR': 'AssumedRGB',\n//     'At  ': 'At',\n//     'Auto': 'Auto',\n//     'AuCo': 'AutoContrast',\n//     'Atrs': 'AutoErase',\n//     'AtKr': 'AutoKern',\n//     'AtUp': 'AutoUpdate',\n//     'Axis': 'Axis',\n//     'B   ': 'B',\n//     'Bckg': 'Background',\n//     'BckC': 'BackgroundColor',\n//     'BckL': 'BackgroundLevel',\n//     'Bwd ': 'Backward',\n//     'Blnc': 'Balance',\n//     'Bsln': 'BaselineShift',\n//     'BpWh': 'BeepWhenDone',\n//     'BgnR': 'BeginRamp',\n//     'BgnS': 'BeginSustain',\n//     'bvlD': 'BevelDirection',\n//     'ebbl': 'BevelEmboss',\n//     'bvlS': 'BevelStyle',\n//     'bvlT': 'BevelTechnique',\n//     'BgNH': 'BigNudgeH',\n//     'BgNV': 'BigNudgeV',\n//     'BtDp': 'BitDepth',\n//     'Blck': 'Black',\n//     'BlcC': 'BlackClip',\n//     'Blcn': 'BlackGeneration',\n//     'BlcG': 'BlackGenerationCurve',\n//     'BlcI': 'BlackIntensity',\n//     'BlcL': 'BlackLevel',\n//     // 'BlcL': 'BlackLimit',\n//     'Bld ': 'Bleed',\n//     'Blnd': 'BlendRange',\n//     'Bl  ': 'Blue',\n//     'BlBl': 'BlueBlackPoint',\n//     'blueFloat': 'BlueFloat',\n//     'BlGm': 'BlueGamma',\n//     'BlWh': 'BlueWhitePoint',\n//     'BlX ': 'BlueX',\n//     'BlY ': 'BlueY',\n//     'blur': 'Blur',\n//     'BlrM': 'BlurMethod',\n//     'BlrQ': 'BlurQuality',\n//     'Bk  ': 'Book',\n//     'BrdT': 'BorderThickness',\n//     'Btom': 'Bottom',\n//     'Brgh': 'Brightness',\n//     'BrsD': 'BrushDetail',\n//     'BrsS': 'BrushSize',\n//     'BrsT': 'BrushType',\n//     'Brsh': 'Brushes',\n//     'BmpA': 'BumpAmplitude',\n//     'BmpC': 'BumpChannel',\n//     'By  ': 'By',\n//     'Byln': 'Byline',\n//     'BylT': 'BylineTitle',\n//     'BytO': 'ByteOrder',\n//     'CMYS': 'CMYKSetup',\n//     'CchP': 'CachePrefs',\n//     'Clcl': 'Calculation',\n//     'Clbr': 'CalibrationBars',\n//     'Cptn': 'Caption',\n//     'CptW': 'CaptionWriter',\n//     'Ctgr': 'Category',\n//     'ClSz': 'CellSize',\n//     'Cntr': 'Center',\n//     'CntC': 'CenterCropMarks',\n//     'ChlA': 'ChalkArea',\n//     'Chnl': 'Channel',\n//     'ChMx': 'ChannelMatrix',\n//     'ChnN': 'ChannelName',\n//     'Chns': 'Channels',\n//     'ChnI': 'ChannelsInterleaved',\n//     'ChAm': 'CharcoalAmount',\n//     'ChrA': 'CharcoalArea',\n//     'Ckmt': 'ChokeMatte',\n//     'ChFX': 'ChromeFX',\n//     'City': 'City',\n//     'ClrA': 'ClearAmount',\n//     'ClPt': 'ClippingPath',\n//     'ClpP': 'ClippingPathEPS',\n//     'ClpF': 'ClippingPathFlatness',\n//     'ClpI': 'ClippingPathIndex',\n//     'Clpg': 'ClippingPathInfo',\n//     'ClnS': 'CloneSource',\n//     'Clsp': 'ClosedSubpath',\n//     'Clr ': 'Color',\n//     'Clrh': 'ColorChannels',\n//     'ClrC': 'ColorCorrection',\n//     'ClrI': 'ColorIndicates',\n//     'ClMg': 'ColorManagement',\n//     'Clrr': 'ColorPickerPrefs',\n//     'ClrS': 'ColorSpace',\n//     'ClrT': 'ColorTable',\n//     'Clrz': 'Colorize',\n//     'Clrs': 'Colors',\n//     'ClrL': 'ColorsList',\n//     'ClmW': 'ColumnWidth',\n//     'CmdK': 'CommandKey',\n//     'Cmpn': 'Compensation',\n//     'Cmpr': 'Compression',\n//     'Cncv': 'Concavity',\n//     'Cndt': 'Condition',\n//     'Cnst': 'Constant',\n//     // 'Cnst': 'Constrain',\n//     'CnsP': 'ConstrainProportions',\n//     'Cfov': 'ConstructionFOV',\n//     'Cntg': 'Contiguous',\n//     'Cntn': 'Continue',\n//     'Cnty': 'Continuity',\n//     'ShpC': 'ContourType',\n//     // 'Cntr': 'Contrast',\n//     'Cnvr': 'Convert',\n//     'Cpy ': 'Copy',\n//     'Cpyr': 'Copyright',\n//     'CprN': 'CopyrightNotice',\n//     'CrnC': 'CornerCropMarks',\n//     'Cnt ': 'Count',\n//     'CntN': 'CountryName',\n//     'CrcB': 'CrackBrightness',\n//     'CrcD': 'CrackDepth',\n//     'CrcS': 'CrackSpacing',\n//     'blfl': 'CreateLayersFromLayerFX',\n//     'Crdt': 'Credit',\n//     'Crss': 'Crossover',\n//     'Crnt': 'Current',\n//     'CrnH': 'CurrentHistoryState',\n//     'CrnL': 'CurrentLight',\n//     'CrnT': 'CurrentToolOptions',\n//     'Crv ': 'Curve',\n//     'CrvF': 'CurveFile',\n//     'Cstm': 'Custom',\n//     'CstF': 'CustomForced',\n//     'CstM': 'CustomMatte',\n//     'CstP': 'CustomPalette',\n//     'Cyn ': 'Cyan',\n//     'DCS ': 'DCS',\n//     'DPXf': 'DPXFormat',\n//     'DrkI': 'DarkIntensity',\n//     'Drkn': 'Darkness',\n//     'DtCr': 'DateCreated',\n//     'Dt ': 'Datum',\n//     'Dfnt': 'Definition',\n//     'Dnst': 'Density',\n//     'Dpth': 'Depth',\n//     'Dstl': 'DestBlackMax',\n//     'DstB': 'DestBlackMin',\n//     'Dstt': 'DestWhiteMax',\n//     'DstW': 'DestWhiteMin',\n//     'DstM': 'DestinationMode',\n//     'Dtl ': 'Detail',\n//     'Dmtr': 'Diameter',\n//     'DffD': 'DiffusionDither',\n//     'Drct': 'Direction',\n//     'DrcB': 'DirectionBalance',\n//     'DspF': 'DisplaceFile',\n//     'DspM': 'DisplacementMap',\n//     'DspP': 'DisplayPrefs',\n//     'Dstn': 'Distance',\n//     // 'Dstr': 'Distortion',\n//     // 'Dstr': 'Distribution',\n//     'Dthr': 'Dither',\n//     'DthA': 'DitherAmount',\n//     'Dthp': 'DitherPreserve',\n//     'Dthq': 'DitherQuality',\n//     'DocI': 'DocumentID',\n//     'DtGn': 'DotGain',\n//     'DtGC': 'DotGainCurves',\n//     'DrSh': 'DropShadow',\n//     'Dplc': 'Duplicate',\n//     'DnmC': 'DynamicColorSliders',\n//     'Edg ': 'Edge',\n//     'EdgB': 'EdgeBrightness',\n//     'EdgF': 'EdgeFidelity',\n//     'EdgI': 'EdgeIntensity',\n//     'EdgS': 'EdgeSimplicity',\n//     'EdgT': 'EdgeThickness',\n//     'EdgW': 'EdgeWidth',\n//     'Effc': 'Effect',\n//     'EmbC': 'EmbedCMYK',\n//     'EmbG': 'EmbedGray',\n//     'EmbL': 'EmbedLab',\n//     'EmbP': 'EmbedProfiles',\n//     'EmbR': 'EmbedRGB',\n//     'EmlD': 'EmulsionDown',\n//     'EGst': 'EnableGestures',\n//     'enab': 'Enabled',\n//     'Encd': 'Encoding',\n//     'End ': 'End',\n//     'EndA': 'EndArrowhead',\n//     'EndR': 'EndRamp',\n//     'EndS': 'EndSustain',\n//     'Engn': 'Engine',\n//     'ErsT': 'EraseToHistory',\n//     'ErsK': 'EraserKind',\n//     'ExcP': 'ExactPoints',\n//     'Expr': 'Export',\n//     'ExpC': 'ExportClipboard',\n//     'Exps': 'Exposure',\n//     'Extd': 'Extend',\n//     'EQlt': 'ExtendedQuality',\n//     'Extn': 'Extension',\n//     'ExtQ': 'ExtensionsQuery',\n//     'ExtD': 'ExtrudeDepth',\n//     'ExtM': 'ExtrudeMaskIncomplete',\n//     'ExtR': 'ExtrudeRandom',\n//     'ExtS': 'ExtrudeSize',\n//     'ExtF': 'ExtrudeSolidFace',\n//     'ExtT': 'ExtrudeType',\n//     'EyDr': 'EyeDropperSample',\n//     'FxCm': 'FPXCompress',\n//     'FxQl': 'FPXQuality',\n//     'FxSz': 'FPXSize',\n//     'FxVw': 'FPXView',\n//     'FdT ': 'FadeTo',\n//     'FdtS': 'FadeoutSteps',\n//     'FlOf': 'Falloff',\n//     'Fthr': 'Feather',\n//     'FbrL': 'FiberLength',\n//     'File': 'File',\n//     'FlCr': 'FileCreator',\n//     'FlIn': 'FileInfo',\n//     'FilR': 'FileReference',\n//     'FlSP': 'FileSavePrefs',\n//     'FlTy': 'FileType',\n//     'flst': 'FilesList',\n//     'Fl  ': 'Fill',\n//     'FlCl': 'FillColor',\n//     'FlNt': 'FillNeutral',\n//     'FlPd': 'FilterLayerPersistentData',\n//     'FlRs': 'FilterLayerRandomSeed',\n//     'Fngr': 'Fingerpainting',\n//     'FlrC': 'FlareCenter',\n//     'Fltn': 'Flatness',\n//     'Fltt': 'Flatten',\n//     'FlpV': 'FlipVertical',\n//     'Fcs ': 'Focus',\n//     'Fldr': 'Folders',\n//     'FntD': 'FontDesignAxes',\n//     'FntV': 'FontDesignAxesVectors',\n//     'FntN': 'FontName',\n//     'Scrp': 'FontScript',\n//     'FntS': 'FontStyleName',\n//     'FntT': 'FontTechnology',\n//     'FrcC': 'ForcedColors',\n//     'FrgC': 'ForegroundColor',\n//     'FrgL': 'ForegroundLevel',\n//     'Fmt ': 'Format',\n//     'Fwd ': 'Forward',\n//     'FrFX': 'FrameFX',\n//     'FrmW': 'FrameWidth',\n//     'FTcs': 'FreeTransformCenterState',\n//     'Frqn': 'Frequency',\n//     'From': 'From',\n//     'FrmB': 'FromBuiltin',\n//     'FrmM': 'FromMode',\n//     'FncK': 'FunctionKey',\n//     'Fzns': 'Fuzziness',\n//     'GCR ': 'GCR',\n//     'GFPT': 'GIFColorFileType',\n//     'GFCL': 'GIFColorLimit',\n//     'GFEC': 'GIFExportCaption',\n//     'GFMI': 'GIFMaskChannelIndex',\n//     'GFMV': 'GIFMaskChannelInverted',\n//     'GFPF': 'GIFPaletteFile',\n//     'GFPL': 'GIFPaletteType',\n//     'GFCS': 'GIFRequiredColorSpaceType',\n//     'GFIT': 'GIFRowOrderType',\n//     'GFTC': 'GIFTransparentColor',\n//     'GFTB': 'GIFTransparentIndexBlue',\n//     'GFTG': 'GIFTransparentIndexGreen',\n//     'GFTR': 'GIFTransparentIndexRed',\n//     'GFBM': 'GIFUseBestMatch',\n//     'Gmm ': 'Gamma',\n//     'GmtW': 'GamutWarning',\n//     'GnrP': 'GeneralPrefs',\n//     'gblA': 'GlobalAngle',\n//     'gagl': 'GlobalLightingAngle',\n//     'Glos': 'Gloss',\n//     'GlwA': 'GlowAmount',\n//     'GlwT': 'GlowTechnique',\n//     'Grad': 'Gradient',\n//     'Grdf': 'GradientFill',\n//     // 'Grn ': 'Grain',\n//     'Grnt': 'GrainType',\n//     'Grns': 'Graininess',\n//     'Gry ': 'Gray',\n//     'GrBh': 'GrayBehavior',\n//     'GrSt': 'GraySetup',\n//     'Grn ': 'Green',\n//     'GrnB': 'GreenBlackPoint',\n//     'greenFloat': 'GreenFloat',\n//     'GrnG': 'GreenGamma',\n//     'GrnW': 'GreenWhitePoint',\n//     'GrnX': 'GreenX',\n//     'GrnY': 'GreenY',\n//     'GrdC': 'GridColor',\n//     'Grds': 'GridCustomColor',\n//     'GrdM': 'GridMajor',\n//     'Grdn': 'GridMinor',\n//     'GrdS': 'GridStyle',\n//     'Grdt': 'GridUnits',\n//     'Grup': 'Group',\n//     'GrtW': 'GroutWidth',\n//     'GrwS': 'GrowSelection',\n//     'Gdes': 'Guides',\n//     'GdsC': 'GuidesColor',\n//     'Gdss': 'GuidesCustomColor',\n//     'GdPr': 'GuidesPrefs',\n//     'GdsS': 'GuidesStyle',\n//     'GttW': 'GutterWidth',\n//     'HlfF': 'HalftoneFile',\n//     'HlfS': 'HalftoneScreen',\n//     'HlSz': 'HalftoneSize',\n//     'Hlfp': 'HalftoneSpec',\n//     'Hrdn': 'Hardness',\n//     'HCdH': 'HasCmdHPreference',\n//     'Hdr ': 'Header',\n//     'Hdln': 'Headline',\n//     'Hght': 'Height',\n//     'HghA': 'HighlightArea',\n//     'hglC': 'HighlightColor',\n//     'HghL': 'HighlightLevels',\n//     'hglM': 'HighlightMode',\n//     'hglO': 'HighlightOpacity',\n//     'HghS': 'HighlightStrength',\n//     'HstB': 'HistoryBrushSource',\n//     'HstP': 'HistoryPrefs',\n//     'HsSS': 'HistoryStateSource',\n//     'HsSt': 'HistoryStates',\n//     'Hrzn': 'Horizontal',\n//     'HrzS': 'HorizontalScale',\n//     'HstN': 'HostName',\n//     'HstV': 'HostVersion',\n//     'H   ': 'Hue',\n//     'ICCE': 'ICCEngine',\n//     'ICCt': 'ICCSetupName',\n//     'Idnt': 'ID',\n//     'Idle': 'Idle',\n//     'ImgB': 'ImageBalance',\n//     'Impr': 'Import',\n//     'Imps': 'Impressionist',\n//     'In  ': 'In',\n//     'c@#^': 'Inherits',\n//     'InkC': 'InkColors',\n//     'Inks': 'Inks',\n//     'IrGl': 'InnerGlow',\n//     'glwS': 'InnerGlowSource',\n//     'IrSh': 'InnerShadow',\n//     'Inpt': 'Input',\n//     'kIBP': 'InputBlackPoint',\n//     'Inmr': 'InputMapRange',\n//     'Inpr': 'InputRange',\n//     'kIWP': 'InputWhitePoint',\n//     'Intn': 'Intensity',\n//     'Inte': 'Intent',\n//     'IntH': 'InterfaceBevelHighlight',\n//     'Intv': 'InterfaceBevelShadow',\n//     'IntB': 'InterfaceBlack',\n//     'Intd': 'InterfaceBorder',\n//     'Intk': 'InterfaceButtonDarkShadow',\n//     'Intt': 'InterfaceButtonDownFill',\n//     'InBF': 'InterfaceButtonUpFill',\n//     'ICBL': 'InterfaceColorBlue2',\n//     'ICBH': 'InterfaceColorBlue32',\n//     'ICGL': 'InterfaceColorGreen2',\n//     'ICGH': 'InterfaceColorGreen32',\n//     'ICRL': 'InterfaceColorRed2',\n//     'ICRH': 'InterfaceColorRed32',\n//     'IntI': 'InterfaceIconFillActive',\n//     'IntF': 'InterfaceIconFillDimmed',\n//     'Intc': 'InterfaceIconFillSelected',\n//     'Intm': 'InterfaceIconFrameActive',\n//     // 'Intr': 'InterfaceIconFrameDimmed',\n//     'IntS': 'InterfaceIconFrameSelected',\n//     'IntP': 'InterfacePaletteFill',\n//     'IntR': 'InterfaceRed',\n//     'IntT': 'InterfaceToolTipBackground',\n//     'ITTT': 'InterfaceToolTipText',\n//     'ITBg': 'InterfaceTransparencyBackground',\n//     'ITFg': 'InterfaceTransparencyForeground',\n//     'IntW': 'InterfaceWhite',\n//     // 'Intr': 'Interlace',\n//     'IntC': 'InterlaceCreateType',\n//     'IntE': 'InterlaceEliminateType',\n//     // 'Intr': 'Interpolation',\n//     'IntM': 'InterpolationMethod',\n//     'Invr': 'Invert',\n//     'InvM': 'InvertMask',\n//     'InvS': 'InvertSource2',\n//     'InvT': 'InvertTexture',\n//     'IsDr': 'IsDirty',\n//     'ItmI': 'ItemIndex',\n//     'JPEQ': 'JPEGQuality',\n//     'Krng': 'Kerning',\n//     'Kywd': 'Keywords',\n//     'Knd ': 'Kind',\n//     'LTnm': 'LUTAnimation',\n//     'LZWC': 'LZWCompression',\n//     'Lbls': 'Labels',\n//     'Lnds': 'Landscape',\n//     'LstT': 'LastTransform',\n//     'Lyr ': 'Layer',\n//     'Lefx': 'LayerEffects',\n//     'lfxv': 'LayerFXVisible',\n//     'LyrI': 'LayerID',\n//     'LyrN': 'LayerName',\n//     'Lyrs': 'Layers',\n//     'Ldng': 'Leading',\n//     'Left': 'Left',\n//     'lSNs': 'LegacySerialString',\n//     // 'Lngt': 'Length',\n//     'Lns ': 'Lens',\n//     'Lvl ': 'Level',\n//     'Lvls': 'Levels',\n//     'LgDr': 'LightDark',\n//     'LghD': 'LightDirection',\n//     'LghI': 'LightIntensity',\n//     'LghP': 'LightPosition',\n//     'LghS': 'LightSource',\n//     'LghT': 'LightType',\n//     'LghG': 'LightenGrout',\n//     'Lght': 'Lightness',\n//     'Line': 'Line',\n//     'lnkE': 'LinkEnable',\n//     'LnkL': 'LinkedLayerIDs',\n//     'Lald': 'LocalLightingAltitude',\n//     'lagl': 'LocalLightingAngle',\n//     'LclR': 'LocalRange',\n//     'Lctn': 'Location',\n//     'Log ': 'Log',\n//     'kLog': 'Logarithmic',\n//     'LwCs': 'LowerCase',\n//     'Lmnc': 'Luminance',\n//     'Mgnt': 'Magenta',\n//     'MkVs': 'MakeVisible',\n//     'Mfov': 'ManipulationFOV',\n//     'MpBl': 'MapBlack',\n//     'Mpng': 'Mapping',\n//     'MpgS': 'MappingShape',\n//     'Mtrl': 'Material',\n//     'Mtrx': 'Matrix',\n//     'MttC': 'MatteColor',\n//     'Mxm ': 'Maximum',\n//     'MxmS': 'MaximumStates',\n//     'MmrU': 'MemoryUsagePercent',\n//     'Mrge': 'Merge',\n//     'Mrgd': 'Merged',\n//     'Msge': 'Message',\n//     'Mthd': 'Method',\n//     'MztT': 'MezzotintType',\n//     'Mdpn': 'Midpoint',\n//     'MdtL': 'MidtoneLevels',\n//     'Mnm ': 'Minimum',\n//     'MsmC': 'MismatchCMYK',\n//     'MsmG': 'MismatchGray',\n//     'MsmR': 'MismatchRGB',\n//     'Md  ': 'Mode',\n//     'Mnch': 'Monochromatic',\n//     'MvT ': 'MoveTo',\n//     'Nm  ': 'Name',\n//     'Ngtv': 'Negative',\n//     'Nw  ': 'New',\n//     'Nose': 'Noise',\n//     'NnIm': 'NonImageData',\n//     'NnLn': 'NonLinear',\n//     'null': 'Null',\n//     'Nm L': 'NumLights',\n//     'Nmbr': 'Number',\n//     'NCch': 'NumberOfCacheLevels',\n//     'NC64': 'NumberOfCacheLevels64',\n//     'NmbO': 'NumberOfChannels',\n//     'NmbC': 'NumberOfChildren',\n//     'NmbD': 'NumberOfDocuments',\n//     'NmbG': 'NumberOfGenerators',\n//     // 'NmbL': 'NumberOfLayers',\n//     // 'NmbL': 'NumberOfLevels',\n//     'NmbP': 'NumberOfPaths',\n//     'NmbR': 'NumberOfRipples',\n//     'NmbS': 'NumberOfSiblings',\n//     'ObjN': 'ObjectName',\n//     'Ofst': 'Offset',\n//     'Sftt': 'OldSmallFontType',\n//     'On  ': 'On',\n//     'Opct': 'Opacity',\n//     'Optm': 'Optimized',\n//     'Ornt': 'Orientation',\n//     'OrgH': 'OriginalHeader',\n//     'OrgT': 'OriginalTransmissionReference',\n//     'OthC': 'OtherCursors',\n//     'OrGl': 'OuterGlow',\n//     'Otpt': 'Output',\n//     'kOBP': 'OutputBlackPoint',\n//     'kOWP': 'OutputWhitePoint',\n//     'OvrC': 'OverprintColors',\n//     'OvrO': 'OverrideOpen',\n//     'ObrP': 'OverridePrinter',\n//     'Ovrd': 'OverrideSave',\n//     'PNGf': 'PNGFilter',\n//     'PGIT': 'PNGInterlaceType',\n//     'PMpf': 'PageFormat',\n//     'PgNm': 'PageNumber',\n//     'PgPs': 'PagePosition',\n//     'PgSt': 'PageSetup',\n//     'PnCK': 'PaintCursorKind',\n//     'PntT': 'PaintType',\n//     'PntC': 'PaintingCursors',\n//     'Plt ': 'Palette',\n//     'PltF': 'PaletteFile',\n//     'PprB': 'PaperBrightness',\n//     'PrIn': 'ParentIndex',\n//     'PrNm': 'ParentName',\n//     'Path': 'Path',\n//     'PthC': 'PathContents',\n//     'PthN': 'PathName',\n//     'Pttn': 'Pattern',\n//     'Pncl': 'PencilWidth',\n//     'Prsp': 'PerspectiveIndex',\n//     'Phsp': 'Phosphors',\n//     'PckI': 'PickerID',\n//     'Pckr': 'PickerKind',\n//     'PPSz': 'PixelPaintSize',\n//     'Pltf': 'Platform',\n//     'PlgF': 'PluginFolder',\n//     'PlgP': 'PluginPrefs',\n//     'Pts ': 'Points',\n//     'Pstn': 'Position',\n//     'PstS': 'PostScriptColor',\n//     'Pstr': 'Posterization',\n//     'PrdC': 'PredefinedColors',\n//     'PrfB': 'PreferBuiltin',\n//     'Prfr': 'Preferences',\n//     'PrsA': 'PreserveAdditional',\n//     'PrsL': 'PreserveLuminosity',\n//     'PrsT': 'PreserveTransparency',\n//     'Prs ': 'Pressure',\n//     'Prvw': 'Preview',\n//     'PrvK': 'PreviewCMYK',\n//     'PrvF': 'PreviewFullSize',\n//     'PrvI': 'PreviewIcon',\n//     'PrvM': 'PreviewMacThumbnail',\n//     'PrvW': 'PreviewWinThumbnail',\n//     'PrvQ': 'PreviewsQuery',\n//     'PMps': 'PrintSettings',\n//     'PrfS': 'ProfileSetup',\n//     'PrvS': 'ProvinceState',\n//     'Qlty': 'Quality',\n//     'QucM': 'QuickMask',\n//     'RGBS': 'RGBSetup',\n//     'Rds ': 'Radius',\n//     'RndS': 'RandomSeed',\n//     'Rt  ': 'Ratio',\n//     'Rcnf': 'RecentFiles',\n//     'Rd  ': 'Red',\n//     'RdBl': 'RedBlackPoint',\n//     'redFloat': 'RedFloat',\n//     'RdGm': 'RedGamma',\n//     'RdWh': 'RedWhitePoint',\n//     'RdX ': 'RedX',\n//     'RdY ': 'RedY',\n//     'RgsM': 'RegistrationMarks',\n//     'Rltv': 'Relative',\n//     'Rlf ': 'Relief',\n//     'Rfid': 'RenderFidelity',\n//     'Rsmp': 'Resample',\n//     'RWOZ': 'ResizeWindowsOnZoom',\n//     'Rslt': 'Resolution',\n//     'RsrI': 'ResourceID',\n//     'Rspn': 'Response',\n//     'RtnH': 'RetainHeader',\n//     'Rvrs': 'Reverse',\n//     'Rght': 'Right',\n//     'RplM': 'RippleMagnitude',\n//     'RplS': 'RippleSize',\n//     'Rtt ': 'Rotate',\n//     'Rndn': 'Roundness',\n//     'RlrH': 'RulerOriginH',\n//     'RlrV': 'RulerOriginV',\n//     'RlrU': 'RulerUnits',\n//     // 'Strt': 'Saturation',\n//     'SvAn': 'SaveAndClose',\n//     'SvCm': 'SaveComposite',\n//     'PltL': 'SavePaletteLocations',\n//     'SvPt': 'SavePaths',\n//     'SvPy': 'SavePyramids',\n//     'Svng': 'Saving',\n//     'Scl ': 'Scale',\n//     'SclH': 'ScaleHorizontal',\n//     'SclV': 'ScaleVertical',\n//     'Scln': 'Scaling',\n//     'Scns': 'Scans',\n//     'ScrD': 'ScratchDisks',\n//     'ScrF': 'ScreenFile',\n//     'ScrT': 'ScreenType',\n//     'Sprt': 'Separations',\n//     'SrlS': 'SerialString',\n//     // 'ShdI': 'ShadingIntensity',\n//     'ShdN': 'ShadingNoise',\n//     'ShdS': 'ShadingShape',\n//     'sdwC': 'ShadowColor',\n//     // 'ShdI': 'ShadowIntensity',\n//     'ShdL': 'ShadowLevels',\n//     'sdwM': 'ShadowMode',\n//     'sdwO': 'ShadowOpacity',\n//     'Shp ': 'Shape',\n//     'Shrp': 'Sharpness',\n//     'ShrE': 'ShearEd',\n//     'ShrP': 'ShearPoints',\n//     'ShrS': 'ShearSt',\n//     'ShfK': 'ShiftKey',\n//     'ShKT': 'ShiftKeyToolSwitch',\n//     'ShrN': 'ShortNames',\n//     'ShwE': 'ShowEnglishFontNames',\n//     'SwMC': 'ShowMenuColors',\n//     'ShwT': 'ShowToolTips',\n//     'ShTr': 'ShowTransparency',\n//     'Sz  ': 'SizeKey',\n//     'Skew': 'Skew',\n//     'Sfts': 'SmallFontType',\n//     'SmBM': 'SmartBlurMode',\n//     'SmBQ': 'SmartBlurQuality',\n//     'Smoo': 'Smooth',\n//     'Smth': 'Smoothness',\n//     'SnpI': 'SnapshotInitial',\n//     'SfCl': 'SoftClip',\n//     'Sftn': 'Softness',\n//     'SoFi': 'SolidFill',\n//     'Srce': 'Source',\n//     'Src2': 'Source2',\n//     'SrcM': 'SourceMode',\n//     'Spcn': 'Spacing',\n//     'SpcI': 'SpecialInstructions',\n//     'SphM': 'SpherizeMode',\n//     'Spot': 'Spot',\n//     'SprR': 'SprayRadius',\n//     'SqrS': 'SquareSize',\n//     'Srcl': 'SrcBlackMax',\n//     'SrcB': 'SrcBlackMin',\n//     'Srcm': 'SrcWhiteMax',\n//     'SrcW': 'SrcWhiteMin',\n//     // 'Strt': 'Start',\n//     'StrA': 'StartArrowhead',\n//     'Stte': 'State',\n//     'srgh': 'Strength',\n//     'srgR': 'StrengthRatio',\n//     'Strg': 'Strength_PLUGIN',\n//     'StDt': 'StrokeDetail',\n//     'SDir': 'StrokeDirection',\n//     'StrL': 'StrokeLength',\n//     'StrP': 'StrokePressure',\n//     'StrS': 'StrokeSize',\n//     'StrW': 'StrokeWidth',\n//     'Styl': 'Style',\n//     'Stys': 'Styles',\n//     'StlC': 'StylusIsColor',\n//     'StlO': 'StylusIsOpacity',\n//     'StlP': 'StylusIsPressure',\n//     'StlS': 'StylusIsSize',\n//     'SbpL': 'SubPathList',\n//     'SplC': 'SupplementalCategories',\n//     'SstI': 'SystemInfo',\n//     'SstP': 'SystemPalette',\n//     // 'null': 'Target',\n//     'Trgp': 'TargetPath',\n//     'TrgP': 'TargetPathIndex',\n//     // 'Lngt': 'TermLength',\n//     'Txt ': 'Text',\n//     // 'TxtC': 'TextClickPoint',\n//     'TxtD': 'TextData',\n//     'TxtS': 'TextStyle',\n//     'Txtt': 'TextStyleRange',\n//     'Txtr': 'Texture',\n//     // 'TxtC': 'TextureCoverage',\n//     'TxtF': 'TextureFile',\n//     'TxtT': 'TextureType',\n//     'Thsh': 'Threshold',\n//     'TlNm': 'TileNumber',\n//     'TlOf': 'TileOffset',\n//     'TlSz': 'TileSize',\n//     'Ttl ': 'Title',\n//     'T   ': 'To',\n//     'TBl ': 'ToBuiltin',\n//     'ToLk': 'ToLinked',\n//     'TMd ': 'ToMode',\n//     'TglO': 'ToggleOthers',\n//     'Tlrn': 'Tolerance',\n//     'Top ': 'Top',\n//     'TtlL': 'TotalLimit',\n//     'Trck': 'Tracking',\n//     'TrnF': 'TransferFunction',\n//     // 'TrnS': 'TransferSpec',\n//     'Trns': 'Transparency',\n//     // 'TrnG': 'TransparencyGrid',\n//     'TrnC': 'TransparencyGridColors',\n//     // 'TrnG': 'TransparencyGridSize',\n//     'TrnP': 'TransparencyPrefs',\n//     // 'TrnS': 'TransparencyShape',\n//     'TrnI': 'TransparentIndex',\n//     'TrnW': 'TransparentWhites',\n//     'Twst': 'Twist',\n//     'Type': 'Type',\n//     'UC  ': 'UCA',\n//     'URL ': 'URL',\n//     'UndA': 'UndefinedArea',\n//     'Undl': 'Underline',\n//     'UntP': 'UnitsPrefs',\n//     'Untl': 'Untitled',\n//     'UppY': 'UpperY',\n//     'Urgn': 'Urgency',\n//     'AcrS': 'UseAccurateScreens',\n//     'AdPl': 'UseAdditionalPlugins',\n//     'UsCc': 'UseCacheForHistograms',\n//     'UsCr': 'UseCurves',\n//     'UsDf': 'UseDefault',\n//     'uglg': 'UseGlobalAngle',\n//     'UsIC': 'UseICCProfile',\n//     'UsMs': 'UseMask',\n//     'UsrM': 'UserMaskEnabled',\n//     'Usrs': 'UserMaskLinked',\n//     'Usng': 'Using',\n//     'Vl  ': 'Value',\n//     'Vrnc': 'Variance',\n//     'Vct0': 'Vector0',\n//     'Vct1': 'Vector1',\n//     'VctC': 'VectorColor',\n//     'VrsF': 'VersionFix',\n//     'VrsM': 'VersionMajor',\n//     'VrsN': 'VersionMinor',\n//     'Vrtc': 'Vertical',\n//     'VrtS': 'VerticalScale',\n//     'Vdlp': 'VideoAlpha',\n//     'Vsbl': 'Visible',\n//     'WtcS': 'WatchSuspension',\n//     'watr': 'Watermark',\n//     'Wvtp': 'WaveType',\n//     'WLMx': 'WavelengthMax',\n//     'WLMn': 'WavelengthMin',\n//     'WbdP': 'WebdavPrefs',\n//     'Wtdg': 'WetEdges',\n//     'What': 'What',\n//     'WhtC': 'WhiteClip',\n//     'WhtI': 'WhiteIntensity',\n//     'WhHi': 'WhiteIsHigh',\n//     'WhtL': 'WhiteLevel',\n//     'WhtP': 'WhitePoint',\n//     'WhPt': 'WholePath',\n//     'Wdth': 'Width',\n//     'WndM': 'WindMethod',\n//     'With': 'With',\n//     'WrPt': 'WorkPath',\n//     'WrkP': 'WorkPathIndex',\n//     'X   ': 'X',\n//     'Y   ': 'Y',\n//     'Ylw ': 'Yellow',\n//     'ZZTy': 'ZigZagType',\n//     'Alis': '_3DAntiAlias',\n// };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/\n\nimport {getDataView, getStringFromDataView, getPascalStringFromDataView} from './utils.js';\nimport Types from './types.js';\nimport TagNames from './photoshop-tag-names.js';\n\nexport default {\n    read\n};\n\nconst SIGNATURE = '8BIM';\nconst TAG_ID_SIZE = 2;\nconst RESOURCE_LENGTH_SIZE = 4;\n\nconst SIGNATURE_SIZE = SIGNATURE.length;\n\nfunction read(bytes, includeUnknown) {\n    const dataView = getDataView(new Uint8Array(bytes).buffer);\n    const tags = {};\n    let offset = 0;\n\n    while (offset < bytes.length) {\n        const signature = getStringFromDataView(dataView, offset, SIGNATURE_SIZE);\n        offset += SIGNATURE_SIZE;\n        const tagId = Types.getShortAt(dataView, offset);\n        offset += TAG_ID_SIZE;\n        const {tagName, tagNameSize} = getTagName(dataView, offset);\n        offset += tagNameSize;\n        const resourceSize = Types.getLongAt(dataView, offset);\n        offset += RESOURCE_LENGTH_SIZE;\n        if (signature === SIGNATURE) {\n            const valueDataView = getDataView(dataView.buffer, offset, resourceSize);\n            const tag = {\n                id: tagId,\n                value: getStringFromDataView(valueDataView, 0, resourceSize),\n            };\n            if (TagNames[tagId]) {\n                try {\n                    tag.description = TagNames[tagId].description(valueDataView);\n                } catch (error) {\n                    tag.description = '<no description formatter>';\n                }\n                tags[tagName ? tagName : TagNames[tagId].name] = tag;\n            } else if (includeUnknown) {\n                tags[`undefined-${tagId}`] = tag;\n            }\n        }\n        offset += resourceSize + (resourceSize % 2);\n    }\n\n    return tags;\n}\n\nfunction getTagName(dataView, offset) {\n    // The name is encoded as a Pascal string (the string is prefixed with one\n    // byte containing the length of the string) and everything is padded with a\n    // null byte to make the size even.\n    const [stringSize, string] = getPascalStringFromDataView(dataView, offset);\n    return {\n        tagName: string,\n        tagNameSize: 1 + stringSize + (stringSize % 2 === 0 ? 1 : 0)\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView, decompress, COMPRESSION_METHOD_NONE, COMPRESSION_METHOD_DEFLATE} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continuous array of bytes.\n// Compressed ICC profile data only has support for a single chunk.\nfunction read(dataView, iccData, async) {\n    if (async && iccData[0].compressionMethod !== COMPRESSION_METHOD_NONE) {\n        return readCompressedIcc(dataView, iccData);\n    }\n\n    return readIcc(dataView, iccData);\n}\n\nfunction readCompressedIcc(dataView, iccData) {\n    if (!compressionMethodIsSupported(iccData[0].compressionMethod)) {\n        return {};\n    }\n    const compressedDataView = new DataView(dataView.buffer.slice(iccData[0].offset, iccData[0].offset + iccData[0].length));\n    return decompress(compressedDataView, iccData[0].compressionMethod, 'dataview')\n        .then(parseTags)\n        .catch(() => ({}));\n}\n\nfunction compressionMethodIsSupported(compressionMethod) {\n    return compressionMethod === COMPRESSION_METHOD_DEFLATE;\n}\n\nfunction readIcc(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringValueFromArray, getStringFromDataView, decompress, COMPRESSION_METHOD_NONE} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT, TYPE_ZTXT} from './image-header-png.js';\nimport Tags from './tags.js';\nimport IptcTags from './iptc-tags.js';\nimport Constants from './constants.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_ITXT_EXTRA_BYTE = 1;\nconst COMPRESSION_FLAG_COMPRESSED = 1;\nconst EXIF_OFFSET = 6;\n\nfunction read(dataView, pngTextChunks, async, includeUnknown) {\n    const tags = {};\n    const tagsPromises = [];\n    for (let i = 0; i < pngTextChunks.length; i++) {\n        const {offset, length, type} = pngTextChunks[i];\n        const nameAndValue = getNameAndValue(dataView, offset, length, type, async);\n        if (nameAndValue instanceof Promise) {\n            tagsPromises.push(nameAndValue.then(({name, value, description}) => {\n                try {\n                    if (Constants.USE_EXIF && isExifGroupTag(name, value)) {\n                        return {\n                            __exif: Tags.read(decodeRawData(value), EXIF_OFFSET, includeUnknown)\n                        };\n                    } else if (Constants.USE_IPTC && isIptcGroupTag(name, value)) {\n                        return {\n                            __iptc: IptcTags.read(decodeRawData(value), 0, includeUnknown)\n                        };\n                    } else if (name) {\n                        return {\n                            [name]: {\n                                value,\n                                description\n                            }\n                        };\n                    }\n                } catch (error) {\n                    // Ignore the broken tag.\n                }\n                return {};\n            }));\n        } else {\n            const {name, value, description} = nameAndValue;\n            if (name) {\n                tags[name] = {\n                    value,\n                    description\n                };\n            }\n        }\n    }\n\n    return {\n        readTags: tags,\n        readTagsPromise: tagsPromises.length > 0 ? Promise.all(tagsPromises) : undefined\n    };\n}\n\nfunction getNameAndValue(dataView, offset, length, type, async) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    let valueChars;\n    let parsingState = STATE_KEYWORD;\n    let compressionMethod = COMPRESSION_METHOD_NONE;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            compressionMethod = getCompressionMethod({type, dataView, offset: offset + i});\n            if (type === TYPE_ITXT) {\n                i += COMPRESSION_SECTION_ITXT_EXTRA_BYTE;\n            }\n            parsingState = moveToNextState(type, parsingState);\n            continue;\n        } else if (parsingState === STATE_TEXT) {\n            valueChars = new DataView(dataView.buffer.slice(offset + i, offset + length));\n            break;\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        }\n    }\n\n    if (compressionMethod !== COMPRESSION_METHOD_NONE && !async) {\n        return {};\n    }\n    const decompressedValueChars = decompress(valueChars, compressionMethod);\n    if (decompressedValueChars instanceof Promise) {\n        return decompressedValueChars\n            .then((_decompressedValueChars) => constructTag(_decompressedValueChars, type, langChars, keywordChars))\n            .catch(() => constructTag('<text using unknown compression>'.split(''), type, langChars, keywordChars));\n    }\n    return constructTag(decompressedValueChars, type, langChars, keywordChars);\n}\n\nfunction getCompressionMethod({type, dataView, offset}) {\n    if (type === TYPE_ITXT) {\n        if (dataView.getUint8(offset) === COMPRESSION_FLAG_COMPRESSED) {\n            return dataView.getUint8(offset + 1);\n        }\n    } else if (type === TYPE_ZTXT) {\n        return dataView.getUint8(offset);\n    }\n    return COMPRESSION_METHOD_NONE;\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && [TYPE_ITXT, TYPE_ZTXT].includes(type)) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        if (type === TYPE_ITXT) {\n            return STATE_LANG;\n        }\n        return STATE_TEXT;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction constructTag(valueChars, type, langChars, keywordChars) {\n    const value = getValue(valueChars);\n    return {\n        name: getName(type, langChars, keywordChars),\n        value,\n        description: type === TYPE_ITXT ? getDescription(valueChars) : value\n    };\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n\nfunction getValue(valueChars) {\n    if (valueChars instanceof DataView) {\n        return getStringFromDataView(valueChars, 0, valueChars.byteLength);\n    }\n    return valueChars;\n}\n\nfunction getDescription(valueChars) {\n    return TagDecoder.decode('UTF-8', valueChars);\n}\n\nfunction isExifGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type exif' && value.substring(1, 5) === 'exif';\n}\n\nfunction isIptcGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type iptc' && value.substring(1, 5) === 'iptc';\n}\n\nfunction decodeRawData(value) {\n    const parts = value.match(/\\n(exif|iptc)\\n\\s*\\d+\\n([\\s\\S]*)$/);\n    return hexToDataView(parts[2].replace(/\\n/g, ''));\n}\n\nfunction hexToDataView(hex) {\n    const dataView = new DataView(new ArrayBuffer(hex.length / 2));\n    for (let i = 0; i < hex.length; i += 2) {\n        dataView.setUint8(i / 2, parseInt(hex.substring(i, i + 2), 16));\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n    const tags = {};\n\n    const flags = Types.getByteAt(dataView, chunkOffset);\n\n    tags['Alpha'] = getAlpha(flags);\n    tags['Animation'] = getAnimation(flags);\n    tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n    tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n\n    return tags;\n}\n\nfunction getAlpha(flags) {\n    const value = flags & 0x10;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getAnimation(flags) {\n    const value = flags & 0x02;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getThreeByteValue(dataView, offset) {\n    // Values are stored little-endian.\n    const value = Types.getByteAt(dataView, offset)\n        + 256 * Types.getByteAt(dataView, offset + 1)\n        + 256 * 256 * Types.getByteAt(dataView, offset + 2)\n        + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n    return {\n        value,\n        description: value + 'px'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// https://www.w3.org/Graphics/GIF/spec-gif87.txt\n// https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView) {\n    return {\n        'GIF Version': getGifVersion(dataView),\n        'Image Width': getImageWidth(dataView),\n        'Image Height': getImageHeight(dataView),\n        'Global Color Map': getGlobalColorMap(dataView),\n        'Bits Per Pixel': getBitDepth(dataView),\n        'Color Resolution Depth': getColorResolution(dataView)\n    };\n}\n\nfunction getGifVersion(dataView) {\n    const OFFSET = 3;\n    const SIZE = 3;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = getStringFromDataView(dataView, OFFSET, SIZE);\n    return {\n        value,\n        description: value\n    };\n}\n\nfunction getImageWidth(dataView) {\n    const OFFSET = 6;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView) {\n    const OFFSET = 8;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getGlobalColorMap(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b10000000) >>> 7;\n    return {\n        value,\n        description: value === 1 ? 'Yes' : 'No'\n    };\n}\n\nfunction getColorResolution(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = ((byteValue & 0b01110000) >>> 4) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n\nfunction getBitDepth(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b00000111) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport MpfTags from './mpf-tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport PhotoshopTags from './photoshop-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport GifFileTags from './gif-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {}) {\n    if (isFilePathOrURL(data)) {\n        options.async = true;\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        options.async = true;\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^\\w+:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return fetchRemoteFile(filename, options);\n        }\n\n        return nodeGetRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction fetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeGetRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(\n    dataView,\n    {expanded = false, async = false, includeUnknown = false} = {expanded: false, async: false, includeUnknown: false}\n) {\n    let foundMetaData = false;\n    let tags = {};\n    const tagsPromises = [];\n\n    const {\n        fileType,\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets,\n        vp8xChunkOffset,\n        gifHeaderOffset\n    } = ImageHeader.parseAppMarkers(dataView, async);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_PHOTOSHOP && readTags['ImageSourceData']) {\n            const readPhotoshopTags = PhotoshopTags.read(readTags['PhotoshopSettings'].value, includeUnknown);\n            if (expanded) {\n                tags.photoshop = readPhotoshopTags;\n            } else {\n                tags = objectAssign({}, tags, readPhotoshopTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks, async);\n        if (readTags instanceof Promise) {\n            tagsPromises.push(readTags.then(addIccTags));\n        } else {\n            addIccTags(readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = MpfTags.read(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const {readTags, readTagsPromise} = PngTextTags.read(dataView, pngTextChunks, async, includeUnknown);\n        addPngTextTags(readTags);\n        if (readTagsPromise) {\n            tagsPromises.push(readTagsPromise.then((tagList) => tagList.forEach(addPngTextTags)));\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n        foundMetaData = true;\n        const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n        if (expanded) {\n            tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_GIF && hasGifFileData(gifHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = GifFileTags.read(dataView, gifHeaderOffset);\n        if (expanded) {\n            tags.gif = !tags.gif ? readTags : objectAssign({}, tags.gif, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (fileType) {\n        if (expanded) {\n            if (!tags.file) {\n                tags.file = {};\n            }\n            tags.file.FileType = fileType;\n        } else {\n            tags.FileType = fileType;\n        }\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    if (async) {\n        return Promise.all(tagsPromises).then(() => tags);\n    }\n    return tags;\n\n    function addIccTags(readTags) {\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    function addPngTextTags(readTags) {\n        if (expanded) {\n            for (const group of ['exif', 'iptc']) {\n                const groupKey = `__${group}`;\n                if (readTags[groupKey]) {\n                    tags[group] = !tags[group] ? readTags[groupKey] : objectAssign({}, tags.exif, readTags[groupKey]);\n                    delete readTags[groupKey];\n                }\n            }\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = !tags.pngText ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign(\n                {},\n                tags,\n                readTags.__exif ? readTags.__exif : {},\n                readTags.__iptc ? readTags.__iptc : {},\n                readTags\n            );\n        }\n    }\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n\nfunction hasVp8xData(vp8xChunkOffset) {\n    return vp8xChunkOffset !== undefined;\n}\n\nfunction hasGifFileData(gifHeaderOffset) {\n    return gifHeaderOffset !== undefined;\n}\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"isolate\", -2,6,11,\"\"],\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n"],"names":["DataView","constructor","buffer","undefined","length","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","this","byteLength","getUint8","offset","getUint16","littleEndian","getUint32","getInt32","getDataView","data","byteOffset","error","DataViewWrapper","getStringFromDataView","dataView","chars","i","push","getStringValueFromArray","getUnicodeStringFromDataView","pop","getPascalStringFromDataView","size","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","key","initializer","initialized","Object","defineProperty","get","configurable","enumerable","value","apply","writable","getBase64Image","image","btoa","Array","prototype","reduce","call","Uint8Array","byte","Buffer","from","toString","strRepeat","string","num","COMPRESSION_METHOD_NONE","COMPRESSION_METHOD_DEFLATE","decompress","compressionMethod","returnType","DecompressionStream","decompressionStream","decompressedStream","Blob","stream","pipeThrough","Response","arrayBuffer","then","text","Promise","reject","concat","USE_FILE","USE_JFIF","USE_PNG_FILE","USE_EXIF","USE_IPTC","USE_XMP","USE_ICC","USE_MPF","USE_PHOTOSHOP","USE_THUMBNAIL","USE_TIFF","USE_JPEG","USE_PNG","USE_HEIC","USE_WEBP","USE_GIF","getStringValue","getEncodedString","encoding","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","isTiffFile","TIFF_ID","TIFF_ID_OFFSET","ByteOrder","hasTiffMarker","findTiffOffsets","Constants","hasAppMarkers","isJpegFile","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","findJpegOffsets","fieldLength","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","appMarkerPosition","JPEG_ID_SIZE","APP_ID_OFFSET","isSOF0Marker","APP_MARKER_SIZE","isSOF2Marker","isApp0JfifMarker","JFIF_DATA_OFFSET","isApp1ExifMarker","TIFF_HEADER_OFFSET","isApp1XmpMarker","getXmpChunkDetails","isApp1ExtendedXmpMarker","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","IPTC_DATA_OFFSET","isApp2ICCMarker","iccDataOffset","APP2_ICC_DATA_OFFSET","iccDataLength","iccChunkNumber","ICC_CHUNK_NUMBER_OFFSET","iccChunksTotal","ICC_TOTAL_CHUNKS_OFFSET","chunkNumber","chunksTotal","isApp2MPFMarker","MPF_DATA_OFFSET","isAppMarker","isFillByte","fileDataOffset","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_IDENTIFIER","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","markerIdLength","isXmpIdentifier","isExtendedXmpIdentifier","dataOffset","appMarker","isPngFile","PNG_ID","findPngOffsets","async","offsets","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","isPngImageHeaderChunk","pngHeaderOffset","PNG_CHUNK_DATA_OFFSET","isPngXmpChunk","getPngXmpDataOffset","PNG_CHUNK_LENGTH_OFFSET","isPngTextChunk","chunkType","PNG_CHUNK_TYPE_OFFSET","pngTextChunks","type","isPngExifChunk","isPngIccpChunk","chunkDataLength","iccHeaderOffset","profileName","compressedProfileOffset","parseIccHeader","isPngChunk","pngChunkOffsets","PNG_XMP_PREFIX","TYPE_TEXT","TYPE_ITXT","TYPE_ZTXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","TYPE_ICCP","SUPPORTED_PNG_CHUNK_TYPES","includes","numberOfNullSeparators","char","getNullTerminatedStringFromDataView","isHeicFile","HEIC_ID","heicMajorBrand","HEIC_ID_OFFSET","indexOf","findHeicOffsets","metaOffset","metaLength","ATOM_LENGTH_SIZE","ATOM_TYPE_SIZE","ATOM_MIN_LENGTH","ATOM_TYPE_OFFSET","atomLength","getAtomLength","findMetaAtom","metaEndOffset","Math","min","exifItemOffset","ilocOffset","colrOffset","STRING_SIZE","ITEM_INDEX_REL_OFFSET","itemName","findMetaItems","exifOffset","EXIF_ITEM_OFFSET_SIZE","ILOC_DATA_OFFSET","EXIF_POINTER_OFFSET","EXIF_POINTER_SIZE","EXIF_PREFIX_LENGTH_OFFSET","ILOC_ITEM_SIZE","exifItemIndex","exifPointer","findExifOffset","ITEM_TYPE_OFFSET","ITEM_TYPE_SIZE","ITEM_CONTENT_OFFSET","colorType","findIccChunks","extendsToEndOfFile","hasExtendedSize","ATOM_EXTENDED_SIZE_OFFSET","hasEmptyHighBits","isWebpFile","RIFF_ID","WEBP_MARKER","findOffsets","EXIF_IDENTIFIER","vp8xChunkOffset","chunkId","chunkSize","isGifFile","GIF_SIGNATURES","GIF_SIGNATURE_SIZE","gifHeaderOffset","parseAppMarkers","Tiff","addFileType","Jpeg","Png","Heic","Webp","Gif","fileType","fileTypeDescription","description","ApertureValue","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","TagNamesCommon","values","formats","isArray","sample","ref","_ref","numerator","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengths","IFD_TYPE_0TH","IFD_TYPE_1ST","IFD_TYPE_EXIF","IFD_TYPE_GPS","IFD_TYPE_INTEROPERABILITY","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getTagValueAt","Types","get0thIfdOffset","readIfd","ifdType","includeUnknown","FIELD_COUNT_SIZE","tags","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","nextIfdOffset","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","j","splitNullSeparatedAsciiString","asciiValue","decodeURIComponent","escape","decodeAsciiValue","tagName","tagDescription","getDescriptionFromTagValue","count","valueIndex","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","read","read0thIfd","readExifIfd","readGpsIfd","readInteroperabilityIfd","images","ceil","ENTRY_SIZE","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","getImageOffset","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","flags","flagsDescription","imageFormat","imageIndex","mpEntry","isFirstIndividualImage","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","TextDecoder","decode","Decoder","TAG_HEADER_SIZE","BYTES_8BIM","BYTES_8BIM_SIZE","RESOURCE_BLOCK_HEADER_SIZE","NAA_RESOURCE_BLOCK_TYPE","parseTags","naaBlock","newDataOffset","resourceBlock","getResourceBlock","isNaaResourceBlock","getBlockPadding","getNaaResourceBlock","endOfBlockOffset","tagSize","TAG_LEAD_BYTE","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","DOMParser","__non_webpack_require__","errorHandler","chunks","readTags","standardXmp","extendedXmp","completeChunks","combineChunks","extractCompleteChunks","hasStandardTags","hasExtendedTags","_raw","totalLength","chunk","combinedChunks","set","chunkDataView","doc","raw","domParser","console","warn","xmlString","parseFromString","xmlSource","replace","documentElement","nodeName","textContent","getDocument","parseXMPObject","convertToObject","getRDF","node","childNodes","isTopNode","elements","getChildNodes","nodes","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","item","getDescriptionOfArray","XmpTagNames","descriptions","getClearTextKey","getDescriptionOfObject","children","parseNodeAsTag","isDuplicateTag","parseNodeAsSimpleValue","parseNodeAsDuplicateTag","trim","isEmptyResourceTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseNodeAttributes","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","paths","TYPE_SIZE","PATH_RECORD_TYPES","path","JSON","stringify","parseBezierKnot","getFixedPointNumber","parsePathPoint","vertical","binaryPoint","sign","integer","radix","parseFloatRadix","bytes","signature","SIGNATURE_SIZE","tagId","TAG_ID_SIZE","tagNameSize","resourceSize","RESOURCE_LENGTH_SIZE","SIGNATURE","valueDataView","stringSize","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","sliceToString","iccData","compressedDataView","catch","readCompressedIcc","totalIccProfileLength","sum","icc","iccBinaryData","getBuffer","iccDataChunk","find","chunkData","readIcc","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","iccProfileKeys","profileEntry","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","valObj","valIndex","getBitDepth","getColorType","getCompression","getFilter","getInterlace","tagsPromises","nameAndValue","getNameAndValue","isExifGroupTag","__exif","Tags","decodeRawData","EXIF_OFFSET","isIptcGroupTag","__iptc","IptcTags","readTagsPromise","all","STATE_KEYWORD","STATE_COMPRESSION","STATE_LANG","STATE_TRANSLATED_KEYWORD","STATE_TEXT","COMPRESSION_SECTION_ITXT_EXTRA_BYTE","COMPRESSION_FLAG_COMPRESSED","keywordChars","langChars","translatedKeywordChars","valueChars","parsingState","getCompressionMethod","moveToNextState","decompressedValueChars","_decompressedValueChars","constructTag","_ref2","getValue","getName","lang","hex","ArrayBuffer","setUint8","hexToDataView","match","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","getAlpha","getAnimation","getThreeByteValue","IMAGE_WIDTH_OFFSET","IMAGE_HEIGHT_OFFSET","getGifVersion","getGlobalColorMap","getColorResolution","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","options","isFilePathOrURL","filename","fetch","url","method","isInteger","headers","range","response","fetchRemoteFile","resolve","requireNodeGet","statusCode","on","statusMessage","resume","nodeGetRemoteFile","isDataUri","dataUri","atob","decodedData","dataUriToBuffer","fs","requireNodeFs","open","fd","stat","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","file","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","loadView","errors","exifErrors","isBuffer","isNodeBuffer","expanded","foundMetaData","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Thumbnail","exif","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","iptc","hasXmpData","readXmpTags","XmpTags","xmp","readPhotoshopTags","PhotoshopTags","photoshop","hasIccData","readIccTags","IccTags","addIccTags","hasMpfData","readMpfTags","MpfTags","mpf","PngFileTags","png","pngFile","hasPngTextData","PngTextTags","addPngTextTags","tagList","hasPngData","PngTags","hasVp8xData","Vp8xTags","riff","hasGifFileData","GifFileTags","gif","FileType","group","groupKey","pngText","iccDataOffsets","jsonHighlighting","styleTags","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","parse","state","e","SyntaxError","pos","m","line","getErrorPosition","severity","to","jsonLanguage","LRLanguage","define","configure","props","indentNodeProp","add","continuedIndent","except","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport"],"sourceRoot":""}