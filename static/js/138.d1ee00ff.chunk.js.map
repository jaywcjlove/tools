{"version":3,"file":"static/js/138.d1ee00ff.chunk.js","mappings":"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","sources":["../../packages/generate-password/src/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Wrapper, StyledLayout, CodeLineCopy, Button, Spacing } from '@wcj/tools-react-components';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 6px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-items: center;\n  user-select: none;\n  gap: 10px;\n`;\n\nexport interface InputRangeProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {\n  ref?: any;\n  range?: number;\n  extra?: React.ReactNode;\n}\n\nconst InputRange: React.FC<React.PropsWithChildren<InputRangeProps>> = (props) => {\n  return (\n    <Label>\n      <Input type=\"range\" min={8} max={50} style={{ flex: 1 }} {...props} value={props.range} />\n      <span>{props.range}</span>\n      {props.extra}\n    </Label>\n  );\n};\n\nconst LOWERCASE = 'abcdefghijklmnopqrstuvwxyz';\nconst UPPERCASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst NUMERIC = '0123456789';\nconst SPECIAL_CHARACTER = '!@#$%^&*()_+~`|}{[]:;?><,./-=';\n\nfunction generatePassword(\n  len: number = 8,\n  lowerCase: boolean = true,\n  upperCase: boolean = true,\n  numeric: boolean = true,\n  special: boolean = true,\n) {\n  let password = '';\n  if (!lowerCase && !upperCase && !numeric && !special) {\n    return password;\n  }\n  while (password.length < len) {\n    const entity1 = Math.ceil(LOWERCASE.length * Math.random() * Math.random()) - 1;\n    const entity2 = Math.ceil(NUMERIC.length * Math.random() * Math.random()) - 1;\n    const entity3 = Math.ceil(SPECIAL_CHARACTER.length * Math.random() * Math.random()) - 1;\n    const entity4 = Math.ceil(UPPERCASE.length * Math.random() * Math.random()) - 1;\n    if (lowerCase && password.length < len) {\n      password += LOWERCASE.charAt(entity1);\n    }\n    if (upperCase && password.length < len) {\n      password += UPPERCASE.charAt(entity4);\n    }\n    if (numeric && password.length < len) {\n      password += NUMERIC.charAt(entity2);\n    }\n    if (special && password.length < len) {\n      password += SPECIAL_CHARACTER.charAt(entity3);\n    }\n  }\n  return password.trim();\n}\n\nexport default function GeneratePassword() {\n  const [range, setRange] = useState<number>(12);\n  const [lowerCase, setLowerCase] = useState<boolean>(true);\n  const [history, setHistory] = useState<string[]>([]);\n  const [upperCase, setUpperCase] = useState<boolean>(true);\n  const [numeric, setNumeric] = useState<boolean>(true);\n  const [special, setSpecial] = useState<boolean>(true);\n  const addHistory = (str: string) => {\n    const data = [...history];\n    data.unshift(str);\n    setHistory(data.slice(0, 20));\n  };\n  useEffect(() => {\n    const password = generatePassword(range, lowerCase, upperCase, numeric, special);\n    addHistory(password);\n  }, [range, lowerCase, upperCase, numeric, special]);\n\n  return (\n    <Wrapper>\n      <StyledLayout title=\"Setting\">\n        <InputRange\n          style={{ maxWidth: 630 }}\n          range={range}\n          value={range}\n          onChange={(evn) => setRange(Number((evn.target as HTMLInputElement).value))}\n          extra={\n            <select value={range} onChange={(evn) => setRange(Number(evn.target.value))}>\n              {[...Array(43)].map((_, idx) => (\n                <option value={idx + 8} key={idx}>\n                  {idx + 8}\n                </option>\n              ))}\n            </select>\n          }\n        />\n        <Spacing style={{ paddingTop: 10 }}>\n          <Label>\n            <Input type=\"checkbox\" checked={lowerCase} onChange={(evn) => setLowerCase(evn.target.checked)} />\n            Lower Case Letter(a..z)\n          </Label>\n          <Label>\n            <Input type=\"checkbox\" checked={upperCase} onChange={(evn) => setUpperCase(evn.target.checked)} />\n            Upper Case Letter(A..Z)\n          </Label>\n          <Label>\n            <Input type=\"checkbox\" checked={numeric} onChange={(evn) => setNumeric(evn.target.checked)} />\n            Number (0..9)\n          </Label>\n          <Label>\n            <Input type=\"checkbox\" checked={special} onChange={(evn) => setSpecial(evn.target.checked)} />\n            Special characters\n          </Label>\n        </Spacing>\n        <Button\n          style={{ marginTop: 10 }}\n          onClick={() => {\n            const password = generatePassword(range, lowerCase, upperCase, numeric, special);\n            addHistory(password);\n          }}\n        >\n          Generate Password\n        </Button>\n        <Spacing style={{ paddingTop: 10 }}>\n          {history.map((password, key) => {\n            return (\n              <CodeLineCopy label={`${key + 1}`} key={key}>\n                {password}\n              </CodeLineCopy>\n            );\n          })}\n        </Spacing>\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["Input","styled","_templateObject","Label","_templateObject2","InputRange","props","_jsxs","children","_jsx","type","min","max","style","flex","value","range","extra","LOWERCASE","UPPERCASE","NUMERIC","SPECIAL_CHARACTER","generatePassword","len","lowerCase","upperCase","numeric","special","password","length","entity1","Math","ceil","random","entity2","entity3","entity4","charAt","trim","GeneratePassword","useState","setRange","setLowerCase","history","setHistory","setUpperCase","setNumeric","setSpecial","addHistory","str","data","unshift","slice","useEffect","Wrapper","StyledLayout","title","maxWidth","onChange","evn","Number","target","Array","map","_","idx","Spacing","paddingTop","checked","Button","marginTop","onClick","key","CodeLineCopy","label"],"sourceRoot":""}