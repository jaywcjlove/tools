{"version":3,"file":"static/js/7415.9b8d6dea.chunk.js","mappings":"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","sources":["../../node_modules/@lezer/json/dist/index.js","../../node_modules/@codemirror/lang-json/dist/index.js","../../packages/json-ini/node_modules/ini/lib/ini.js","../../packages/json-ini/esm/sample.js","../../packages/json-ini/esm/index.js","../../node_modules/@codemirror/legacy-modes/mode/yaml.js"],"sourcesContent":["import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \", :\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l\",\n  stateData: \"#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"âš  JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"isolate\", -2,6,11,\"\"],\n    [\"openedBy\", 7,\"{\",14,\"[\"],\n    [\"closedBy\", 8,\"}\",15,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oe~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Og~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zO]~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yO[~~'OO_~~'TO^~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n","const { hasOwnProperty } = Object.prototype\n\nconst encode = (obj, opt = {}) => {\n  if (typeof opt === 'string') {\n    opt = { section: opt }\n  }\n  opt.align = opt.align === true\n  opt.newline = opt.newline === true\n  opt.sort = opt.sort === true\n  opt.whitespace = opt.whitespace === true || opt.align === true\n  // The `typeof` check is required because accessing the `process` directly fails on browsers.\n  /* istanbul ignore next */\n  opt.platform = opt.platform || (typeof process !== 'undefined' && process.platform)\n  opt.bracketedArray = opt.bracketedArray !== false\n\n  /* istanbul ignore next */\n  const eol = opt.platform === 'win32' ? '\\r\\n' : '\\n'\n  const separator = opt.whitespace ? ' = ' : '='\n  const children = []\n\n  const keys = opt.sort ? Object.keys(obj).sort() : Object.keys(obj)\n\n  let padToChars = 0\n  // If aligning on the separator, then padToChars is determined as follows:\n  // 1. Get the keys\n  // 2. Exclude keys pointing to objects unless the value is null or an array\n  // 3. Add `[]` to array keys\n  // 4. Ensure non empty set of keys\n  // 5. Reduce the set to the longest `safe` key\n  // 6. Get the `safe` length\n  if (opt.align) {\n    padToChars = safe(\n      (\n        keys\n          .filter(k => obj[k] === null || Array.isArray(obj[k]) || typeof obj[k] !== 'object')\n          .map(k => Array.isArray(obj[k]) ? `${k}[]` : k)\n      )\n        .concat([''])\n        .reduce((a, b) => safe(a).length >= safe(b).length ? a : b)\n    ).length\n  }\n\n  let out = ''\n  const arraySuffix = opt.bracketedArray ? '[]' : ''\n\n  for (const k of keys) {\n    const val = obj[k]\n    if (val && Array.isArray(val)) {\n      for (const item of val) {\n        out += safe(`${k}${arraySuffix}`).padEnd(padToChars, ' ') + separator + safe(item) + eol\n      }\n    } else if (val && typeof val === 'object') {\n      children.push(k)\n    } else {\n      out += safe(k).padEnd(padToChars, ' ') + separator + safe(val) + eol\n    }\n  }\n\n  if (opt.section && out.length) {\n    out = '[' + safe(opt.section) + ']' + (opt.newline ? eol + eol : eol) + out\n  }\n\n  for (const k of children) {\n    const nk = splitSections(k, '.').join('\\\\.')\n    const section = (opt.section ? opt.section + '.' : '') + nk\n    const child = encode(obj[k], {\n      ...opt,\n      section,\n    })\n    if (out.length && child.length) {\n      out += eol\n    }\n\n    out += child\n  }\n\n  return out\n}\n\nfunction splitSections (str, separator) {\n  var lastMatchIndex = 0\n  var lastSeparatorIndex = 0\n  var nextIndex = 0\n  var sections = []\n\n  do {\n    nextIndex = str.indexOf(separator, lastMatchIndex)\n\n    if (nextIndex !== -1) {\n      lastMatchIndex = nextIndex + separator.length\n\n      if (nextIndex > 0 && str[nextIndex - 1] === '\\\\') {\n        continue\n      }\n\n      sections.push(str.slice(lastSeparatorIndex, nextIndex))\n      lastSeparatorIndex = nextIndex + separator.length\n    }\n  } while (nextIndex !== -1)\n\n  sections.push(str.slice(lastSeparatorIndex))\n\n  return sections\n}\n\nconst decode = (str, opt = {}) => {\n  opt.bracketedArray = opt.bracketedArray !== false\n  const out = Object.create(null)\n  let p = out\n  let section = null\n  //          section          |key      = value\n  const re = /^\\[([^\\]]*)\\]\\s*$|^([^=]+)(=(.*))?$/i\n  const lines = str.split(/[\\r\\n]+/g)\n  const duplicates = {}\n\n  for (const line of lines) {\n    if (!line || line.match(/^\\s*[;#]/) || line.match(/^\\s*$/)) {\n      continue\n    }\n    const match = line.match(re)\n    if (!match) {\n      continue\n    }\n    if (match[1] !== undefined) {\n      section = unsafe(match[1])\n      if (section === '__proto__') {\n        // not allowed\n        // keep parsing the section, but don't attach it.\n        p = Object.create(null)\n        continue\n      }\n      p = out[section] = out[section] || Object.create(null)\n      continue\n    }\n    const keyRaw = unsafe(match[2])\n    let isArray\n    if (opt.bracketedArray) {\n      isArray = keyRaw.length > 2 && keyRaw.slice(-2) === '[]'\n    } else {\n      duplicates[keyRaw] = (duplicates?.[keyRaw] || 0) + 1\n      isArray = duplicates[keyRaw] > 1\n    }\n    const key = isArray && keyRaw.endsWith('[]')\n      ? keyRaw.slice(0, -2) : keyRaw\n\n    if (key === '__proto__') {\n      continue\n    }\n    const valueRaw = match[3] ? unsafe(match[4]) : true\n    const value = valueRaw === 'true' ||\n      valueRaw === 'false' ||\n      valueRaw === 'null' ? JSON.parse(valueRaw)\n      : valueRaw\n\n    // Convert keys with '[]' suffix to an array\n    if (isArray) {\n      if (!hasOwnProperty.call(p, key)) {\n        p[key] = []\n      } else if (!Array.isArray(p[key])) {\n        p[key] = [p[key]]\n      }\n    }\n\n    // safeguard against resetting a previously defined\n    // array by accidentally forgetting the brackets\n    if (Array.isArray(p[key])) {\n      p[key].push(value)\n    } else {\n      p[key] = value\n    }\n  }\n\n  // {a:{y:1},\"a.b\":{x:2}} --> {a:{y:1,b:{x:2}}}\n  // use a filter to return the keys that have to be deleted.\n  const remove = []\n  for (const k of Object.keys(out)) {\n    if (!hasOwnProperty.call(out, k) ||\n      typeof out[k] !== 'object' ||\n      Array.isArray(out[k])) {\n      continue\n    }\n\n    // see if the parent section is also an object.\n    // if so, add it to that, and mark this one for deletion\n    const parts = splitSections(k, '.')\n    p = out\n    const l = parts.pop()\n    const nl = l.replace(/\\\\\\./g, '.')\n    for (const part of parts) {\n      if (part === '__proto__') {\n        continue\n      }\n      if (!hasOwnProperty.call(p, part) || typeof p[part] !== 'object') {\n        p[part] = Object.create(null)\n      }\n      p = p[part]\n    }\n    if (p === out && nl === l) {\n      continue\n    }\n\n    p[nl] = out[k]\n    remove.push(k)\n  }\n  for (const del of remove) {\n    delete out[del]\n  }\n\n  return out\n}\n\nconst isQuoted = val => {\n  return (val.startsWith('\"') && val.endsWith('\"')) ||\n    (val.startsWith(\"'\") && val.endsWith(\"'\"))\n}\n\nconst safe = val => {\n  if (\n    typeof val !== 'string' ||\n    val.match(/[=\\r\\n]/) ||\n    val.match(/^\\[/) ||\n    (val.length > 1 && isQuoted(val)) ||\n    val !== val.trim()\n  ) {\n    return JSON.stringify(val)\n  }\n  return val.split(';').join('\\\\;').split('#').join('\\\\#')\n}\n\nconst unsafe = val => {\n  val = (val || '').trim()\n  if (isQuoted(val)) {\n    // remove the single quotes before calling JSON.parse\n    if (val.charAt(0) === \"'\") {\n      val = val.slice(1, -1)\n    }\n    try {\n      val = JSON.parse(val)\n    } catch {\n      // ignore errors\n    }\n  } else {\n    // walk the val to find the first not-escaped ; character\n    let esc = false\n    let unesc = ''\n    for (let i = 0, l = val.length; i < l; i++) {\n      const c = val.charAt(i)\n      if (esc) {\n        if ('\\\\;#'.indexOf(c) !== -1) {\n          unesc += c\n        } else {\n          unesc += '\\\\' + c\n        }\n\n        esc = false\n      } else if (';#'.indexOf(c) !== -1) {\n        break\n      } else if (c === '\\\\') {\n        esc = true\n      } else {\n        unesc += c\n      }\n    }\n    if (esc) {\n      unesc += '\\\\'\n    }\n\n    return unesc.trim()\n  }\n  return val\n}\n\nmodule.exports = {\n  parse: decode,\n  decode,\n  stringify: encode,\n  encode,\n  safe,\n  unsafe,\n}\n","export var json = \"{\\n  \\\"app_mode\\\": \\\"development\\\",\\n  \\\"paths\\\": {\\n    \\\"data\\\": \\\"/home/git/grafana\\\"\\n  },\\n  \\\"server\\\": {\\n    \\\"protocol\\\": \\\"http\\\",\\n    \\\"http_port\\\": \\\"9999\\\",\\n    \\\"enforce_domain\\\": true\\n  }\\n}\";\nexport var val = \"# possible values : production, development\\napp_mode = development\\n\\n[paths]\\n# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)\\ndata = /home/git/grafana\\n\\n[server]\\n# Protocol (http or https)\\nprotocol = http\\n\\n# The http port  to use\\nhttp_port = 9999\\n\\n# Redirect to correct domain if host header does not match domain\\n# Prevents DNS rebinding attacks\\nenforce_domain = true\";","import { LayoutEditorConverter } from '@wcj/tools-react-components';\nimport ini from 'ini';\nimport { StreamLanguage } from '@codemirror/language';\nimport { yaml } from '@codemirror/legacy-modes/mode/yaml';\nimport { json } from '@codemirror/lang-json';\nimport * as sample from \"./sample.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function JSON2Ini() {\n  return /*#__PURE__*/_jsx(LayoutEditorConverter, {\n    sample: sample,\n    leftProps: {\n      title: 'JSON',\n      extensions: [json()],\n      onLeftInput: val => {\n        var iniStr = ini.stringify(JSON.parse(val));\n        return iniStr;\n      }\n    },\n    rightProps: {\n      title: 'INI',\n      extensions: [StreamLanguage.define(yaml)],\n      onRightInput: val => {\n        var jsonStr = JSON.stringify(ini.parse(val), null, 2);\n        return jsonStr;\n      }\n    }\n  });\n}","var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\nvar keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\nexport const yaml = {\n  name: \"yaml\",\n  token: function(stream, state) {\n    var ch = stream.peek();\n    var esc = state.escaped;\n    state.escaped = false;\n    /* comments */\n    if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n      return \"string\";\n\n    if (state.literal && stream.indentation() > state.keyCol) {\n      stream.skipToEnd(); return \"string\";\n    } else if (state.literal) { state.literal = false; }\n    if (stream.sol()) {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      /* document start */\n      if(stream.match('---')) { return \"def\"; }\n      /* document end */\n      if (stream.match('...')) { return \"def\"; }\n      /* array list item */\n      if (stream.match(/^\\s*-\\s+/)) { return 'meta'; }\n    }\n    /* inline pairs/lists */\n    if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n      if (ch == '{')\n        state.inlinePairs++;\n      else if (ch == '}')\n        state.inlinePairs--;\n      else if (ch == '[')\n        state.inlineList++;\n      else\n        state.inlineList--;\n      return 'meta';\n    }\n\n    /* list separator */\n    if (state.inlineList > 0 && !esc && ch == ',') {\n      stream.next();\n      return 'meta';\n    }\n    /* pairs separator */\n    if (state.inlinePairs > 0 && !esc && ch == ',') {\n      state.keyCol = 0;\n      state.pair = false;\n      state.pairStart = false;\n      stream.next();\n      return 'meta';\n    }\n\n    /* start of value of a pair */\n    if (state.pairStart) {\n      /* block literals */\n      if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n      /* references */\n      if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable'; }\n      /* numbers */\n      if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n      if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n      /* keywords */\n      if (stream.match(keywordRegex)) { return 'keyword'; }\n    }\n\n    /* pairs (associative arrays) -> key */\n    if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n      state.pair = true;\n      state.keyCol = stream.indentation();\n      return \"atom\";\n    }\n    if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n    /* nothing found, continue */\n    state.pairStart = false;\n    state.escaped = (ch == '\\\\');\n    stream.next();\n    return null;\n  },\n  startState: function() {\n    return {\n      pair: false,\n      pairStart: false,\n      keyCol: 0,\n      inlinePairs: 0,\n      inlineList: 0,\n      literal: false,\n      escaped: false\n    };\n  },\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":["jsonHighlighting","styleTags","String","tags","string","Number","number","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","doc","toString","e","SyntaxError","pos","error","m","message","match","Math","min","length","line","from","getErrorPosition","severity","to","jsonLanguage","LRLanguage","define","name","configure","props","indentNodeProp","add","Object","continuedIndent","except","Array","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport","hasOwnProperty","prototype","encode","obj","opt","arguments","undefined","section","align","newline","sort","whitespace","platform","process","bracketedArray","eol","children","keys","padToChars","safe","filter","k","isArray","map","concat","reduce","a","b","out","arraySuffix","val","item","padEnd","push","nk","splitSections","join","child","str","lastMatchIndex","lastSeparatorIndex","nextIndex","sections","indexOf","slice","decode","create","p","re","lines","split","duplicates","unsafe","keyRaw","key","endsWith","valueRaw","value","call","remove","parts","l","pop","nl","replace","part","del","isQuoted","startsWith","trim","stringify","esc","unesc","i","c","charAt","module","exports","JSON2Ini","_jsx","LayoutEditorConverter","sample","leftProps","title","extensions","onLeftInput","ini","rightProps","StreamLanguage","yaml","onRightInput","keywordRegex","RegExp","token","stream","ch","peek","escaped","test","skipToEnd","literal","indentation","keyCol","sol","pair","pairStart","inlinePairs","inlineList","next","startState","commentTokens"],"sourceRoot":""}