{"version":3,"file":"static/js/2820.1af831d6.chunk.js","mappings":"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","sources":["../../packages/css-easing-animation/src/Bezier.ts","../../packages/css-easing-animation/src/CubicBezier.ts","../../packages/css-easing-animation/src/EffectBox.tsx","../../packages/css-easing-animation/src/index.tsx"],"sourcesContent":["export class Bezier {\n  x: number;\n  y: number;\n  width: number = 12;\n  height: number = 12;\n  left: number = 0;\n  right: number = 0;\n  top: number = 0;\n  bottom: number = 0;\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n  getSides() {\n    this.left = this.x - this.width / 2;\n    this.right = this.left + this.width;\n    this.top = this.y - this.height / 2;\n    this.bottom = this.top + this.height;\n  }\n  draw(ctx: CanvasRenderingContext2D) {\n    this.getSides();\n    ctx.fillStyle = '#3ca35b';\n    ctx.fillRect(this.left, this.top, this.width, this.height);\n  }\n}\n\nexport class Graph {\n  x = 0;\n  y = 130;\n  height = 200;\n  width = 200;\n  constructor() {}\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.save();\n\n    ctx.fillStyle = '#fff';\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n\n    // the 0.5 offset is to account for stroke width to make lines sharp\n    ctx.strokeStyle = '#d8dee3';\n    ctx.lineWidth = 1;\n    ctx.strokeRect(this.x + 0.5, this.y - 0.5, this.width - 1, this.height);\n\n    ctx.restore();\n  }\n}\n","import { Bezier, Graph } from './Bezier';\n\nexport type Points = { x1: number; y1: number; x2: number; y2: number };\n\nexport const getPoint = (str: string): Points => {\n  const [x1 = 0, y1 = 0, x2 = 0, y2 = 0] = str.split(',').map((s) => Number(s.trim()));\n  return { x1, y1, x2, y2 };\n};\n\nfunction isTouchEvent(e: MouseEvent | TouchEvent): e is TouchEvent {\n  return e.type === 'touchstart' || e.type === 'touchend' || e.type === 'touchmove';\n}\n\nexport class CubicBezier {\n  canvas?: HTMLCanvasElement;\n  timer = 500;\n  handles = [new Bezier(50, 280), new Bezier(150, 180)];\n  onChange?: (point: Points, isDrag?: boolean) => void;\n  graph = new Graph();\n  drag = false;\n  draggingObj?: Bezier;\n  oldX: number = 0;\n  oldY: number = 0;\n  /**\n   * @example `cubic-bezier(0.42, 0, 1, 1)`\n   */\n  css = '';\n  get time() {\n    return this.timer;\n  }\n  get getCssStr() {\n    return this.css;\n  }\n  get ctx() {\n    return this.canvas ? this.canvas.getContext('2d') : null;\n  }\n  set time(num: number) {\n    this.timer = num || 500;\n  }\n  constructor(dom: HTMLCanvasElement) {\n    this.canvas = dom;\n\n    this.onPress = this.onPress.bind(this);\n    this.touchPress = this.touchPress.bind(this);\n    this.onRelease = this.onRelease.bind(this);\n    this.touchEnd = this.touchEnd.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.touchMove = this.touchMove.bind(this);\n\n    this.canvas.addEventListener('mousedown', this.onPress, false);\n    this.canvas.addEventListener('touchstart', this.touchPress, false);\n  }\n  /** get the x and y pos, normalized by getOffset */\n  getPos(event: MouseEvent | TouchEvent) {\n    const evn = isTouchEvent(event) ? event.touches[0] : event;\n    const mouseX = evn.pageX - this.getOffSet(evn.target).left;\n    const mouseY = evn.pageY - this.getOffSet(evn.target).top;\n\n    return {\n      x: mouseX,\n      y: mouseY,\n    };\n  }\n  /** from quirksmode.org. Modified slightly to return obj */\n  getOffSet(obj: any) {\n    let curleft = 0;\n    let curtop = 0;\n    if (obj.offsetParent) {\n      do {\n        curleft += obj.offsetLeft;\n        curtop += obj.offsetTop;\n      } while ((obj = obj.offsetParent));\n    }\n\n    return {\n      left: curleft,\n      top: curtop,\n    };\n  }\n  onPress(event: MouseEvent | TouchEvent) {\n    const mouseCoordinates = this.getPos(event);\n    const x = mouseCoordinates.x;\n    const y = mouseCoordinates.y;\n    event.preventDefault();\n    event.stopPropagation(); //not sure if this is needed\n\n    const evn = isTouchEvent(event) ? event.touches[0] : event;\n    // const evn = event instanceof TouchEvent ? event.touches[0] : event;\n\n    //check to see if over any handles\n    for (let i = 0; i < this.handles.length; i++) {\n      let current = this.handles[i],\n        curLeft = current.left,\n        curRight = current.right,\n        curTop = current.top,\n        curBottom = current.bottom;\n\n      //20 px padding for chubby fingers\n      curLeft -= 20;\n      curRight += 20;\n      curTop -= 20;\n      curBottom += 20;\n\n      //console.log('current.x:',current.x, 'current.y:',current.y)\n      if (x >= curLeft && x <= curRight && y >= curTop && y <= curBottom) {\n        //over the current handle\n        //console.log('over')\n        //drag = true;\n        this.draggingObj = current;\n        this.oldX = evn.pageX;\n        this.oldY = evn.pageY;\n        document.addEventListener('mouseup', this.onRelease, false);\n        document.addEventListener('touchend', this.touchEnd, false);\n        document.addEventListener('mousemove', this.onMove, false);\n        document.addEventListener('touchmove', this.touchMove, false);\n\n        if (this.canvas) {\n          this.canvas.style.cursor = 'move';\n        }\n        // set move cursor\n        document.body.style.cursor = 'move';\n      }\n    }\n  }\n  touchEnd(event: TouchEvent) {\n    this.onRelease();\n    event.preventDefault();\n  }\n  onMove(event: TouchEvent | MouseEvent) {\n    if (!this.canvas) return;\n    let pageX = 0;\n    let pageY = 0;\n    if (isTouchEvent(event)) {\n      pageX = event.touches[0].pageX;\n      pageY = event.touches[0].pageY;\n    } else {\n      pageX = event.pageX;\n      pageY = event.pageY;\n    }\n\n    let x = pageX - this.getOffSet(this.canvas).left,\n      y = pageY - this.getOffSet(this.canvas).top;\n\n    if (x > this.graph.width) {\n      x = this.graph.width;\n    }\n    if (x < 0) {\n      x = 0;\n    }\n    if (y > this.canvas.height) {\n      y = this.canvas.height;\n    }\n    if (y < 0) {\n      y = 0;\n    }\n    if (this.draggingObj) {\n      this.draggingObj.x = x;\n      this.draggingObj.y = y;\n    }\n\n    this.updateDrawing(true);\n  }\n  touchMove(event: TouchEvent) {\n    this.onMove(event);\n    event.preventDefault();\n  }\n  onRelease() {\n    this.drag = false;\n\n    if (this.canvas) {\n      // restore pointer cursor\n      this.canvas.style.cursor = 'pointer';\n      document.body.style.cursor = 'default';\n    }\n\n    document.removeEventListener('mousemove', this.onMove, false);\n    document.removeEventListener('touchmove', this.touchMove, false);\n    document.removeEventListener('mouseup', this.onRelease, false);\n    document.removeEventListener('touchend', this.touchEnd, false);\n  }\n  touchPress(event: TouchEvent) {\n    this.onPress(event);\n    event.preventDefault();\n  }\n  updateDrawing(isDrag: boolean = false) {\n    const canvas = this.canvas;\n    if (!canvas || !this.ctx || this.handles?.length !== 2) return;\n    this.ctx.clearRect(0, 0, canvas.width, canvas.height);\n    // draw graph\n    this.graph.draw(this.ctx);\n    // get handles\n    const cp1 = this.handles[0];\n    const cp2 = this.handles[1];\n\n    // draw bezier curve\n    this.ctx.save();\n    this.ctx.strokeStyle = '#4C84D3';\n    this.ctx.lineWidth = 3;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.graph.x, this.graph.y + this.graph.height);\n    //start at bottom left, first handle is cp1, second handle is cp2, end is top right\n    this.ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, this.graph.width, this.graph.y);\n    this.ctx.stroke();\n    this.ctx.restore();\n\n    // draw anchor point lines\n    this.ctx.strokeStyle = '#f00';\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.graph.x, this.graph.y + this.graph.height);\n    this.ctx.lineTo(cp1.x, cp1.y);\n    this.ctx.moveTo(this.graph.width, this.graph.y);\n    this.ctx.lineTo(cp2.x, cp2.y);\n    this.ctx.stroke();\n\n    // draw handles\n    for (var i = 0; i < this.handles.length; i++) {\n      this.handles[i].draw(this.ctx);\n    }\n\n    const x1 = (cp1.x / this.graph.width).toFixed(3);\n    const y1 = ((this.graph.height + this.graph.y - cp1.y) / this.graph.height).toFixed(3);\n    const x2 = (cp2.x / canvas.width).toFixed(3);\n    const y2 = ((this.graph.height + this.graph.y - cp2.y) / this.graph.height).toFixed(3);\n    this.css = `${x1}, ${y1}, ${x2}, ${y2}`;\n    if (this.onChange) {\n      this.onChange({ x1: Number(x1), y1: Number(y1), x2: Number(x2), y2: Number(y2) }, isDrag);\n    }\n  }\n  change({ x1, y1, x2, y2 }: Points) {\n    const cp1 = this.handles[0];\n    const cp2 = this.handles[1];\n    cp1.x = x1 * this.graph.width;\n    cp1.y = this.graph.y + this.graph.height - y1 * this.graph.height;\n    cp2.x = x2 * this.graph.width;\n    cp2.y = this.graph.y + this.graph.height - y2 * this.graph.height;\n    this.updateDrawing();\n  }\n}\n","import styled, { css } from 'styled-components';\n\nexport type Effect = 'left' | 'width' | 'height' | 'opacity';\n\nconst Main = styled.div`\n  border: 1px solid #3ca35b;\n  border-radius: 5px;\n  max-width: 360px;\n  width: 100%;\n`;\n\ninterface BlockProps extends EffectBoxProps {}\n\nconst Block = styled.div<BlockProps>`\n  width: 100px;\n  height: 100px;\n  background-color: #3ca35b;\n  position: relative;\n  left: 0px;\n  opacity: 1;\n  transform: translateZ(0);\n  ${(props) =>\n    props.css &&\n    css`\n      transition: all ${props.second}s cubic-bezier(${props.css}) 0s;\n    `}\n  ${(props) =>\n    props.type === 'width' &&\n    css`\n      width: 100%;\n    `}\n  ${(props) =>\n    props.type === 'left' &&\n    css`\n      left: calc(100% - 100px);\n    `}\n  ${(props) =>\n    props.type === 'height' &&\n    css`\n      height: 355px;\n    `}\n  ${(props) =>\n    props.type === 'opacity' &&\n    css`\n      opacity: 0;\n    `}\n`;\n\ninterface EffectBoxProps {\n  css?: string;\n  second?: number;\n  type?: Effect;\n}\n\nexport const EffectBox = (props: EffectBoxProps) => {\n  const { type = '' } = props;\n  return (\n    <Main>\n      <Block {...props} />\n    </Main>\n  );\n};\n","import { useState, useEffect, useRef, Fragment } from 'react';\nimport { Wrapper, StyledLayout, CopyButton, CodeLineCopy, Spacing } from '@wcj/tools-react-components';\nimport styled from 'styled-components';\nimport { CubicBezier, Points, getPoint } from './CubicBezier';\nimport { EffectBox, Effect } from './EffectBox';\nimport presetsData from './easing.json';\n\nconst Canvas = styled.canvas`\n  padding: 0 10px;\n  background-color: var(--color-canvas-subtle);\n`;\n\nconst Blue = styled.span`\n  color: #1473e6;\n`;\nconst Green = styled.span`\n  color: #247b5e;\n`;\ninterface CSSBlockProps {\n  value?: string;\n  second?: number;\n}\n\nconst CSSBlock = (props: CSSBlockProps) => {\n  return (\n    <Fragment>\n      <div>\n        <Green>.block</Green> &#123;\n      </div>\n      <div>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Green>transition</Green>:{' '}\n      </div>\n      <div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;transform {props.second}s</div>\n      <div>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Blue>cubic-bezier({props.value})</Blue>;{' '}\n      </div>\n      <div>&#125;</div>\n    </Fragment>\n  );\n};\n\nexport interface TOMLToJSONProps {}\nexport default function TOMLToJSON(props: TOMLToJSONProps) {\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const handle = useRef<CubicBezier>();\n  const [name, setName] = useState<string>(presetsData[0].label);\n  const [points, setPoints] = useState<Points>(getPoint(presetsData[0].point));\n  const [customPoint, setCustomPoint] = useState<Points>();\n  const [css, setCss] = useState<string>();\n  const [second, setSecond] = useState<number>(0.3);\n  const [effect, setEffect] = useState<Effect>();\n\n  useEffect(() => {\n    if (canvas.current) {\n      handle.current = new CubicBezier(canvas.current);\n      handle.current.updateDrawing();\n      handle.current.onChange = (point, isDrag) => {\n        if (isDrag) {\n          setCustomPoint(point);\n        }\n      };\n      handle.current.change(points);\n    }\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const idx = Number(event.target.value);\n    const { label, point } = presetsData[idx] || {};\n    setCustomPoint(undefined);\n    setPoints(getPoint(point));\n    setName(label);\n  };\n\n  useEffect(() => {\n    if (handle.current) {\n      handle.current.change(points);\n      setCss(handle.current.css);\n    }\n  }, [points]);\n\n  const cssBlock = `.block {\\n    transition: transform ${second}s cubic-bezier(${css});\\n}`;\n\n  const customCss = customPoint ? `${customPoint.x1}, ${customPoint.y1}, ${customPoint.x2}, ${customPoint.y2}` : '';\n\n  return (\n    <Wrapper>\n      <StyledLayout title=\"Cubic Bezier\">\n        <Spacing direction=\"row\">\n          <Canvas ref={canvas} width={200} height={450}></Canvas>\n          <Spacing style={{ alignItems: 'flex-start' }}>\n            <Spacing direction=\"row\" style={{}}>\n              <span>Easing:</span>\n              <select onChange={handleChange}>\n                {presetsData.map((item, idx) => {\n                  return (\n                    <option key={idx} value={idx}>\n                      {item.label}\n                    </option>\n                  );\n                })}\n              </select>\n            </Spacing>\n            <Spacing direction=\"row\" style={{}}>\n              <span>Duration:</span>\n              <input\n                type=\"range\"\n                value={second}\n                step=\"0.1\"\n                min=\"0\"\n                max=\"5\"\n                onChange={(evn) => setSecond(Number(evn.target.value))}\n              />\n              {second} Second\n            </Spacing>\n            <Spacing direction=\"row\" style={{}}>\n              <span>Effect:</span>\n              <button onClick={() => setEffect(effect === 'left' ? undefined : 'left')}>Left</button>\n              <button onClick={() => setEffect(effect === 'width' ? undefined : 'width')}>Width</button>\n              <button onClick={() => setEffect(effect === 'height' ? undefined : 'height')}>Height</button>\n              <button onClick={() => setEffect(effect === 'opacity' ? undefined : 'opacity')}>Opacity</button>\n            </Spacing>\n            <EffectBox type={effect} second={second} css={customCss || css}></EffectBox>\n          </Spacing>\n        </Spacing>\n      </StyledLayout>\n      <StyledLayout title={'Result'} extra={css && <CopyButton value={css} />}>\n        <Spacing>\n          <CodeLineCopy title={name}> {css} </CodeLineCopy>\n          <CodeLineCopy title={name} copyText={cssBlock}>\n            <CSSBlock second={second} value={css} />\n          </CodeLineCopy>\n          {customPoint && (\n            <CodeLineCopy\n              title=\"Custom:\"\n              copyText={`.block {\\n    transition: transform ${second}s cubic-bezier(${customCss});\\n}`}\n            >\n              <CSSBlock second={second} value={customCss} />\n            </CodeLineCopy>\n          )}\n        </Spacing>\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["Bezier","constructor","x","y","width","height","left","right","top","bottom","this","getSides","draw","ctx","fillStyle","fillRect","Graph","save","strokeStyle","lineWidth","strokeRect","restore","getPoint","str","split","map","s","Number","trim","x1","y1","x2","y2","isTouchEvent","e","type","CubicBezier","dom","canvas","timer","handles","onChange","graph","drag","draggingObj","oldX","oldY","css","onPress","bind","touchPress","onRelease","touchEnd","onMove","touchMove","addEventListener","num","getContext","getPos","event","evn","touches","pageX","getOffSet","target","pageY","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","mouseCoordinates","preventDefault","stopPropagation","i","length","current","curLeft","curRight","curTop","curBottom","document","style","cursor","body","updateDrawing","removeEventListener","isDrag","_this$handles","clearRect","cp1","cp2","beginPath","moveTo","bezierCurveTo","stroke","lineTo","toFixed","change","_ref","Main","styled","Block","props","second","EffectBox","_jsx","children","Canvas","Blue","Green","CSSBlock","_jsxs","Fragment","value","TOMLToJSON","useRef","handle","useState","presetsData","name","setName","points","setPoints","customPoint","setCustomPoint","setCss","setSecond","effect","setEffect","useEffect","point","cssBlock","customCss","Wrapper","StyledLayout","title","Spacing","direction","ref","alignItems","idx","label","undefined","item","step","min","max","onClick","extra","CopyButton","CodeLineCopy","copyText"],"sourceRoot":""}