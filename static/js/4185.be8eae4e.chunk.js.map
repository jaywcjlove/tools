{"version":3,"file":"static/js/4185.be8eae4e.chunk.js","mappings":"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","sources":["../../lib/atob.js","../../lib/base64_url_decode.js","../../lib/index.js","../../packages/jwt-decoder/src/index.tsx"],"sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import React, { Fragment, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport jwtdecode from 'jwt-decode';\nimport {\n  Wrapper,\n  Textarea,\n  StyledLayout,\n  CopyButton,\n  CodeLineCopy,\n  Button,\n  Spacing,\n} from '@wcj/tools-react-components';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\n\nconst help = `JWT Decoder is a free online developer tool to decode a JSON Web Token (JWT) instantly to view the claims inside, such as the algorithm used to sign it and the attached data.\n\nEnter a JSON Web Token you would like to decode in the input field and then click the decode button. The result will be split into \\`header\\` and \\`payload\\` in the JSON format accordingly.\n\nThe header consists of the algorithm used to encode the signature, such as \\`HS256\\` which means the token uses \\`HMAC-SHA256\\` to generate the signature and the token type; for instance [\\`JWT\\`](https://jwt.io/).\n\nThe payload contains a set of claims as known as data in a token. One of the standard claims is \\`iat\\` which stands for Issued At. It's a UNIX timestamp referring to the creation date and time of the token.\n\nOnce a JSON Web Token is decoded, you can copy the result to your clipboard using the copy button.`;\n\nconst SubTitle = styled.span`\n  font-size: 12px;\n  font-weight: normal;\n`;\n\nexport interface JWTDecoderProps {}\n\nconst sample = `eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmb28iOiJiYXIiLCJleHAiOjEzOTMyODY4OTMsImlhdCI6MTM5MzI2ODg5M30.4-iaDojEVl0pJQMjrbM1EzUIfAZgsbK_kgnVyVxFSVo`;\n\nfunction strToJson(str: string, pretty = false) {\n  return JSON.stringify(JSON.parse(str), null, pretty ? 2 : 0);\n}\n\nfunction base64url(str: string) {\n  return window.btoa(str).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport default function JWTDecoder(props: JWTDecoderProps) {\n  const [value, setValue] = useState<string>('');\n  const [payload, setPayload] = useState<string>('{}');\n  const [signature, setSignature] = useState<string>('');\n  const [header, setHeader] = useState<string>('{}');\n  const [decodeError, setDecodeError] = useState('');\n  const [encodeError, setEncodeError] = useState('');\n  const [typeError, setTypeError] = useState<'header' | 'payload'>();\n  const handleDecodeInput = () => {\n    try {\n      if (value) {\n        const decoded = jwtdecode(value);\n        setPayload(JSON.stringify(decoded, null, 2));\n        const headerStr = jwtdecode(value, { header: true });\n        setHeader(JSON.stringify(headerStr, null, 2));\n        const [_, __, str] = value.split('.');\n        setSignature(str || '');\n      } else {\n        setPayload('{}');\n        setHeader('{}');\n        setSignature('');\n      }\n      setDecodeError('');\n    } catch (error) {\n      if (error instanceof Error) {\n        setDecodeError(error.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    handleDecodeInput();\n  }, [value]);\n\n  const updateInput = () => {\n    try {\n      const token = `${base64url(strToJson(header))}.${base64url(strToJson(payload))}.${signature}`;\n      setEncodeError('');\n      setValue(token);\n    } catch (error) {\n      if (error instanceof Error) {\n        setEncodeError(error.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateInput();\n  }, [header, payload, signature]);\n  return (\n    <Wrapper>\n      <StyledLayout\n        title=\"JWT\"\n        style={{\n          position: 'sticky',\n          top: 24,\n          maxHeight: 360,\n        }}\n        extra={\n          <Fragment>\n            {value && <CopyButton value={value} />}\n            <Button onClick={() => setValue(sample)}>Sample</Button>\n          </Fragment>\n        }\n      >\n        <Textarea\n          spellCheck={false}\n          error={!!decodeError}\n          value={value}\n          onInput={(evn) => {\n            setValue((evn.target as HTMLTextAreaElement).value);\n          }}\n        />\n      </StyledLayout>\n      <StyledLayout title=\"Decoded\">\n        <Spacing>\n          <CodeLineCopy\n            title={\n              <Fragment>\n                Header: <SubTitle>ALGORITHM & TOKEN TYPE</SubTitle>\n              </Fragment>\n            }\n            copyBtn={false}\n            copyText={header}\n          >\n            <Spacing>\n              <MarkdownPreview style={{ display: 'block' }} source={`\\`\\`\\`json\\n${header}\\n\\`\\`\\``} />\n              <Textarea\n                onFocus={() => setTypeError('header')}\n                onBlur={() => setTypeError(undefined)}\n                error={!!encodeError && typeError === 'header'}\n                value={header}\n                spellCheck={false}\n                style={{ minHeight: 120 }}\n                onChange={(evn) => setHeader(evn.target.value)}\n              />\n            </Spacing>\n          </CodeLineCopy>\n          <CodeLineCopy\n            title={\n              <Fragment>\n                Payload: <SubTitle>DATA</SubTitle>\n              </Fragment>\n            }\n            copyBtn={false}\n            copyText={payload}\n          >\n            <Spacing>\n              <MarkdownPreview style={{ display: 'block' }} source={`\\`\\`\\`json\\n${payload}\\n\\`\\`\\``} />\n              <Textarea\n                onFocus={() => setTypeError('payload')}\n                onBlur={() => setTypeError(undefined)}\n                error={!!encodeError && typeError === 'payload'}\n                value={payload}\n                spellCheck={false}\n                style={{ minHeight: 120 }}\n                onChange={(evn) => setPayload(evn.target.value)}\n              />\n            </Spacing>\n          </CodeLineCopy>\n          <CodeLineCopy title={<Fragment>Signature:</Fragment>} copyBtn={false} copyText={payload}>\n            <Spacing>\n              <Textarea value={signature} onChange={(evn) => setSignature(evn.target.value)} />\n            </Spacing>\n          </CodeLineCopy>\n          <CodeLineCopy title=\"Help:\" copyBtn={false}>\n            <MarkdownPreview source={help} />\n          </CodeLineCopy>\n        </Spacing>\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["InvalidCharacterError","message","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split","e","SubTitle","styled","_templateObject","strToJson","pretty","stringify","base64url","btoa","JWTDecoder","props","useState","value","setValue","payload","setPayload","signature","setSignature","setHeader","decodeError","setDecodeError","encodeError","setEncodeError","typeError","setTypeError","useEffect","decoded","jwtdecode","headerStr","error","handleDecodeInput","updateInput","_jsxs","Wrapper","children","_jsx","StyledLayout","title","style","position","top","maxHeight","extra","Fragment","CopyButton","Button","onClick","Textarea","spellCheck","onInput","evn","target","Spacing","CodeLineCopy","copyBtn","copyText","MarkdownPreview","display","source","onFocus","onBlur","undefined","minHeight","onChange"],"sourceRoot":""}