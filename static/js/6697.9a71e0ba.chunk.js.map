{"version":3,"file":"static/js/6697.9a71e0ba.chunk.js","mappings":"i+qDAQe,SAASA,IACtB,IAAQC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iCAAkC,WAAxDD,EACR,GAAsCE,EAAAA,EAAAA,YAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAoCF,EAAAA,EAAAA,YAApC,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwBJ,EAAAA,EAAAA,UAAuC,eAA/D,eAAOK,EAAP,KAAaC,EAAb,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACRH,GACGH,GAAe,IACbO,MAAM,IACNC,KAAKC,SAAAA,GAAD,OAASC,EAAmBD,IAAQA,KACxCE,KAAK,OAET,CAACX,KAEJM,EAAAA,EAAAA,YAAU,WACRL,GACGC,GAAc,IACZK,MAAM,IACNC,KAAKC,SAAAA,GACJ,OAAIG,MAAMC,QAAQC,EAAkBL,IAC3BK,EAAkBL,GAAK,GAEzBK,EAAkBL,IAAQA,KAElCE,KAAK,OAET,CAACT,KAGFa,EAAAA,EAAAA,MAACC,EAAAA,GAAD,CAAAC,SAAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CACEC,MAAOvB,EAAE,uBACTwB,OACEN,EAAAA,EAAAA,MAACO,EAAAA,SAAD,CAAAL,SAAAA,CACGjB,IAAekB,EAAAA,EAAAA,KAACK,EAAAA,GAAD,CAAYC,MAAOxB,KACnCkB,EAAAA,EAAAA,KAACO,EAAAA,GAAD,CACEC,QAAS,WACPzB,EC9CW,yRD+CXI,EAAQ,gBAHZY,SAMGpB,EAAE,SAAU,CAAE8B,GAAI,gBAX3BV,UAgBEC,EAAAA,EAAAA,KAACU,EAAAA,GAAD,CACEC,YAAY,EACZL,MAAOxB,EACP8B,QAAS,kBAAMzB,EAAQ,gBACvB0B,SAAWC,SAAAA,GACI,gBAAT5B,GACFH,EAAgB+B,EAAIC,OAA+BT,aAK3DN,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CACEC,MAAOvB,EAAE,sBACTwB,OACEN,EAAAA,EAAAA,MAACO,EAAAA,SAAD,CAAAL,SAAAA,CACGf,IAAcgB,EAAAA,EAAAA,KAACK,EAAAA,GAAD,CAAYC,MAAOtB,KAClCgB,EAAAA,EAAAA,KAACO,EAAAA,GAAD,CACEC,QAAS,WACPvB,ECnEU,otBDiEdc,SAKGpB,EAAE,SAAU,CAAE8B,GAAI,gBAV3BV,UAeEC,EAAAA,EAAAA,KAACU,EAAAA,GAAD,CACEC,YAAY,EACZL,MAAOtB,EACP4B,QAAS,kBAAMzB,EAAQ,eACvB0B,SAAWC,SAAAA,GACI,eAAT5B,GACFD,EAAe6B,EAAIC,OAA+BT","sources":["../../packages/simplified-traditional-chinese/src/index.tsx","../../packages/simplified-traditional-chinese/src/sample.ts"],"sourcesContent":["import { useState, Fragment, useEffect } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton, Button } from '@wcj/tools-react-components';\nimport { useTranslation } from 'react-i18next';\nimport simplifiedChinese from 'togscc/data/simplified.convert.json';\nimport traditionalChinese from 'togscc/data/traditional.convert.json';\n\nimport * as sample from './sample';\n\nexport default function SimplifiedTraditionalChinese() {\n  const { t } = useTranslation(['simplified-traditional-chinese', 'common']);\n  const [traditional, setTraditional] = useState<string>();\n  const [simplified, setSimplified] = useState<string>();\n  const [type, setType] = useState<'traditional' | 'simplified'>('traditional');\n\n  useEffect(() => {\n    setSimplified(\n      (traditional || '')\n        .split('')\n        .map((str) => traditionalChinese[str] || str)\n        .join(''),\n    );\n  }, [traditional]);\n\n  useEffect(() => {\n    setTraditional(\n      (simplified || '')\n        .split('')\n        .map((str) => {\n          if (Array.isArray(simplifiedChinese[str])) {\n            return simplifiedChinese[str][0];\n          }\n          return simplifiedChinese[str] || str;\n        })\n        .join(''),\n    );\n  }, [simplified]);\n\n  return (\n    <Wrapper>\n      <StyledLayout\n        title={t('Traditional Chinese')}\n        extra={\n          <Fragment>\n            {traditional && <CopyButton value={traditional} />}\n            <Button\n              onClick={() => {\n                setTraditional(sample.traditional);\n                setType('traditional');\n              }}\n            >\n              {t('Sample', { ns: 'common' })}\n            </Button>\n          </Fragment>\n        }\n      >\n        <Textarea\n          spellCheck={false}\n          value={traditional}\n          onFocus={() => setType('traditional')}\n          onChange={(evn) => {\n            if (type === 'traditional') {\n              setTraditional((evn.target as HTMLTextAreaElement).value);\n            }\n          }}\n        />\n      </StyledLayout>\n      <StyledLayout\n        title={t('Simplified Chinese')}\n        extra={\n          <Fragment>\n            {simplified && <CopyButton value={simplified} />}\n            <Button\n              onClick={() => {\n                setSimplified(sample.simplified);\n              }}\n            >\n              {t('Sample', { ns: 'common' })}\n            </Button>\n          </Fragment>\n        }\n      >\n        <Textarea\n          spellCheck={false}\n          value={simplified}\n          onFocus={() => setType('simplified')}\n          onChange={(evn) => {\n            if (type === 'simplified') {\n              setSimplified((evn.target as HTMLTextAreaElement).value);\n            }\n          }}\n        />\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n","export const traditional = `望廬山瀑佈 - 李白 -【朝代】唐\n\n日照香爐生紫烟，遥看瀑佈掛前川。\n\n飛流直下三韆尺，疑是銀河落九天。`;\n\nexport const simplified = `乡愁\n【作者】余光中 \n小时候，\n乡愁是一枚小小的邮票，\n我在这头，\n母亲在那头。\n\n长大后，\n乡愁是一张窄窄的船票，\n我在这头，\n新娘在那头。\n\n后来啊，\n乡愁是一方矮矮的坟墓，\n我在外头，\n母亲在里头。\n\n而现在，\n乡愁是一湾浅浅的海峡，\n我在这头，\n大陆在那头。`;\n"],"names":["SimplifiedTraditionalChinese","t","useTranslation","useState","traditional","setTraditional","simplified","setSimplified","type","setType","useEffect","split","map","str","traditionalChinese","join","Array","isArray","simplifiedChinese","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","CopyButton","value","Button","onClick","ns","Textarea","spellCheck","onFocus","onChange","evn","target"],"sourceRoot":""}