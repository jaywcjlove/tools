{"version":3,"file":"static/js/3245.bcb27dc8.chunk.js","mappings":"2PAQIA,EAAS,mkBACE,SAASC,EAAWC,GACjC,IAAAC,GAAwBC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACpBG,GAAsBT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAYlB,OAXAG,EAAAA,EAAAA,YAAU,WACR,IACE,IAAIC,EAAQC,IAAAA,MAAWZ,GAAS,IAChCK,EAAS,IACTI,EAAQI,KAAKC,UAAUH,EAAO,KAAM,GACtC,CAAE,MAAOI,GACHA,aAAeC,OACjBX,EAASU,EAAIE,QAEjB,CACF,GAAG,CAACjB,KACgBkB,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CACjCC,SAAU,EAAcC,EAAAA,EAAAA,KAAKC,EAAAA,GAAc,CACzCC,MAAO,OACPC,OAAoBN,EAAAA,EAAAA,MAAMO,EAAAA,SAAU,CAClCL,SAAU,CAACpB,IAAsBqB,EAAAA,EAAAA,KAAKK,EAAAA,GAAY,CAChD1B,MAAOA,KACQqB,EAAAA,EAAAA,KAAKM,EAAAA,GAAQ,CAC5BC,QAAS,kBAAM3B,EAASR,EAAO,EAC/B2B,SAAU,cAGdA,UAAuBC,EAAAA,EAAAA,KAAKQ,EAAAA,GAAY,CACtCC,OAAQ,qBACRC,WAAY,CAACC,EAAAA,GAAAA,OAAsBC,EAAAA,OACnCjC,MAAOA,EACPkC,SAAU,SAAAC,GAAG,OAAIlC,EAASkC,EAAI,OAEjBd,EAAAA,EAAAA,KAAKC,EAAAA,GAAc,CAClCC,MAAO,cACPC,MAAOhB,IAAqBa,EAAAA,EAAAA,KAAKK,EAAAA,GAAY,CAC3C1B,MAAOQ,IAETY,UAAuBC,EAAAA,EAAAA,KAAKQ,EAAAA,GAAY,CACtCC,OAAQ,qBACRC,WAAY,EAACK,EAAAA,EAAAA,SACbC,UAAU,EACVrC,MAAOQ,MAEPJ,IAAsBiB,EAAAA,EAAAA,KAAKiB,EAAAA,GAAa,CAC1ClB,SAAUhB,MAGhB,C","sources":["../../packages/toml-to-json/esm/index.js"],"sourcesContent":["import { useState, Fragment, useEffect } from 'react';\nimport { Wrapper, ErrorLayout, StyledLayout, CopyButton, Button, CodeEditor } from '@wcj/tools-react-components';\nimport TOML from 'toml';\nimport { json as jsonLang } from '@codemirror/lang-json';\nimport { StreamLanguage } from '@codemirror/language';\nimport { toml } from '@codemirror/legacy-modes/mode/toml';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar sample = \"# This is a TOML document.\\n\\ntitle = \\\"TOML Example\\\"\\n\\n[owner]\\nname = \\\"Tom Preston-Werner\\\"\\ndob = 1979-05-27T07:32:00-08:00 # First class dates\\n\\n[database]\\nserver = \\\"192.168.1.1\\\"\\nports = [ 8000, 8001, 8002 ]\\nconnection_max = 5000\\nenabled = true\\n\\n[servers]\\n\\n  # Indentation (tabs and/or spaces) is allowed but not required\\n  [servers.alpha]\\n  ip = \\\"10.0.0.1\\\"\\n  dc = \\\"eqdc10\\\"\\n\\n  [servers.beta]\\n  ip = \\\"10.0.0.2\\\"\\n  dc = \\\"eqdc10\\\"\\n\\n[clients]\\ndata = [ [\\\"gamma\\\", \\\"delta\\\"], [1, 2] ]\\n\\n# Line breaks are OK when inside arrays\\nhosts = [\\n  \\\"alpha\\\",\\n  \\\"omega\\\"\\n]\";\nexport default function TOMLToJSON(props) {\n  var [value, setValue] = useState();\n  var [error, setError] = useState();\n  var [json, setJson] = useState();\n  useEffect(() => {\n    try {\n      var _toml = TOML.parse(value || '');\n      setError('');\n      setJson(JSON.stringify(_toml, null, 2));\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      }\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsx(StyledLayout, {\n      title: \"TOML\",\n      extra: /*#__PURE__*/_jsxs(Fragment, {\n        children: [value && /*#__PURE__*/_jsx(CopyButton, {\n          value: value\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: () => setValue(sample),\n          children: \"Sample\"\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(CodeEditor, {\n        height: \"calc(100vh - 87px)\",\n        extensions: [StreamLanguage.define(toml)],\n        value: value,\n        onChange: val => setValue(val)\n      })\n    }), /*#__PURE__*/_jsx(StyledLayout, {\n      title: 'Result JSON',\n      extra: json && /*#__PURE__*/_jsx(CopyButton, {\n        value: json\n      }),\n      children: /*#__PURE__*/_jsx(CodeEditor, {\n        height: \"calc(100vh - 87px)\",\n        extensions: [jsonLang()],\n        readOnly: true,\n        value: json\n      })\n    }), error && /*#__PURE__*/_jsx(ErrorLayout, {\n      children: error\n    })]\n  });\n}"],"names":["sample","TOMLToJSON","props","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","error","setError","_useState5","_useState6","json","setJson","useEffect","_toml","TOML","JSON","stringify","err","Error","message","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","CopyButton","Button","onClick","CodeEditor","height","extensions","StreamLanguage","toml","onChange","val","jsonLang","readOnly","ErrorLayout"],"sourceRoot":""}