{"version":3,"file":"static/js/9876.8d97adb7.chunk.js","mappings":"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","sources":["../../node_modules/@lezer/json/dist/index.js","../../node_modules/@codemirror/lang-json/dist/index.js","../../node_modules/@lezer/xml/dist/index.js","../../node_modules/@codemirror/lang-xml/dist/index.js"],"sourcesContent":["import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 35,\n  piContent$1 = 36,\n  cdataContent$1 = 37,\n  Element = 11,\n  OpenTag = 13;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    for (let endPos = 0, len = 0;; len++) {\n      if (input.next < 0) {\n        if (len) input.acceptToken(type);\n        break\n      } \n      if (input.next == end.charCodeAt(endPos)) {\n        endPos++;\n        if (endPos == end.length) {\n          if (len >= end.length) input.acceptToken(type, 1 - end.length);\n          break\n        }\n      } else {\n        endPos = input.next == end.charCodeAt(0) ? 1 : 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\nconst xmlHighlighting = styleTags({\n  Text: tags.content,\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/Tagname\": [tags.tagName, tags.invalid],\n  AttributeName: tags.attributeName,\n  AttributeValue: tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta,\n  Cdata: tags.special(tags.string)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\n  maxTerm: 47,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"]\n  ],\n  propSources: [xmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 8,\n  tokenData: \"IX~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O*l!O!P$n!P!Q,{!Q![$n![!].e!]!^$n!^!_1v!_!`Cz!`!aDm!a!bE`!b!c$n!c!}.e!}#P$n#P#QFx#Q#R$n#R#S.e#S#T$n#T#o.e#o%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U$n4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^VOp(sqs(sst)ht!](s!^;'S(s;'S;=`)b<%lO(s~(vVOp(sqs(st!](s!]!^)]!^;'S(s;'S;=`)b<%lO(s~)bOW~~)eP;=`<%l(s~)kTOp)zq!])z!^;'S)z;'S;=`*f<%lO)z~)}UOp)zq!])z!]!^*a!^;'S)z;'S;=`*f<%lO)z~*fOX~~*iP;=`<%l)zZ*sYVP{WOr$nrs%_sv$nw}$n}!O+c!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ+jYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a,Y!a;'S$n;'S;=`&e<%lO$nZ,cW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n]-SYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-r!a;'S$n;'S;=`&e<%lO$n]-{WdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_.p!O`S^QVP{WOr$nrs%_sv$nw}$n}!O.e!O!P.e!P!Q$n!Q![.e![!].e!]!^$n!^!_%y!_!c$n!c!}.e!}#R$n#R#S.e#S#T$n#T#o.e#o$}$n$}%O.e%O%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U.e4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Je$n$Je$Jg.e$Jg$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$n_1sP;=`<%l.eX1{W{WOq%yqr2esv%yw!a%y!a!bCd!b;'S%y;'S;=`&_<%lO%yX2j]{WOr%ysv%yw}%y}!O3c!O!f%y!f!g4e!g!}%y!}#O9t#O#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX3hV{WOr%ysv%yw}%y}!O3}!O;'S%y;'S;=`&_<%lO%yX4UT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX4jV{WOr%ysv%yw!q%y!q!r5P!r;'S%y;'S;=`&_<%lO%yX5UV{WOr%ysv%yw!e%y!e!f5k!f;'S%y;'S;=`&_<%lO%yX5pV{WOr%ysv%yw!v%y!v!w6V!w;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!{%y!{!|6q!|;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!r%y!r!s7]!s;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!g%y!g!h7w!h;'S%y;'S;=`&_<%lO%yX7|X{WOr7wrs8isv7wvw8iw!`7w!`!a9W!a;'S7w;'S;=`9n<%lO7wP8lTO!`8i!`!a8{!a;'S8i;'S;=`9Q<%lO8iP9QOiPP9TP;=`<%l8iX9_TiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX9qP;=`<%l7wX9yX{WOr%ysv%yw!e%y!e!f:f!f#V%y#V#W=t#W;'S%y;'S;=`&_<%lO%yX:kV{WOr%ysv%yw!f%y!f!g;Q!g;'S%y;'S;=`&_<%lO%yX;VV{WOr%ysv%yw!c%y!c!d;l!d;'S%y;'S;=`&_<%lO%yX;qV{WOr%ysv%yw!v%y!v!w<W!w;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!c%y!c!d<r!d;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!}%y!}#O=^#O;'S%y;'S;=`&_<%lO%yX=eT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX=yV{WOr%ysv%yw#W%y#W#X>`#X;'S%y;'S;=`&_<%lO%yX>eV{WOr%ysv%yw#T%y#T#U>z#U;'S%y;'S;=`&_<%lO%yX?PV{WOr%ysv%yw#h%y#h#i?f#i;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#T%y#T#U<r#U;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#c%y#c#d@l#d;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#V%y#V#WAW#W;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#h%y#h#iAr#i;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#m%y#m#nB^#n;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#d%y#d#eBx#e;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#X%y#X#Y7w#Y;'S%y;'S;=`&_<%lO%yXCkT!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZDTWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_DvW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZEgYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aFV!a;'S$n;'S;=`&e<%lO$nZF`W!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGPYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QGo#Q;'S$n;'S;=`&e<%lO$nZGvYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aHf!a;'S$n;'S;=`&e<%lO$nZHoWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/xml';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, bracketMatchingHandle, LanguageSupport } from '@codemirror/language';\n\nfunction tagName(doc, tag) {\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction elementName(doc, tree) {\n    let tag = tree && tree.firstChild;\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\n}\nfunction attrName(doc, tag, pos) {\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\n    let name = attr && attr.getChild(\"AttributeName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction findParentElement(tree) {\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\")\n            return cur;\n    return null;\n}\nfunction findLocation(state, pos) {\n    var _a;\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\n            inTag = cur;\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\n        let elt = inTag.parent;\n        if (at.name == \"TagName\")\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\n                ? { type: \"closeTag\", from: at.from, context: elt }\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\n        if (at.name == \"AttributeName\")\n            return { type: \"attrName\", from: at.from, context: inTag };\n        if (at.name == \"AttributeValue\")\n            return { type: \"attrValue\", from: at.from, context: inTag };\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\n            return { type: \"closeTag\", from: pos, context: elt };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\n            return { type: \"attrValue\", from: pos, context: inTag };\n        if (before)\n            return { type: \"attrName\", from: pos, context: inTag };\n        return null;\n    }\n    else if (at.name == \"StartCloseTag\") {\n        return { type: \"closeTag\", from: pos, context: at.parent };\n    }\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\n        at = at.parent;\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\n    return null;\n}\nclass Element {\n    constructor(spec, attrs, attrValues) {\n        this.attrs = attrs;\n        this.attrValues = attrValues;\n        this.children = [];\n        this.name = spec.name;\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\n    }\n}\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction attrCompletion(spec) {\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\n}\nfunction valueCompletion(spec) {\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\n        : /^\"/.test(spec.label) ? spec\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\n}\n/**\nCreate a completion source for the given schema.\n*/\nfunction completeFromSchema(eltSpecs, attrSpecs) {\n    let allAttrs = [], globalAttrs = [];\n    let attrValues = Object.create(null);\n    for (let s of attrSpecs) {\n        let completion = attrCompletion(s);\n        allAttrs.push(completion);\n        if (s.global)\n            globalAttrs.push(completion);\n        if (s.values)\n            attrValues[s.name] = s.values.map(valueCompletion);\n    }\n    let allElements = [], topElements = [];\n    let byName = Object.create(null);\n    for (let s of eltSpecs) {\n        let attrs = globalAttrs, attrVals = attrValues;\n        if (s.attributes)\n            attrs = attrs.concat(s.attributes.map(s => {\n                if (typeof s == \"string\")\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\n                if (s.values) {\n                    if (attrVals == attrValues)\n                        attrVals = Object.create(attrVals);\n                    attrVals[s.name] = s.values.map(valueCompletion);\n                }\n                return attrCompletion(s);\n            }));\n        let elt = new Element(s, attrs, attrVals);\n        byName[elt.name] = elt;\n        allElements.push(elt);\n        if (s.top)\n            topElements.push(elt);\n    }\n    if (!topElements.length)\n        topElements = allElements;\n    for (let i = 0; i < allElements.length; i++) {\n        let s = eltSpecs[i], elt = allElements[i];\n        if (s.children) {\n            for (let ch of s.children)\n                if (byName[ch])\n                    elt.children.push(byName[ch]);\n        }\n        else {\n            elt.children = allElements;\n        }\n    }\n    return cx => {\n        var _a;\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\n            return null;\n        let { type, from, context } = loc;\n        if (type == \"openTag\") {\n            let children = topElements;\n            let parentName = elementName(doc, context);\n            if (parentName) {\n                let parent = byName[parentName];\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\n            }\n            return {\n                from,\n                options: children.map(ch => ch.completion),\n                validFor: Identifier\n            };\n        }\n        else if (type == \"closeTag\") {\n            let parentName = elementName(doc, context);\n            return parentName ? {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\n                validFor: Identifier\n            } : null;\n        }\n        else if (type == \"attrName\") {\n            let parent = byName[tagName(doc, context)];\n            return {\n                from,\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\n                validFor: Identifier\n            };\n        }\n        else if (type == \"attrValue\") {\n            let attr = attrName(doc, context, from);\n            if (!attr)\n                return null;\n            let parent = byName[tagName(doc, context)];\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\n            if (!values || !values.length)\n                return null;\n            return {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\n                options: values,\n                validFor: /^\"[^\"]*\"?$/\n            };\n        }\n        else if (type == \"tag\") {\n            let parentName = elementName(doc, context), parent = byName[parentName];\n            let closing = [], last = context && context.lastChild;\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\n                let openTag = context.firstChild;\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\n                    options = options.concat(parent.text);\n            }\n            return {\n                from,\n                options,\n                validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\n            };\n        }\n        else {\n            return null;\n        }\n    };\n}\n\n/**\nA language provider based on the [Lezer XML\nparser](https://github.com/lezer-parser/xml), extended with\nhighlighting and indentation information.\n*/\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"xml\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(subtree) {\n                    let first = subtree.firstChild, last = subtree.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\n                }\n            }),\n            /*@__PURE__*/bracketMatchingHandle.add({\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/$/\n    }\n});\n/**\nXML language support. Includes schema-based autocompletion when\nconfigured.\n*/\nfunction xml(conf = {}) {\n    return new LanguageSupport(xmlLanguage, xmlLanguage.data.of({\n        autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\n    }));\n}\n\nexport { completeFromSchema, xml, xmlLanguage };\n"],"names":["jsonHighlighting","styleTags","String","tags","string","Number","number","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","doc","toString","e","SyntaxError","pos","error","m","message","match","Math","min","length","line","from","getErrorPosition","severity","to","jsonLanguage","LRLanguage","define","name","configure","props","indentNodeProp","add","Object","continuedIndent","except","Array","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport","nameChar","ch","cachedName","cachedInput","cachedPos","tagNameAfter","input","offset","peek","next","fromCharCode","ElementContext","parent","this","hash","i","charCodeAt","elementContext","ContextTracker","start","shift","context","term","stack","reduce","reuse","node","_stack","type","id","strict","startTag","ExternalTokenizer","advance","acceptToken","cx","contextual","scanTo","end","endPos","len","commentContent","piContent","cdataContent","xmlHighlighting","Text","content","angleBracket","TagName","tagName","invalid","AttributeName","attributeName","AttributeValue","attributeValue","Is","definitionOperator","character","Comment","blockComment","ProcessingInst","processingInstruction","DoctypeDecl","documentMeta","Cdata","special","tag","getChild","sliceString","elementName","tree","firstChild","findParentElement","cur","Element","_createClass","spec","attrs","attrValues","_classCallCheck","children","completion","assign","label","openCompletion","closeCompletion","boost","closeNameCompletion","text","textContent","map","s","Identifier","attrCompletion","valueCompletion","concat","test","completeFromSchema","eltSpecs","attrSpecs","_step","allAttrs","globalAttrs","create","_iterator","_createForOfIteratorHelper","n","done","value","push","global","values","err","f","_step2","allElements","topElements","byName","_iterator2","_loop","attrVals","attributes","find","a","elt","top","_step3","_iterator3","_a","loc","at","syntaxTree","resolveInner","inTag","lastChild","isError","before","childBefore","findLocation","explicit","parentName","options","validFor","attr","getChildren","attrName","closing","last","openTag","sliceDoc","xmlLanguage","closed","textAfter","lineIndent","unit","column","subtree","first","bracketMatchingHandle","commentTokens","block","open","close","xml","conf","arguments","undefined","data","of","autocomplete","elements"],"sourceRoot":""}