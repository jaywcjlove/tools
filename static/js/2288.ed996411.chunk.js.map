{"version":3,"file":"static/js/2288.ed996411.chunk.js","mappings":"iUAMIA,EAAS,mHACE,SAASC,IACtB,IAAKC,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAAUC,IAAeF,EAAAA,EAAAA,YAC1BG,EAAc,SAAqBC,QACvB,IAAVA,IACFA,EAAQ,IAEVL,EAAQK,GACRF,ECHG,SAAwBG,EAASC,QACtB,IAAZD,IACFA,EAAU,SAEI,IAAZC,IACFA,EAAU,CAAC,GAEb,MAASA,EACLC,GAAOC,EAAAA,EAAAA,KAAUC,IAAIC,EAAAA,EAAa,CACpCC,UAAU,IACTF,IAAIG,EAAAA,GAAMH,IAAII,EAAAA,GAAwBJ,IAAIK,EAAAA,GAAcL,IAAIM,EAAAA,GAAaN,IAAIO,EAAAA,GAAcP,IAAIQ,EAAAA,GAAWR,IAAIS,EAAAA,IAAaT,IAAIU,EAAAA,GAAcV,IAAIW,EAAAA,GAGnJX,IAAIY,EAAAA,GAAiBC,YAAYjB,GAClC,OAAOkB,OAAOhB,EAChB,CDZgBiB,CAAepB,GAC7B,EACA,OAAoBqB,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CACjCC,SAAU,EAAcC,EAAAA,EAAAA,KAAKC,EAAAA,GAAc,CACzCC,MAAO,aAGPC,OAAoBN,EAAAA,EAAAA,MAAMO,EAAAA,SAAU,CAClCL,SAAU,CAAC7B,IAAqB8B,EAAAA,EAAAA,KAAKK,EAAAA,GAAY,CAC/C7B,MAAON,KACQ8B,EAAAA,EAAAA,KAAKM,EAAAA,GAAQ,CAC5BC,QAASA,IAAMhC,EAAYP,GAC3B+B,SAAU,cAGdA,UAAuBC,EAAAA,EAAAA,KAAKQ,EAAAA,GAAY,CACtCC,YAAY,EACZjC,MAAON,EACPwC,OAAQ,qBACRC,WAAY,EAACC,EAAAA,EAAAA,SACbC,SAAUC,GAAOvC,EAAYuC,QAEhBd,EAAAA,EAAAA,KAAKC,EAAAA,GAAc,CAClCC,MAAO,kBACPC,MAAO9B,IAAyB2B,EAAAA,EAAAA,KAAKK,EAAAA,GAAY,CAC/C7B,MAAOH,IAET0B,UAAuBC,EAAAA,EAAAA,KAAKQ,EAAAA,GAAY,CACtCE,OAAQ,qBACRC,WAAY,EAACI,EAAAA,EAAAA,aACbN,YAAY,EACZjC,MAAOH,EACP2C,UAAU,QAIlB,C","sources":["../../packages/html-to-markdown/esm/index.js","../../packages/html-to-markdown/esm/utils.js"],"sourcesContent":["import { useState, Fragment } from 'react';\nimport { Wrapper, StyledLayout, CopyButton, Button, CodeEditor } from '@wcj/tools-react-components';\nimport { markdown as markdownLang } from '@codemirror/lang-markdown';\nimport { html as htmlLang } from '@codemirror/lang-html';\nimport { htmlToMarkdown } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar sample = \"<h2>Web tool</h2>\\n<p>Hello World</p>\\n<pre><code class=\\\"language-css\\\">body { color: 'red'; }\\n</code></pre>\\n\";\nexport default function Html2Markdown() {\n  var [html, setHtml] = useState();\n  var [markdown, setMarkdown] = useState();\n  var handleInput = function handleInput(value) {\n    if (value === void 0) {\n      value = '';\n    }\n    setHtml(value);\n    setMarkdown(htmlToMarkdown(value));\n  };\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsx(StyledLayout, {\n      title: \"Input HTML\"\n      // overflow=\"hidden\"\n      ,\n      extra: /*#__PURE__*/_jsxs(Fragment, {\n        children: [html && /*#__PURE__*/_jsx(CopyButton, {\n          value: html\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: () => handleInput(sample),\n          children: \"Sample\"\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(CodeEditor, {\n        spellCheck: false,\n        value: html,\n        height: \"calc(100vh - 87px)\",\n        extensions: [htmlLang()],\n        onChange: val => handleInput(val)\n      })\n    }), /*#__PURE__*/_jsx(StyledLayout, {\n      title: \"Result Markdown\",\n      extra: markdown && /*#__PURE__*/_jsx(CopyButton, {\n        value: markdown\n      }),\n      children: /*#__PURE__*/_jsx(CodeEditor, {\n        height: \"calc(100vh - 87px)\",\n        extensions: [markdownLang()],\n        spellCheck: false,\n        value: markdown,\n        readOnly: true\n      })\n    })]\n  });\n}","import { unified } from 'unified';\nimport rehypeParse from 'rehype-parse';\nimport rehypeRemark from 'rehype-remark';\nimport remarkStringify from 'remark-stringify';\nimport remarkGfm from 'remark-gfm';\nimport slug from 'rehype-slug';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeIgnore from 'rehype-ignore';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeFormat from 'rehype-format';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeVideo from 'rehype-video';\nexport function htmlToMarkdown(htmlStr, options) {\n  if (htmlStr === void 0) {\n    htmlStr = '';\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  var {} = options;\n  var file = unified().use(rehypeParse, {\n    fragment: true\n  }).use(slug).use(rehypeAutolinkHeadings).use(rehypeIgnore).use(rehypeVideo).use(rehypeFormat).use(rehypeRaw).use(rehypePrism).use(rehypeRemark).use(remarkGfm)\n  // .use(remarkPlugins || [])\n  // .use(rehypePlugins || [])\n  .use(remarkStringify).processSync(htmlStr);\n  return String(file);\n}"],"names":["sample","Html2Markdown","html","setHtml","useState","markdown","setMarkdown","handleInput","value","htmlStr","options","file","unified","use","rehypeParse","fragment","slug","rehypeAutolinkHeadings","rehypeIgnore","rehypeVideo","rehypeFormat","rehypeRaw","rehypePrism","rehypeRemark","remarkGfm","remarkStringify","processSync","String","htmlToMarkdown","_jsxs","Wrapper","children","_jsx","StyledLayout","title","extra","Fragment","CopyButton","Button","onClick","CodeEditor","spellCheck","height","extensions","htmlLang","onChange","val","markdownLang","readOnly"],"sourceRoot":""}