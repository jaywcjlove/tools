{"version":3,"file":"static/js/7438.6de18c94.chunk.js","mappings":"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","sources":["../../packages/svg-optimizer/src/compress.ts","../../packages/svg-optimizer/src/utils.ts","../../packages/svg-optimizer/src/index.tsx"],"sourcesContent":["import {\n  optimize,\n  OptimizeOptions,\n  OptimizedSvg,\n  OptimizedError,\n  Plugin,\n  CustomPlugin,\n  Js2SvgOptions,\n} from 'svgo/dist/svgo.browser';\n\nexport type Settings = OptimizeOptions &\n  Js2SvgOptions & {\n    /**\n     * Precision of floating point numbers. Will be passed to each plugin that suppors this param.\n     * 0 almost always breaks images when used on `cleanupNumericValues`.\n     */\n    floatPrecision?: number | undefined;\n  };\n\nexport type Dimensions = { width: number; height: number };\ntype CreateDimensionsExtractor = () => [Dimensions, Plugin];\n\nconst createDimensionsExtractor: CreateDimensionsExtractor = () => {\n  const dimensions: Dimensions = { width: 0, height: 0 };\n  const plugin: CustomPlugin<any> = {\n    // @ts-ignore\n    type: 'visitor',\n    name: 'extract-dimensions',\n    fn: () => {\n      return {\n        element: {\n          // Node, parentNode\n          enter: ({ name, attributes }, { type }) => {\n            if (name === 'svg' && type === 'root') {\n              if (attributes.width !== undefined && attributes.height !== undefined) {\n                dimensions.width = Number.parseFloat(attributes.width);\n                dimensions.height = Number.parseFloat(attributes.height);\n              } else if (attributes.viewBox !== undefined) {\n                const viewBox = attributes.viewBox.split(/,\\s*|\\s+/);\n                dimensions.width = Number.parseFloat(viewBox[2]);\n                dimensions.height = Number.parseFloat(viewBox[3]);\n              }\n            }\n          },\n        },\n      };\n    },\n  };\n  return [dimensions, plugin];\n};\n\nexport function compress(svgInput: string, settings: Settings) {\n  const plugins: Plugin[] = [];\n\n  (settings.plugins || []).forEach((item) => {\n    if (item === 'cleanupNumericValues') {\n      const floatPrecision = Number(settings.floatPrecision);\n      plugins.push({\n        name: 'cleanupNumericValues',\n        params: {\n          floatPrecision: floatPrecision === 0 ? 1 : floatPrecision,\n        },\n      });\n    } else {\n      plugins.push(item);\n    }\n  });\n\n  const [dimensions, extractDimensionsPlugin] = createDimensionsExtractor();\n  const { data, modernError } = optimize(svgInput, {\n    multipass: settings.multipass,\n    floatPrecision: settings.floatPrecision,\n    plugins: [...plugins, extractDimensionsPlugin],\n    js2svg: {\n      indent: 2,\n      pretty: settings.pretty,\n    },\n  }) as OptimizedSvg;\n  return { data, dimensions, error: modernError ? (modernError as any).message : '' };\n}\n","/**\n * Use an array dictionary of units to be accessed based on the exponent.\n * Use `Number.prototype.toPrecision()` to truncate the number to a certain number of digits.\n * Return the prettified string by building it up, taking into account the supplied options and whether it is negative or not.\n * Omit the second argument, `precision`, to use a default precision of `3` digits.\n * Omit the third argument, `addSpace`, to add space between the number and unit by default.\n */\nexport const prettyBytes = (num: number, precision = 3, addSpace = true) => {\n  const UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  if (Math.abs(num) < 1) return num + (addSpace ? ' ' : '') + UNITS[0];\n  const exponent = Math.min(Math.floor(Math.log10(num < 0 ? -num : num) / 3), UNITS.length - 1);\n  const n = Number(((num < 0 ? -num : num) / 1000 ** exponent).toPrecision(precision));\n  return (num < 0 ? '-' : '') + n + (addSpace ? ' ' : '') + UNITS[exponent];\n};\n\nexport function fileReader(file: File, type: 'base64' | 'text'): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    if (type === 'base64') reader.readAsDataURL(file);\n    if (type === 'text') reader.readAsText(file);\n    reader.onloadend = () => {\n      if (reader.result) {\n        resolve(reader.result.toString());\n      } else {\n        resolve('');\n      }\n    };\n    reader.onerror = (err) => {\n      reject(err);\n    };\n  });\n}\n\nexport function round(num: number, places: number) {\n  const mult = 10 ** places;\n  return Math.floor(Math.round(num * mult)) / mult;\n}\n","import { useEffect, useState, Fragment } from 'react';\nimport { Wrapper, StyledLayout, CopyButton, ResultCode, Spacing, Button } from '@wcj/tools-react-components';\nimport styled, { css } from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { Plugin } from 'svgo/dist/svgo.browser';\nimport { gzip } from 'pako';\nimport { Settings, compress, Dimensions } from './compress';\nimport { fileReader, prettyBytes, round } from './utils';\n\nexport interface ResultProps {\n  title?: string;\n  className?: string;\n}\n\nconst Info = styled.span`\n  color: var(--color-fg-subtle);\n`;\n\nconst Iframe = styled.iframe`\n  border: none;\n  overflow: hidden;\n  pointer-events: none;\n  max-width: 100%;\n`;\n\nconst InputFile = styled.input`\n  width: 100%;\n  display: block;\n`;\n\nconst PrettyBytesInfo = styled.div`\n  background-color: var(--color-neutral-muted);\n  padding: 10px;\n  margin-bottom: 60px;\n  margin-top: 15px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst Percen = styled.span<{ num: number }>`\n  font-weight: bold;\n  ${(props) => {\n    if (props.num > 100 || props.num === 0) {\n      return css`\n        color: red;\n      `;\n    }\n    if (props.num < 100) {\n      return css`\n        color: green;\n      `;\n    }\n    return css``;\n  }}\n`;\n\nconst defaultOptions: Settings = {\n  multipass: true,\n  pretty: true,\n  floatPrecision: 8,\n  plugins: [\n    'mergeStyles',\n    'cleanupAttrs',\n    'inlineStyles',\n    'minifyStyles',\n    'cleanupIDs',\n    'removeUselessDefs',\n    'cleanupNumericValues',\n    'convertColors',\n    'removeUnknownsAndDefaults',\n    'removeNonInheritableGroupAttrs',\n    'removeUselessStrokeAndFill',\n    'removeViewBox',\n    'cleanupEnableBackground',\n    'removeHiddenElems',\n    'removeEmptyText',\n    'convertShapeToPath',\n    'moveElemsAttrsToGroup',\n    'moveGroupAttrsToElems',\n    'collapseGroups',\n    'convertPathData',\n    'convertEllipseToCircle',\n    'convertTransform',\n    'removeEmptyAttrs',\n    'removeEmptyContainers',\n    'mergePaths',\n    'removeUnusedNS',\n    'sortDefsChildren',\n    'removeTitle',\n    'removeDesc',\n  ],\n};\n\ninterface CheckboxProps\n  extends React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> {}\nconst Checkbox: React.FC<React.PropsWithChildren<CheckboxProps>> = ({ children, ...other }) => {\n  return (\n    <label>\n      <span>\n        <input type=\"checkbox\" {...other} />\n        {children}\n      </span>\n    </label>\n  );\n};\n\nconst includesPlugin = (name: Plugin, plugins: Plugin[] = []) => plugins.includes(name);\n\ninterface ImageData {\n  raw?: string;\n  base64?: string;\n  tiny?: string;\n  error?: string;\n  name?: string;\n  dimensions?: Dimensions;\n}\n\nexport default function SVGOptimizer() {\n  const { t } = useTranslation(['svg-optimizer', 'common']);\n  const [options, setOptions] = useState<Settings>(defaultOptions);\n  const [imageData, setImageData] = useState<ImageData[]>([]);\n  const handleChange = async (evn: React.ChangeEvent<HTMLInputElement>) => {\n    const files = (evn.target as HTMLInputElement).files || [];\n    const data = await Promise.all(\n      Array.from(files).map(async (file) => {\n        console.log(file);\n        const base64 = await fileReader(file, 'base64');\n        const raw = await fileReader(file, 'text');\n        const d = compress(raw || '', options);\n        return { base64, raw, name: file.name, dimensions: d.dimensions, tiny: d.data };\n      }),\n    );\n    setImageData(data);\n  };\n  const settingPlugin = (name: Plugin, checked: boolean): Settings => {\n    const plugins: Plugin[] = [...(options.plugins || [])];\n    if (checked) {\n      if (!plugins.includes(name)) {\n        plugins.push(name);\n      }\n    } else {\n      plugins.splice(plugins.indexOf(name), 1);\n    }\n    return { ...options, plugins };\n  };\n\n  useEffect(() => {\n    if (options) {\n      const data: ImageData[] = [];\n      imageData.forEach((item) => {\n        const d = compress(item.raw || '', options);\n        data.push({ ...item, dimensions: d.dimensions, tiny: d.data, error: d.error });\n      });\n      setImageData(data);\n    }\n  }, [options]);\n\n  const opts: { plugin: Plugin; label: string; content: string }[] = [\n    { plugin: 'removeDoctype', label: 'Remove doctype', content: t('remove doctype declaration') },\n    { plugin: 'removeXMLProcInst', label: 'Remove XML ProcInst', content: t('remove XML processing instructions') },\n    { plugin: 'removeComments', label: 'Remove Comments', content: t('remove comments') },\n    { plugin: 'removeMetadata', label: 'Remove <metadata>', content: t('remove <metadata>') },\n    { plugin: 'removeXMLNS', label: 'Remove xmlns', content: t('removes the xmlns attribute (for inline SVG)') },\n    {\n      plugin: 'removeEditorsNSData',\n      label: 'Remove Editors Data',\n      content: t('remove editors namespaces, elements, and attributes'),\n    },\n    {\n      plugin: 'cleanupAttrs',\n      label: 'Cleanup attribute whitespace',\n      content: t('cleanup attributes from newlines, trailing, and repeating spaces'),\n    },\n    { plugin: 'mergeStyles', label: 'Merge Styles', content: t('merge multiple style elements into one') },\n    {\n      plugin: 'inlineStyles',\n      label: 'Inline Styles',\n      content: t('move and merge styles from <style> elements to element style attributes'),\n    },\n    { plugin: 'minifyStyles', label: 'Minify Styles', content: t('minify <style> elements content with CSSO') },\n    {\n      plugin: 'convertStyleToAttrs',\n      label: t('Style to attributes'),\n      content: t('convert styles into attributes'),\n    },\n    {\n      plugin: 'cleanupIDs',\n      label: t('Clean IDs'),\n      content: t('remove unused and minify used IDs'),\n    },\n    {\n      plugin: 'removeRasterImages',\n      label: t('Remove raster images'),\n      content: t('remove raster images'),\n    },\n    {\n      plugin: 'removeUselessDefs',\n      label: t('Remove unused defs'),\n      content: t('remove elements of <defs> without id'),\n    },\n    {\n      plugin: 'cleanupNumericValues',\n      label: t('Round/rewrite numbers'),\n      content: t('round numeric values to the fixed precision, remove default px units'),\n    },\n    {\n      plugin: 'cleanupListOfValues',\n      label: t('Round/rewrite number lists'),\n      content: t('round numeric values in attributes that take a list of numbers (like viewBox or enable-background)'),\n    },\n    {\n      plugin: 'convertColors',\n      label: t('Minify colours'),\n      content: t('convert colors (from rgb() to #rrggbb, from #rrggbb to #rgb)'),\n    },\n    {\n      plugin: 'removeUnknownsAndDefaults',\n      label: t('Remove unknowns & defaults'),\n      content: t('remove unknown elements content and attributes, remove attributes with default values'),\n    },\n    {\n      plugin: 'removeNonInheritableGroupAttrs',\n      label: t('Remove unneeded group attrs'),\n      content: t(`remove non-inheritable group's \"presentation\" attributes`),\n    },\n    {\n      plugin: 'removeUselessStrokeAndFill',\n      label: t('Remove useless stroke & fill'),\n      content: t(`remove useless stroke and fill attributes`),\n    },\n    {\n      plugin: 'removeViewBox',\n      label: t('Remove viewBox'),\n      content: t(`remove viewBox attribute when possible`),\n    },\n    {\n      plugin: 'cleanupEnableBackground',\n      label: t('Remove/tidy enable-background'),\n      content: t(`remove or cleanup enable-background attribute when possible`),\n    },\n    {\n      plugin: 'removeHiddenElems',\n      label: t('Remove hidden elements'),\n      content: t(`remove hidden elements`),\n    },\n    { plugin: 'removeEmptyText', label: 'Remove empty text', content: t('remove empty Text elements') },\n    {\n      plugin: 'convertShapeToPath',\n      label: 'Shapes to (smaller) paths',\n      content: t('convert some basic shapes to <path>'),\n    },\n    {\n      plugin: 'moveElemsAttrsToGroup',\n      label: 'Move attrs to parent group',\n      content: t(`move elements' attributes to their enclosing group`),\n    },\n    {\n      plugin: 'moveGroupAttrsToElems',\n      label: 'Move group attrs to elements',\n      content: t('move some group attributes to the contained elements'),\n    },\n    { plugin: 'collapseGroups', label: 'Collapse useless groups', content: t('collapse useless groups') },\n    {\n      plugin: 'convertPathData',\n      label: 'Round/rewrite paths',\n      content: t(\n        'convert Path data to relative or absolute (whichever is shorter), convert one segment to another, trim useless delimiters, smart rounding, and much more',\n      ),\n    },\n    {\n      plugin: 'convertEllipseToCircle',\n      label: 'Convert non-eccentric <ellipse> to <circle>',\n      content: t('convert non-eccentric <ellipse> to <circle>'),\n    },\n    {\n      plugin: 'convertTransform',\n      label: 'Round/rewrite transforms',\n      content: t('collapse multiple transforms into one, convert matrices to the short aliases, and much more'),\n    },\n    { plugin: 'removeEmptyAttrs', label: 'Remove empty attrs', content: t('remove empty attributes') },\n    {\n      plugin: 'removeEmptyContainers',\n      label: 'Remove empty containers',\n      content: t('remove empty Container elements'),\n    },\n    { plugin: 'mergePaths', label: 'Merge paths', content: t('merge multiple Paths into one') },\n    { plugin: 'removeUnusedNS', label: 'Remove unused namespaces', content: t('remove unused namespaces declaration') },\n    {\n      plugin: 'reusePaths',\n      label: 'Replace duplicate elements with links',\n      content: t('Find duplicated elements and replace them with links'),\n    },\n    { plugin: 'sortAttrs', label: 'Sort attrs', content: t('sort element attributes for epic readability') },\n    {\n      plugin: 'sortDefsChildren',\n      label: 'Sort children of <defs>',\n      content: t('sort children of <defs> in order to improve compression'),\n    },\n    { plugin: 'removeTitle', label: 'Remove <title>', content: t('remove <title>') },\n    { plugin: 'removeDesc', label: 'Remove <desc>', content: t('remove <desc>') },\n    {\n      plugin: 'removeDimensions',\n      label: 'Prefer viewBox to width/height',\n      content: t(`remove width/height and add viewBox if it's missing (opposite to removeViewBox, disable it first)`),\n    },\n    { plugin: 'removeStyleElement', label: 'Remove style elements', content: t('remove <style> elements') },\n    { plugin: 'removeScriptElement', label: 'Remove script elements', content: t('remove <script> elements') },\n  ];\n\n  return (\n    <Wrapper>\n      <StyledLayout\n        title={t(`SVG Optimizer`)}\n        extra={<InputFile type=\"file\" accept=\"image/svg+xml\" multiple onChange={handleChange} />}\n      >\n        <ResultCode\n          codeProps={{\n            style: {\n              height: 'calc(100vh - 87px)',\n              overflow: 'auto',\n              margin: 0,\n              backgroundSize: '16px 16px',\n              backgroundImage: `url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\"%3E%3Cpath d=\"M1 2V0h1v1H0v1z\" fill-opacity=\".05\"/%3E%3C/svg%3E')`,\n            },\n          }}\n        >\n          {imageData &&\n            imageData.length > 0 &&\n            imageData.map((item, key) => {\n              const rawLength = item.raw ? gzip(item.raw).buffer.byteLength : 0;\n              const tinyLength = item.tiny ? gzip(item.tiny).buffer.byteLength : 0;\n              const percen = round((tinyLength / rawLength) * 100, 2);\n              return (\n                <div key={key}>\n                  {item.tiny && item.dimensions && (\n                    <Iframe\n                      sandbox=\"allow-scripts\"\n                      scrolling=\"no\"\n                      src={`data:image/svg+xml,${encodeURIComponent(item.tiny)}`}\n                      width={item.dimensions.width}\n                      height={item.dimensions.height}\n                    />\n                  )}\n                  {item.error && (\n                    <div key={key} style={{ color: 'red' }}>\n                      {item.error}\n                    </div>\n                  )}\n                  <PrettyBytesInfo>\n                    <img src={item.base64} height={23} />\n                    <span>\n                      {prettyBytes(rawLength, 2, false)} → {prettyBytes(tinyLength, 2, false)}\n                    </span>\n                    <Percen num={percen}>{percen}%</Percen>\n                    <CopyButton value={item.tiny || ''} />\n                    <a href={`data:image/svg+xml,${item.tiny}`} download={item.name}>\n                      download <b>{item.name}</b>\n                    </a>\n                  </PrettyBytesInfo>\n                </div>\n              );\n            })}\n        </ResultCode>\n      </StyledLayout>\n      {imageData && imageData.length > 0 && (\n        <StyledLayout\n          title={t(`Options`, { ns: 'common' })}\n          style={{ maxWidth: 420 }}\n          extra={\n            <Fragment>\n              <Button onClick={() => setOptions(defaultOptions)}>Reset</Button>\n            </Fragment>\n          }\n        >\n          <ResultCode codeProps={{ style: { height: 'calc(100vh - 87px)', overflow: 'auto', margin: 0 } }}>\n            <Spacing>\n              <Checkbox\n                checked={!!options.pretty}\n                onChange={({ target }) => setOptions({ ...options, pretty: target.checked })}\n              >\n                Prettify markup <Info>{t<string>('Prettify markup')}</Info>\n              </Checkbox>\n              <Checkbox\n                checked={!!options.multipass}\n                onChange={({ target }) => setOptions({ ...options, multipass: target.checked })}\n              >\n                {t<string>('multipass')}{' '}\n                <Info>{t<string>('Pass over SVGs multiple times to ensure all optimizations are applied')}</Info>\n              </Checkbox>\n              <Checkbox\n                type=\"range\"\n                max=\"8\"\n                min=\"0\"\n                step=\"1\"\n                value={options.floatPrecision}\n                onChange={({ target }) => setOptions({ ...options, floatPrecision: Number(target.value) })}\n              >\n                {options.floatPrecision} {t<string>('Precision')}{' '}\n                <Info>\n                  {t<string>(\n                    'Precision of floating point numbers. Will be passed to each plugin that suppors this param.',\n                  )}\n                </Info>\n              </Checkbox>\n              {opts.map((item, key) => {\n                return (\n                  <Checkbox\n                    key={key}\n                    checked={includesPlugin(item.plugin, options.plugins)}\n                    onChange={({ target }) => setOptions(settingPlugin(item.plugin, target.checked))}\n                  >\n                    {t<string>(item.label)} <Info>{t<string>(item.content)}</Info>\n                  </Checkbox>\n                );\n              })}\n            </Spacing>\n          </ResultCode>\n        </StyledLayout>\n      )}\n    </Wrapper>\n  );\n}\n"],"names":["createDimensionsExtractor","dimensions","width","height","plugin","type","name","fn","element","enter","_ref","attributes","_ref2","undefined","Number","parseFloat","viewBox","split","compress","svgInput","settings","plugins","forEach","item","floatPrecision","push","params","extractDimensionsPlugin","optimize","multipass","js2svg","indent","pretty","data","modernError","error","message","prettyBytes","num","precision","addSpace","UNITS","Math","abs","exponent","min","floor","log10","length","toPrecision","fileReader","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","readAsText","onloadend","result","toString","onerror","err","Info","styled","Iframe","InputFile","PrettyBytesInfo","Percen","props","css","defaultOptions","Checkbox","children","other","_jsx","_jsxs","includesPlugin","includes","SVGOptimizer","t","useTranslation","useState","options","setOptions","imageData","setImageData","handleChange","evn","files","target","all","Array","from","map","console","log","base64","raw","d","tiny","useEffect","opts","label","content","Wrapper","StyledLayout","title","extra","accept","multiple","onChange","ResultCode","codeProps","style","overflow","margin","backgroundSize","backgroundImage","key","rawLength","gzip","buffer","byteLength","tinyLength","percen","places","mult","round","sandbox","scrolling","src","encodeURIComponent","color","CopyButton","value","href","download","ns","maxWidth","Fragment","Button","onClick","Spacing","checked","_ref4","_ref5","max","step","_ref6","_ref7","splice","indexOf","settingPlugin"],"sourceRoot":""}