{"version":3,"file":"static/js/5327.c0d61129.chunk.js","mappings":"wPAEaA,GAAWC,EAAAA,EAAAA,OAAmC,YAAkB,IAAfC,EAAUC,EAAVD,SAC5D,OACEE,EAAAA,EAAAA,KAAAA,MAAAA,CAAKC,QAAQ,YAAWH,UACtBI,EAAAA,EAAAA,MAAAA,IAAAA,CAAGC,KAAK,OAAOC,SAAS,UAASN,SAAAA,EAC/BE,EAAAA,EAAAA,KAAAA,OAAAA,CAAMK,GAAG,KAAKC,GAAG,OAAOC,GAAG,KAAKC,GAAG,KAAKC,OAAO,4BAA4BC,cAAc,YACzFV,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,GAAG,IACHC,GAAG,KACHC,GAAG,OACHC,GAAG,OACHC,OAAO,4BACPC,cAAc,SACdC,UAAU,wBAEZX,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,OAAO,4BACPG,gBAAgB,MAChBF,cAAc,SACdC,UAAU,8BAEZX,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,GAAG,QACHC,GAAG,SACHC,GAAG,SACHC,GAAG,SACHC,OAAO,4BACPG,gBAAgB,MAChBF,cAAc,SACdC,UAAU,8BAEZX,EAAAA,EAAAA,KAAAA,OAAAA,CAAMa,MAAM,KAAKC,OAAO,KAAKC,EAAE,KAAKC,EAAE,KAAKP,OAAO,4BAA4BQ,GAAG,OACjFjB,EAAAA,EAAAA,KAAAA,OAAAA,CACEkB,WAAW,0HACXC,SAAS,KACTC,cAAc,eACdjB,KAAK,eAAcL,UAEnBI,EAAAA,EAAAA,MAAAA,QAAAA,CAAOa,EAAE,aAAaC,EAAE,KAAIlB,SAAAA,CACzBA,EAAU,aAMvB,IC3CMuB,EAAcC,EAAAA,GAAAA,IAAU,oFAMxBC,EAAYD,EAAAA,GAAAA,IAAU,0EAMtBE,EAAaF,EAAAA,GAAAA,IAAU,2FAMvBG,EAAcH,EAAAA,GAAAA,IAAU,sFAKxBI,GAAO7B,EAAAA,EAAAA,OAA6D,YAA0B,IAAvBC,EAAkBC,EAAlBD,SAAU6B,EAAQ5B,EAAR4B,OACrF,OACEzB,EAAAA,EAAAA,MAACmB,EAAW,CAAAvB,SAAAA,EACVE,EAAAA,EAAAA,KAACwB,EAAU,CAAA1B,SAAE8B,MAAMC,QAAQF,GAAUA,EAAOG,KAAK,KAAOH,KACxD3B,EAAAA,EAAAA,KAACuB,EAAS,CAAAzB,SAAEA,MAGlB,IAEe,SAASiC,IACtB,IAAQC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,8BAA+B,WAArDD,EAER,OACEhC,EAAAA,EAAAA,KAACkC,EAAAA,GAAO,CAAApC,UACNE,EAAAA,EAAAA,KAACmC,EAAAA,GAAY,CAACC,SAAS,UAAUC,MAAOL,EAAU,+CAAgD,CAAC,GAAGlC,UACpGE,EAAAA,EAAAA,KAACsC,EAAAA,GAAO,CAACC,MAAO,CAAEC,SAAU,OAAQC,cAAe,MAAOC,IAAK,YAAaC,cAAe,KAAM7C,SAC9F8C,OAAOC,KAAKC,KAAYC,KAAI,SAACC,EAASC,GACrC,OACE/C,EAAAA,EAAAA,MAACwB,EAAI,CAAWC,OAAQmB,IAAWE,GAASlD,SAAAA,EAC1CE,EAAAA,EAAAA,KAACJ,EAAQ,CAAAE,SAAEkD,KACXhD,EAAAA,EAAAA,KAACyB,EAAW,CAAA3B,SAAEmD,EAAM,MAFXA,EAKf,SAKV,C","sources":["../../packages/standard-chinese-characters/src/Icon.tsx","../../packages/standard-chinese-characters/src/index.tsx"],"sourcesContent":["import { memo } from 'react';\n\nexport const HansIcon = memo<React.PropsWithChildren<any>>(({ children }) => {\n  return (\n    <svg viewBox=\"0 0 46 46\">\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <line x1=\".5\" x2=\"45.5\" y1=\"23\" y2=\"23\" stroke=\"var(--color-border-muted)\" strokeLinecap=\"square\" />\n        <line\n          x1=\"1\"\n          x2=\"45\"\n          y1=\"23.5\"\n          y2=\"23.5\"\n          stroke=\"var(--color-border-muted)\"\n          strokeLinecap=\"square\"\n          transform=\"rotate(90 23 23.5)\"\n        />\n        <line\n          x1=\"-7.712\"\n          x2=\"53.099\"\n          y1=\"22.883\"\n          y2=\"22.883\"\n          stroke=\"var(--color-border-muted)\"\n          strokeDasharray=\"2 4\"\n          strokeLinecap=\"square\"\n          transform=\"rotate(45 22.705 23.311)\"\n        />\n        <line\n          x1=\"-7.88\"\n          x2=\"52.922\"\n          y1=\"22.835\"\n          y2=\"21.774\"\n          stroke=\"var(--color-border-muted)\"\n          strokeDasharray=\"2 4\"\n          strokeLinecap=\"square\"\n          transform=\"rotate(136 22.62 22.749)\"\n        />\n        <rect width=\"45\" height=\"45\" x=\".5\" y=\".5\" stroke=\"var(--color-border-muted)\" rx=\"3\" />\n        <text\n          fontFamily=\"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif\"\n          fontSize=\"23\"\n          letterSpacing=\"-0.828571429\"\n          fill=\"currentColor\"\n        >\n          <tspan x=\"11.9142857\" y=\"31\">\n            {children}{' '}\n          </tspan>\n        </text>\n      </g>\n    </svg>\n  );\n});\n","import { memo } from 'react';\nimport { Wrapper, StyledLayout, Spacing } from '@wcj/tools-react-components';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport characters from 'togscc';\nimport { HansIcon } from './Icon';\n\nconst HansWarpper = styled.div`\n  width: 42px;\n  border-radius: 2px;\n  display: initial;\n`;\n\nconst HansInner = styled.div`\n  height: 100%;\n  width: 100%;\n  height: 42px;\n`;\n\nconst HansPinyin = styled.div`\n  font-size: 14px;\n  text-align: center;\n  padding-bottom: 6px;\n`;\n\nconst HansContent = styled.div`\n  text-align: center;\n  color: var(--color-border-default);\n`;\n\nconst Hans = memo<React.PropsWithChildren<{ pinyin: string | string[] }>>(({ children, pinyin }) => {\n  return (\n    <HansWarpper>\n      <HansPinyin>{Array.isArray(pinyin) ? pinyin.join(',') : pinyin}</HansPinyin>\n      <HansInner>{children}</HansInner>\n    </HansWarpper>\n  );\n});\n\nexport default function StandardChineseCharacters() {\n  const { t } = useTranslation(['standard-chinese-characters', 'common']);\n\n  return (\n    <Wrapper>\n      <StyledLayout overflow=\"initial\" title={t<string>('Table of General Standard Chinese Characters', {})}>\n        <Spacing style={{ flexWrap: 'wrap', flexDirection: 'row', gap: '40px 61px', paddingBottom: 120 }}>\n          {Object.keys(characters).map((keyname, idx) => {\n            return (\n              <Hans key={idx} pinyin={characters[keyname]}>\n                <HansIcon>{keyname}</HansIcon>\n                <HansContent>{idx + 1}</HansContent>\n              </Hans>\n            );\n          })}\n        </Spacing>\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["HansIcon","memo","children","_ref","_jsx","viewBox","_jsxs","fill","fillRule","x1","x2","y1","y2","stroke","strokeLinecap","transform","strokeDasharray","width","height","x","y","rx","fontFamily","fontSize","letterSpacing","HansWarpper","styled","HansInner","HansPinyin","HansContent","Hans","pinyin","Array","isArray","join","StandardChineseCharacters","t","useTranslation","Wrapper","StyledLayout","overflow","title","Spacing","style","flexWrap","flexDirection","gap","paddingBottom","Object","keys","characters","map","keyname","idx"],"sourceRoot":""}