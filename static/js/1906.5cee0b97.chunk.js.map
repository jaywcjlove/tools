{"version":3,"file":"static/js/1906.5cee0b97.chunk.js","mappings":"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","sources":["../../node_modules/extend/index.js","../../node_modules/unified/node_modules/is-buffer/index.js","../../node_modules/vfile/node_modules/is-buffer/index.js","../../node_modules/ccount/index.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-heading-rank/index.js","../../node_modules/hast-util-is-element/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/unist-util-visit-parents/index.js","../../node_modules/unist-util-visit/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  item.value?.trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethroughs. So they sort of cancel each other out.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/c47743b/lib/unsafe.js#L11>\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","isBuffer","ccount","character","source","String","TypeError","count","index","indexOf","characterEntitiesLegacy","parse","tokens","input","start","end","token","slice","trim","push","stringify","values","settings","join","padRight","padLeft","element","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","own","hasProperty","node","type","properties","undefined","headingRank","tagName","toLowerCase","code","isElement","test","parent","context","check","convertElement","Number","POSITIVE_INFINITY","Error","children","tagNameFactory","anyFactory","castFactory","tests","checks","parameters","this","Boolean","all","one","result","whitespace","thing","replace","htmlVoidElements","inlineCode","_","sequence","RegExp","unsafe","pattern","expression","patternCompile","match","atBreak","exec","position","peek","listItem","safeOptions","listItemIndent","style","checkListItemIndent","bullet","bulletCurrent","checkBullet","ordered","incrementListMarker","size","spread","Math","ceil","tracker","track","move","repeat","shift","exit","enter","indentLines","containerFlow","current","line","blank","association","label","identifier","decodeString","marker","indexStack","results","child","handle","before","after","bulletLastUsed","between","pop","left","right","containerPhrasing","handlers","charAt","eol","map","_compiled","patternInScope","stack","listInScope","inConstruct","notInConstruct","list","none","includes","safe","config","positions","infos","sort","numerical","escapeBackslashes","encode","toUpperCase","a","b","whole","options_","now","lineShift","column","chunks","split","tail","includeImageAlt","alt","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","markdownSpace","prefix","consume","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","splice","remove","items","chunkStart","from","unshift","apply","classifyCharacter","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","normalizeIdentifier","resolveAll","events","called","resolve","Schema","property","normal","space","merge","definitions","assign","create","definition","prop","info","DefinedInfo","transform","attributes","mustUseProperty","normalize","attribute","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","lang","language","loading","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","rest","camelcase","dashes","kebab","keys","types","mark","defined","powers","increment","contentDefaults","rehypeAutolinkHeadings","props","behavior","behaviour","group","around","inject","tree","visit","toChildren","SKIP","nodes","grouping","toNode","openDelimiter","closeDelimiter","item","str","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","done","punctuationContinuation","punctuation","balance","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","inside","wwwAutolink","self","previousWww","previous","previousUnbalanced","attempt","httpAutolink","previousHttp","t1","t2","p","s","colon","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_balanced","_gfmAutolinkLiteralWalkedInto","indent","sliceSerialize","gfmFootnote","tokenizeDefinitionStart","continuation","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveTo","resolveToPotentialGfmFootnoteCall","labelStart","parser","gfmFootnotes","_bufferIndex","chunk","contentType","replacement","callStart","callData","callEscape","_container","labelAfter","labelEscape","gfmStrikethrough","single","singleTilde","tokenizer","tokenizeStrikethrough","resolveAllStrikethrough","insideSpan","null","attentionMarkers","_close","_open","strikethrough","nextEvents","more","gfmTable","flow","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","interrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","prefixed","lazy","disable","_gfmTableDynamicInterruptHack","inHead","inDelimiterRow","inRow","contentStart","contentEnd","cellStart","seenCellInRow","cell","tasklistCheck","_gfmTasklistFirstContentOfListItem","close","spaceThenNonSpace","gfmTaskListItem","gfm","findAndReplace","ignored","convert","ignore","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","visitor","parents","grandparent","change","lastIndex","matchObject","global","escape","gfmAutolinkLiteralFromMarkdown","transforms","findUrl","findEmail","literalAutolink","url","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","autolinkEmail","autolinkProtocol","gfmAutolinkLiteralToMarkdown","protocol","parts","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","gfmFootnoteToMarkdown","footnoteReference","footnoteDefinition","subexit","gfmStrikethroughFromMarkdown","canContainEols","gfmStrikethroughToMarkdown","delete","handleDelete","serialize","defaultStringLength","toAlignment","codePointAt","gfmTableFromMarkdown","table","setData","tableData","enterCell","tableHeader","tableRow","codeText","resume","getData","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","concat","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","lines","delimiterStart","delimiterEnd","markdownTable","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","paragraph","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","buffer","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","field","bail","error","getPrototypeOf","Symbol","toStringTag","iterator","middleware","callback","fnExpectsCallback","exception","Promise","then","output","unified","frozen","transformers","fns","pipeline","run","middlewareIndex","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","addPlugin","addList","addPreset","plugin","plugins","entry","isPlainObj","doc","file","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","runSync","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","VFile","typeFactory","propsFactory","pointStart","point","pointEnd","stringifyPosition","pos","EXIT","reverse","factory","subresult","grandparents","toResult","VFileMessage","reason","place","message","fatal","ruleId","actual","expected","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","JSON","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","messages","history","stored","assertNonEmpty","assertPart","stem","encoding","part"],"sourceRoot":""}