{"version":3,"file":"static/js/187.fd415431.chunk.js","mappings":"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,IAET,IAAXjD,GACLmD,IACAnD,EAAQ4C,EAAOxC,QAAQ6C,EAAWjD,EAAQiD,EAAUtE,QAGtD,OAAOwE,qGCpBF,IAAMC,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,2CCnGK,SAASC,EAAMvF,GAWpB,IATA,IAKIwF,EAEAC,EAPAC,EAAS,GACTC,EAAQP,OAAOpF,GAAS,IACxBkC,EAAQyD,EAAMrD,QAAQ,KACtBsD,EAAQ,GAMJJ,IACS,IAAXtD,IACFA,EAAQyD,EAAM9E,OACd2E,GAAM,KAGRC,EAAQE,EAAME,MAAMD,EAAO1D,GAAO4D,SAEpBN,GACZE,EAAOd,KAAKa,GAGdG,EAAQ1D,EAAQ,EAChBA,EAAQyD,EAAMrD,QAAQ,IAAKsD,GAG7B,OAAOF,EAUF,SAASK,EAAUC,EAAQpG,GAChC,IAAIqG,EAAWrG,GAAW,GAO1B,MAJkC,KAA9BoG,EAAOA,EAAOnF,OAAS,KACzBmF,EAASA,EAAOE,OAAO,KAGlBF,EACJG,MACEF,EAASG,SAAW,IAAM,IACzB,MACsB,IAArBH,EAASI,QAAoB,GAAK,MAEtCP,iIC3DL,IAAMjD,EAAUyD,SAASC,cAAc,KAMhC,SAASC,EAA8BxG,GAC5C,IAAMyG,EAAqB,IAAMzG,EAAQ,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,MACgB,SAAdrO,EAAKO,MACU,YAAdP,EAAKO,OACF8N,IAAQ7M,EAAAA,EAAAA,GAAUxB,EAAM,YAAa6E,EAAAA,EAAAA,GAAS7E,KF9H/C,SAAkBA,GACvB,OAEGA,GAAsB,SAAdA,EAAKO,MACdq3B,EAAM53B,KACN6E,EAAAA,EAAAA,GAAS7E,IACT64B,EAAW74B,IACV63B,EAAK73B,KAAS+E,EAAAA,EAAAA,GAAY/E,EAAM,YEuH2B84B,CAAS94B,sDChJzE,IA5B2D,WAAiB,IAAhBrC,EAAgB,uDAAN,GACpE,EAAwFA,EAAhFo7B,cAAAA,OAAR,MAAwB,sBAAxB,IAAwFp7B,EAAzCq7B,eAAAA,OAA/C,MAAgE,oBAAhE,EACA,OAAO,SAAC3B,IACNC,EAAAA,EAAAA,IAAMD,GAAM,SAACr3B,EAA0BC,EAAOwB,GAC5C,GAAkB,YAAdzB,EAAKO,MAAoC,SAAdP,EAAKO,KAAiB,CAMnD,IAAIoD,GAAQ,EACZ3D,EAAK+B,SAAW/B,EAAK+B,SAASU,QAAO,SAACw2B,GACpC,MAAkB,YAAdA,EAAK14B,MAAsB04B,EAAKl7B,MAAM8F,SAAWk1B,GACnDp1B,GAAQ,GACD,GAES,YAAds1B,EAAK14B,MAAsB04B,EAAKl7B,MAAM8F,SAAWm1B,GACnDr1B,GAAQ,GACD,IAGDA,wHCnCLu1B,EAAS,CACpB,UACA,UACA,QACA,aACA,OACA,KACA,UACA,SACA,MACA,WACA,KACA,SACA,MACA,MACA,KACA,KACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,SACA,KACA,KACA,UACA,OACA,OACA,MACA,KACA,WACA,SACA,IACA,YACA,MACA,UACA,UACA,QACA,QACA,KACA,KACA,QACA,KACA,KACA,QACA,KACA,KACA,MACA,OC3DWnjB,EAAU,CAErB,SACA,QACA,SACA,YCLWojB,EAAY,CACvB,OACA,OACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,WACA,QACA,KACA,SACA,SACA,QACA,WACA,QACA,SCgDIC,GAAgB34B,EAAA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","sources":["../../node_modules/extend/index.js","../../node_modules/github-slugger/index.js","../../node_modules/github-slugger/regex.js","../../node_modules/hast-util-is-body-ok-link/index.js","../../node_modules/hast-util-is-body-ok-link/node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-is-body-ok-link/node_modules/hast-util-is-element/convert.js","../../node_modules/hast-util-is-body-ok-link/node_modules/hast-util-is-element/index.js","../../node_modules/is-buffer/index.js","../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../node_modules/ccount/index.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-embedded/index.js","../../node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-heading-rank/index.js","../../node_modules/hast-util-is-element/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/hast-util-phrasing/index.js","../../node_modules/html-whitespace-sensitive-tag-names/index.js","../../node_modules/rehype-format/index.js","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/rehype-minify-whitespace/block.js","../../node_modules/rehype-minify-whitespace/content.js","../../node_modules/rehype-minify-whitespace/skippable.js","../../node_modules/rehype-minify-whitespace/index.js","../../node_modules/rehype-slug/index.js","../../node_modules/rehype-video/src/index.ts","../../node_modules/rehype-video/src/detailsNode.ts","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/unified/lib/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/unist-util-visit-parents/index.js","../../node_modules/unist-util-visit/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","const regex = require('./regex.js')\n\nmodule.exports = BananaSlug\n\nconst own = Object.hasOwnProperty\n\nfunction BananaSlug () {\n  const self = this\n\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  const self = this\n  let slug = slugger(value, maintainCase === true)\n  const originalSlug = slug\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\n  }\n\n  self.occurrences[slug] = 0\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null)\n}\n\nfunction slugger (string, maintainCase) {\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.toLowerCase()\n  return string.replace(regex, '').replace(/ /g, '-')\n}\n\nBananaSlug.slug = slugger\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31BB-\\u31EF\\u3200-\\u33FF\\u4DB6-\\u4DFF\\u9FF0-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7C7-\\uA7F6\\uA828-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB68-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD47-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD-\\uDDCF\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC60-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD00-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D-\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE4-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","/**\n * @fileoverview\n *   Check if a `link` element is “Body OK”.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   var h = require('hastscript')\n *   var ok = require('hast-util-is-body-ok-link')\n *\n *   ok(h('link', {itemProp: 'foo'})) //=> true\n *   ok(h('link', {rel: ['stylesheet'], href: 'index.css'})) //=> true\n *   ok(h('link', {rel: ['author'], href: 'index.css'})) //=> false\n *   ```\n *\n *   ## API\n *\n *   ### `isBodyOkLink(node)`\n *\n *   * Return `true` for `link` elements with an `itemProp`\n *   * Return `true` for `link` elements with a `rel` list where one or more\n *     entries are `pingback`, `prefetch`, or `stylesheet`.\n */\n\n'use strict'\n\nvar is = require('hast-util-is-element')\nvar has = require('hast-util-has-property')\n\nmodule.exports = ok\n\nvar list = ['pingback', 'prefetch', 'stylesheet']\n\nfunction ok(node) {\n  var length\n  var index\n  var rel\n\n  if (!is(node, 'link')) {\n    return false\n  }\n\n  if (has(node, 'itemProp')) {\n    return true\n  }\n\n  rel = (node.properties || {}).rel || []\n  length = rel.length\n  index = -1\n\n  if (rel.length === 0) {\n    return false\n  }\n\n  while (++index < length) {\n    if (list.indexOf(rel[index]) === -1) {\n      return false\n    }\n  }\n\n  return true\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = hasProperty\n\n// Check if `node` has a set `name` property.\nfunction hasProperty(node, name) {\n  var props\n  var value\n\n  if (!node || !name || typeof node !== 'object' || node.type !== 'element') {\n    return false\n  }\n\n  props = node.properties\n  value = props && own.call(props, name) && props[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (typeof test === 'string') {\n    return tagNameFactory(test)\n  }\n\n  if (test === null || test === undefined) {\n    return element\n  }\n\n  if (typeof test === 'object') {\n    return any(test)\n  }\n\n  if (typeof test === 'function') {\n    return callFactory(test)\n  }\n\n  throw new Error('Expected function, string, or array as test')\n}\n\nfunction convertAll(tests) {\n  var length = tests.length\n  var index = -1\n  var results = []\n\n  while (++index < length) {\n    results[index] = convert(tests[index])\n  }\n\n  return results\n}\n\nfunction any(tests) {\n  var checks = convertAll(tests)\n  var length = checks.length\n\n  return matches\n\n  function matches() {\n    var index = -1\n\n    while (++index < length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string a tag name check.\nfunction tagNameFactory(test) {\n  return tagName\n\n  function tagName(node) {\n    return element(node) && node.tagName === test\n  }\n}\n\n// Utility to convert a function check.\nfunction callFactory(test) {\n  return call\n\n  function call(node) {\n    return element(node) && Boolean(test.apply(this, arguments))\n  }\n}\n\n// Utility to return true if this is an element.\nfunction element(node) {\n  return (\n    node &&\n    typeof node === 'object' &&\n    node.type === 'element' &&\n    typeof node.tagName === 'string'\n  )\n}\n","'use strict'\n\nvar convert = require('./convert')\n\nmodule.exports = isElement\n\nisElement.convert = convert\n\n// Check if if `node` is an `element` and whether it passes the given test.\nfunction isElement(node, test, index, parent, context) {\n  var hasParent = parent !== null && parent !== undefined\n  var hasIndex = index !== null && index !== undefined\n  var check = convert(test)\n\n  if (\n    hasIndex &&\n    (typeof index !== 'number' || index < 0 || index === Infinity)\n  ) {\n    throw new Error('Expected positive finite index for child node')\n  }\n\n  if (hasParent && (!parent.type || !parent.children)) {\n    throw new Error('Expected parent node')\n  }\n\n  if (!node || !node.type || typeof node.type !== 'string') {\n    return false\n  }\n\n  if (hasParent !== hasIndex) {\n    throw new Error('Expected both parent and index')\n  }\n\n  return check.call(context, node, index, parent)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Element & {tagName: 'audio'|'canvas'|'embed'|'iframe'|'img'|'math'|'object'|'picture'|'svg'|'video'}} Embedded\n * @typedef {import('hast-util-is-element').AssertPredicate<Embedded>} AssertEmbedded\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * Check if a node is an embedded element.\n * @type {AssertEmbedded}\n */\n// @ts-ignore Sure, the assertion matches.\nexport const embedded = convertElement([\n  'audio',\n  'canvas',\n  'embed',\n  'iframe',\n  'img',\n  'math',\n  'object',\n  'picture',\n  'svg',\n  'video'\n])\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {embedded} from 'hast-util-embedded'\nimport bodyOkLink from 'hast-util-is-body-ok-link'\n\nvar basic = convertElement([\n  'a',\n  'abbr',\n  // `area` is in fact only phrasing if it is inside a `map` element.\n  // However, since `area`s are required to be inside a `map` element, and it’s\n  // a rather involved check, it’s ignored here for now.\n  'area',\n  'b',\n  'bdi',\n  'bdo',\n  'br',\n  'button',\n  'cite',\n  'code',\n  'data',\n  'datalist',\n  'del',\n  'dfn',\n  'em',\n  'i',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'map',\n  'mark',\n  'meter',\n  'noscript',\n  'output',\n  'progress',\n  'q',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'select',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n  'template',\n  'textarea',\n  'time',\n  'u',\n  'var',\n  'wbr'\n])\n\nvar meta = convertElement('meta')\n\n/**\n * @param {unknown} node\n * @returns {boolean}\n */\nexport function phrasing(node) {\n  return (\n    // @ts-ignore Looks like a text.\n    (node && node.type === 'text') ||\n    basic(node) ||\n    embedded(node) ||\n    bodyOkLink(node) ||\n    (meta(node) && hasProperty(node, 'itemProp'))\n  )\n}\n","/**\n * @fileoverview\n *   List of whitespace sensitive HTML tag names\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'\n *\n *   whitespaceSensitiveTagNames\n *   //=> ['pre', 'script', 'style', 'textarea']\n *   ```\n *\n *   ## API\n *\n *   ### `whitespaceSensitiveTagNames`\n *\n *   List of whitespace sensitive HTML tag names (`string[]`).\n */\n\nexport const whitespaceSensitiveTagNames = [\n  'pre',\n  'script',\n  'style',\n  'textarea'\n]\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root['children'][number]} Child\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Child} Node\n *\n * @typedef Options\n *   Configuration.\n * @property {number|string} [indent=2]\n *   Indentation per level (`number`, `string`, default: `2`).\n *   When number, uses that amount of spaces.\n *   When `string`, uses that per indentation level.\n * @property {boolean} [indentInitial=true]\n *   Whether to indent the first level (`boolean`, default: `true`).\n *   This is usually the `<html>`, thus not indenting `head` and `body`.\n * @property {Array<string>} [blanks=[]]\n *   List of tag names to join with a blank line (`Array<string>`, default:\n *   `[]`).\n *   These tags, when next to each other, are joined by a blank line (`\\n\\n`).\n *   For example, when `['head', 'body']` is given, a blank line is added\n *   between these two.\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {visitParents, SKIP} from 'unist-util-visit-parents'\nimport {embedded} from 'hast-util-embedded'\nimport {phrasing} from 'hast-util-phrasing'\nimport {whitespace} from 'hast-util-whitespace'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'\n\nconst minify = rehypeMinifyWhitespace({newlines: true})\n\n/**\n * Format whitespace in HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeFormat(options = {}) {\n  let indent = options.indent || 2\n  let indentInitial = options.indentInitial\n\n  if (typeof indent === 'number') {\n    indent = ' '.repeat(indent)\n  }\n\n  // Default to indenting the initial level.\n  if (indentInitial === null || indentInitial === undefined) {\n    indentInitial = true\n  }\n\n  return (tree) => {\n    /** @type {boolean|undefined} */\n    let head\n\n    // @ts-expect-error: fine, it’s a sync transformer.\n    minify(tree)\n\n    // eslint-disable-next-line complexity\n    visitParents(tree, (node, parents) => {\n      let index = -1\n\n      if (!('children' in node)) {\n        return\n      }\n\n      if (isElement(node, 'head')) {\n        head = true\n      }\n\n      if (head && isElement(node, 'body')) {\n        head = undefined\n      }\n\n      if (isElement(node, whitespaceSensitiveTagNames)) {\n        return SKIP\n      }\n\n      const children = node.children\n      let level = parents.length\n\n      // Don’t indent content of whitespace-sensitive nodes / inlines.\n      if (children.length === 0 || !padding(node, head)) {\n        return\n      }\n\n      if (!indentInitial) {\n        level--\n      }\n\n      /** @type {boolean|undefined} */\n      let eol\n\n      // Indent newlines in `text`.\n      while (++index < children.length) {\n        const child = children[index]\n\n        if (child.type === 'text' || child.type === 'comment') {\n          if (child.value.includes('\\n')) {\n            eol = true\n          }\n\n          child.value = child.value.replace(\n            / *\\n/g,\n            '$&' + String(indent).repeat(level)\n          )\n        }\n      }\n\n      /** @type {Array<Child>} */\n      const result = []\n      /** @type {Child|undefined} */\n      let previous\n\n      index = -1\n\n      while (++index < children.length) {\n        const child = children[index]\n\n        if (padding(child, head) || (eol && !index)) {\n          addBreak(result, level, child)\n          eol = true\n        }\n\n        previous = child\n        result.push(child)\n      }\n\n      if (previous && (eol || padding(previous, head))) {\n        // Ignore trailing whitespace (if that already existed), as we’ll add\n        // properly indented whitespace.\n        if (whitespace(previous)) {\n          result.pop()\n          previous = result[result.length - 1]\n        }\n\n        addBreak(result, level - 1)\n      }\n\n      node.children = result\n    })\n  }\n\n  /**\n   * @param {Array<Child>} list\n   * @param {number} level\n   * @param {Child} [next]\n   * @returns {void}\n   */\n  function addBreak(list, level, next) {\n    const tail = list[list.length - 1]\n    const previous = whitespace(tail) ? list[list.length - 2] : tail\n    const replace =\n      (blank(previous) && blank(next) ? '\\n\\n' : '\\n') +\n      String(indent).repeat(Math.max(level, 0))\n\n    if (tail && tail.type === 'text') {\n      tail.value = whitespace(tail) ? replace : tail.value + replace\n    } else {\n      list.push({type: 'text', value: replace})\n    }\n  }\n\n  /**\n   * @param {Node|undefined} node\n   * @returns {boolean}\n   */\n  function blank(node) {\n    return Boolean(\n      node &&\n        node.type === 'element' &&\n        options.blanks &&\n        options.blanks.length > 0 &&\n        options.blanks.includes(node.tagName)\n    )\n  }\n}\n\n/**\n * @param {Node} node\n * @param {boolean|undefined} head\n * @returns {boolean}\n */\nfunction padding(node, head) {\n  return (\n    node.type === 'root' ||\n    (node.type === 'element'\n      ? head || isElement(node, 'script') || embedded(node) || !phrasing(node)\n      : false)\n  )\n}\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'comment' && item.value.trim() === openDelimiter) {\n            start = true;\n            return false\n          }\n          if (item.type === 'comment' && item.value.trim() === closeDelimiter) {\n            start = false;\n            return false\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nexport const blocks = [\n  'address', // Flow content.\n  'article', // Sections and headings.\n  'aside', // Sections and headings.\n  'blockquote', // Flow content.\n  'body', // Page.\n  'br', // Contribute whitespace intrinsically.\n  'caption', // Similar to block.\n  'center', // Flow content, legacy.\n  'col', // Similar to block.\n  'colgroup', // Similar to block.\n  'dd', // Lists.\n  'dialog', // Flow content.\n  'dir', // Lists, legacy.\n  'div', // Flow content.\n  'dl', // Lists.\n  'dt', // Lists.\n  'figcaption', // Flow content.\n  'figure', // Flow content.\n  'footer', // Flow content.\n  'form', // Flow content.\n  'h1', // Sections and headings.\n  'h2', // Sections and headings.\n  'h3', // Sections and headings.\n  'h4', // Sections and headings.\n  'h5', // Sections and headings.\n  'h6', // Sections and headings.\n  'head', // Page.\n  'header', // Flow content.\n  'hgroup', // Sections and headings.\n  'hr', // Flow content.\n  'html', // Page.\n  'legend', // Flow content.\n  'li', // Block-like.\n  'li', // Similar to block.\n  'listing', // Flow content, legacy\n  'main', // Flow content.\n  'menu', // Lists.\n  'nav', // Sections and headings.\n  'ol', // Lists.\n  'optgroup', // Similar to block.\n  'option', // Similar to block.\n  'p', // Flow content.\n  'plaintext', // Flow content, legacy\n  'pre', // Flow content.\n  'section', // Sections and headings.\n  'summary', // Similar to block.\n  'table', // Similar to block.\n  'tbody', // Similar to block.\n  'td', // Block-like.\n  'td', // Similar to block.\n  'tfoot', // Similar to block.\n  'th', // Block-like.\n  'th', // Similar to block.\n  'thead', // Similar to block.\n  'tr', // Similar to block.\n  'ul', // Lists.\n  'wbr', // Contribute whitespace intrinsically.\n  'xmp' // Flow content, legacy\n]\n","export const content = [\n  // Form.\n  'button',\n  'input',\n  'select',\n  'textarea'\n]\n","export const skippable = [\n  'area',\n  'base',\n  'basefont',\n  'dialog',\n  'datalist',\n  'head',\n  'link',\n  'meta',\n  'noembed',\n  'noframes',\n  'param',\n  'rp',\n  'script',\n  'source',\n  'style',\n  'template',\n  'track',\n  'title'\n]\n","/**\n * rehype plugin to minify whitespace between elements.\n *\n * ## What is this?\n *\n * This package is a plugin that can minify the whitespace between elements.\n *\n * ## When should I use this?\n *\n * You can use this plugin when you want to improve the size of HTML documents.\n *\n * ## API\n *\n * ### `unified().use(rehypeMinifyWhitespace[, options])`\n *\n * Minify whitespace.\n *\n * ##### `options`\n *\n * Configuration (optional).\n *\n * ##### `options.newlines`\n *\n * Whether to collapse runs of whitespace that include line endings to one\n * line ending (`boolean`, default: `false`).\n * The default is to collapse everything to one space.\n *\n * @example\n *   <h1>Heading</h1>\n *   <p><strong>This</strong> and <em>that</em></p>\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n * @property {boolean} [newlines=false]\n *   If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n *   instead of `' '`.\n *   The default is to collapse to a single space.\n *\n * @typedef {'pre'|'nowrap'|'pre-wrap'|'normal'} Whitespace\n *\n * @typedef Context\n * @property {ReturnType<collapseFactory>} collapse\n * @property {Whitespace} whitespace\n * @property {boolean} [before]\n * @property {boolean} [after]\n *\n * @typedef Result\n * @property {boolean} remove\n * @property {boolean} ignore\n * @property {boolean} stripAtStart\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {embedded} from 'hast-util-embedded'\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {blocks} from './block.js'\nimport {content as contents} from './content.js'\nimport {skippable as skippables} from './skippable.js'\n\nconst ignorableNode = convert(['doctype', 'comment'])\n\n/**\n * Minify whitespace.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeMinifyWhitespace(options = {}) {\n  const collapse = collapseFactory(\n    options.newlines ? replaceNewlines : replaceWhitespace\n  )\n\n  return (tree) => {\n    minify(tree, {collapse, whitespace: 'normal'})\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minify(node, context) {\n  if ('children' in node) {\n    const settings = Object.assign({}, context)\n\n    if (node.type === 'root' || blocklike(node)) {\n      settings.before = true\n      settings.after = true\n    }\n\n    settings.whitespace = inferWhiteSpace(node, context)\n\n    return all(node, settings)\n  }\n\n  if (node.type === 'text') {\n    if (context.whitespace === 'normal') {\n      return minifyText(node, context)\n    }\n\n    // Naïve collapse, but no trimming:\n    if (context.whitespace === 'nowrap') {\n      node.value = context.collapse(node.value)\n    }\n\n    // The `pre-wrap` or `pre` whitespace settings are neither collapsed nor\n    // trimmed.\n  }\n\n  return {remove: false, ignore: ignorableNode(node), stripAtStart: false}\n}\n\n/**\n * @param {Text} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minifyText(node, context) {\n  const value = context.collapse(node.value)\n  const result = {remove: false, ignore: false, stripAtStart: false}\n  let start = 0\n  let end = value.length\n\n  if (context.before && removable(value.charAt(0))) {\n    start++\n  }\n\n  if (start !== end && removable(value.charAt(end - 1))) {\n    if (context.after) {\n      end--\n    } else {\n      result.stripAtStart = true\n    }\n  }\n\n  if (start === end) {\n    result.remove = true\n  } else {\n    node.value = value.slice(start, end)\n  }\n\n  return result\n}\n\n/**\n * @param {Root|Element} parent\n * @param {Context} context\n * @returns {Result}\n */\nfunction all(parent, context) {\n  let before = context.before\n  const after = context.after\n  const children = parent.children\n  let length = children.length\n  let index = -1\n\n  while (++index < length) {\n    const result = minify(\n      children[index],\n      Object.assign({}, context, {\n        before,\n        after: collapsableAfter(children, index, after)\n      })\n    )\n\n    if (result.remove) {\n      children.splice(index, 1)\n      index--\n      length--\n    } else if (!result.ignore) {\n      before = result.stripAtStart\n    }\n\n    // If this element, such as a `<select>` or `<img>`, contributes content\n    // somehow, allow whitespace again.\n    if (content(children[index])) {\n      before = false\n    }\n  }\n\n  return {remove: false, ignore: false, stripAtStart: Boolean(before || after)}\n}\n\n/**\n * @param {Array<Node>} nodes\n * @param {number} index\n * @param {boolean|undefined} [after]\n * @returns {boolean|undefined}\n */\nfunction collapsableAfter(nodes, index, after) {\n  while (++index < nodes.length) {\n    const node = nodes[index]\n    let result = inferBoundary(node)\n\n    if (result === undefined && 'children' in node && !skippable(node)) {\n      result = collapsableAfter(node.children, -1)\n    }\n\n    if (typeof result === 'boolean') {\n      return result\n    }\n  }\n\n  return after\n}\n\n/**\n * Infer two types of boundaries:\n *\n * 1. `true` — boundary for which whitespace around it does not contribute\n *    anything\n * 2. `false` — boundary for which whitespace around it *does* contribute\n *\n * No result (`undefined`) is returned if it is unknown.\n *\n * @param {Node} node\n * @returns {boolean|undefined}\n */\nfunction inferBoundary(node) {\n  if (node.type === 'element') {\n    if (content(node)) {\n      return false\n    }\n\n    if (blocklike(node)) {\n      return true\n    }\n\n    // Unknown: either depends on siblings if embedded or metadata, or on\n    // children.\n  } else if (node.type === 'text') {\n    if (!whitespace(node)) {\n      return false\n    }\n  } else if (!ignorableNode(node)) {\n    return false\n  }\n}\n\n/**\n * Infer whether a node is skippable.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction content(node) {\n  return embedded(node) || isElement(node, contents)\n}\n\n/**\n * See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\n *\n * @param {Element} node\n * @returns {boolean}\n */\nfunction blocklike(node) {\n  return isElement(node, blocks)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {boolean}\n */\nfunction skippable(node) {\n  return (\n    Boolean(\n      'properties' in node && node.properties && node.properties.hidden\n    ) ||\n    ignorableNode(node) ||\n    isElement(node, skippables)\n  )\n}\n\n/**\n * @param {string} character\n * @returns {boolean}\n */\nfunction removable(character) {\n  return character === ' ' || character === '\\n'\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction replaceNewlines(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * @returns {string}\n */\nfunction replaceWhitespace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction collapseFactory(replace) {\n  return collapse\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function collapse(value) {\n    return String(value).replace(/[\\t\\n\\v\\f\\r ]+/g, replace)\n  }\n}\n\n/**\n * We don’t need to support void elements here (so `nobr wbr` -> `normal` is\n * ignored).\n *\n * @param {Root|Element} node\n * @param {Context} context\n * @returns {Whitespace}\n */\nfunction inferWhiteSpace(node, context) {\n  if ('tagName' in node && node.properties) {\n    switch (node.tagName) {\n      // Whitespace in script/style, while not displayed by CSS as significant,\n      // could have some meaning in JS/CSS, so we can’t touch them.\n      case 'listing':\n      case 'plaintext':\n      case 'script':\n      case 'style':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return node.properties.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return node.properties.noWrap ? 'nowrap' : context.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return context.whitespace\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { detailsNode } from './detailsNode';\n\nexport type RehypeVideoOptions = {\n  /**\n   * URL suffix verification.\n   * @default /\\/(.*)(.mp4|.mov)$/\n   */\n  test?: RegExp;\n  /**\n   * Support `<details>` tag to wrap <video>.\n   * @default true\n   */\n  details?: boolean;\n}\n\nconst properties = { muted: 'muted', controls: 'controls', style: 'max-height:640px;' };\nconst queryStringToObject = (url: string) =>\n  [...new URLSearchParams(url.split('?!#')[1])].reduce(\n    (a: Record<string, string>, [k, v]) => ((a[k] = v), a),\n    {}\n  );\n\nfunction reElement(node: Element, details: boolean, href: string) {\n  const filename = href.split('/').pop()?.replace(/(\\?|!|\\#|$).+/, '');\n  node.properties = { ...properties, src: href };\n  node.tagName = 'video';\n  node.children = [];\n  const { title = filename }= queryStringToObject(href);\n  if (details) {\n    const reNode = detailsNode(title);\n    reNode.children.push({ ...node });\n    node.children = reNode.children;\n    node.tagName = reNode.tagName;\n    node.properties = reNode.properties;\n  }\n}\n\nconst RehypeVideo: Plugin<[RehypeVideoOptions?], Root> = (options) => {\n  const { test = /\\/(.*)(.mp4|.mov)$/, details = true } = options || {};\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      const isChecked = (str: string) => test.test(str.replace(/(\\?|!|\\#|$).+/g, '').toLocaleLowerCase())\n      const child = node.children[0];\n      const delimiter = /((?:https?:\\/\\/)(?:(?:[a-z0-9]?(?:[a-z0-9\\-]{1,61}[a-z0-9])?\\.[^\\.|\\s])+[a-z\\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\\d{1,5})*[a-z0-9.,_\\/~#&=;%+?\\-\\\\(\\\\)]*)/g;\n      // const delimiter = /((?:https?:\\/\\/)?(?:(?:[a-z0-9]?(?:[a-z0-9\\-]{1,61}[a-z0-9])?\\.[^\\.|\\s])+[a-z\\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\\d{1,5})*[a-z0-9.,_\\/~#&=;%+?\\-\\\\(\\\\)]*)/g;\n\n      if (node.tagName === 'p' && node.children.length === 1) {\n        if (child.type === 'text' && delimiter.test(child.value) && isChecked(child.value)) {\n          reElement(node, details, child.value);\n        }\n        if (child.type === 'element' && child.tagName === 'a' && child.properties && typeof child.properties.href === 'string' && isChecked(child.properties.href)) {\n          reElement(node, details, child.properties.href);\n        }\n      }\n    });\n  }\n}\n\nexport default RehypeVideo;\n","import { Element } from 'hast';\n\nexport function detailsNode(title?: string): Element {\n  return {\n    type: 'element',\n    tagName: 'details',\n    properties: { open: true, className: 'octicon octicon-video' },\n    children: [\n      {\n        type: 'element',\n        tagName: 'summary',\n        children: [\n          {\n            type: 'element',\n            tagName: 'svg',\n            properties: {\n              'aria-hidden': true, height: 16, width: 16, viewBox: '0 0 16 16', version: '1.1', 'data-view-component': true,\n              className: 'octicon octicon-device-camera-video'\n            },\n            children: [\n              {\n                type: 'element',\n                tagName: 'path',\n                properties: {\n                  'fill-rule': 'evenodd',\n                  d: 'M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z'\n                },\n                children: [],\n              }\n            ]\n          },\n          {\n            type: 'element',\n            tagName: 'span',\n            properties: {\n              'aria-label': `Video description ${title || ''}`\n            },\n            children: [\n              {\n                type: 'text',\n                value: title || ''\n              }\n            ]\n          },\n          {\n            type: 'element',\n            tagName: 'span',\n            properties: {\n              className: 'dropdown-caret'\n            },\n            children: []\n          }\n        ]\n      }\n    ]\n  }\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value === false) {\n            position = undefined\n          } else {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (position === undefined) {\n          nodes = [node]\n        } else {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n * @typedef {import('..').VFileValue} VFileValue\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","regex","require","BananaSlug","own","this","reset","slugger","string","maintainCase","toLowerCase","replace","slug","self","originalSlug","occurrences","create","is","has","node","index","rel","properties","list","indexOf","props","type","undefined","convert","test","tagName","element","tagNameFactory","tests","checks","results","convertAll","matches","apply","any","Boolean","callFactory","Error","isElement","parent","context","hasParent","hasIndex","check","Infinity","children","isBuffer","_objectDestructuringEmpty","TypeError","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","push","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","ccount","character","String","count","characterEntitiesLegacy","parse","end","token","tokens","input","start","slice","trim","stringify","values","settings","concat","join","padRight","padLeft","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","charCodeAt","embedded","convertElement","hasProperty","headingRank","code","Number","POSITIVE_INFINITY","anyFactory","castFactory","parameters","all","one","result","whitespace","thing","htmlVoidElements","inlineCode","_","sequence","RegExp","unsafe","pattern","expression","patternCompile","match","atBreak","exec","position","peek","listItem","safeOptions","listItemIndent","style","checkListItemIndent","bullet","bulletCurrent","checkBullet","ordered","incrementListMarker","size","spread","Math","ceil","tracker","track","move","repeat","shift","exit","enter","indentLines","containerFlow","current","line","blank","association","label","identifier","decodeString","marker","indexStack","child","handle","before","after","bulletLastUsed","between","pop","left","right","containerPhrasing","handlers","charAt","eol","map","_compiled","patternInScope","stack","listInScope","inConstruct","notInConstruct","none","includes","safe","config","positions","infos","sort","numerical","escapeBackslashes","encode","toUpperCase","a","b","whole","options_","now","lineShift","column","chunks","split","tail","includeImageAlt","alt","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","markdownSpace","prefix","consume","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","fromCharCode","splice","remove","items","chunkStart","from","unshift","classifyCharacter","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","normalizeIdentifier","resolveAll","events","called","resolve","Schema","property","normal","space","merge","definitions","assign","definition","prop","info","DefinedInfo","transform","attributes","mustUseProperty","normalize","attribute","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","number","ariaColIndex","ariaColSpan","ariaControls","spaceSeparated","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","commaSeparated","acceptCharset","accessKey","action","allow","allowFullScreen","boolean","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","overloadedBoolean","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","lang","language","loading","loop","low","manifest","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","commaOrSpaceSeparated","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","find","schema","Type","Info","rest","camelcase","dashes","kebab","types","mark","defined","powers","increment","contentDefaults","rehypeAutolinkHeadings","behavior","behaviour","group","around","inject","tree","visit","toChildren","SKIP","nodes","grouping","toNode","basic","meta","whitespaceSensitiveTagNames","minify","rehypeMinifyWhitespace","newlines","rehypeFormat","indent","indentInitial","visitParents","parents","level","padding","previous","addBreak","next","blanks","bodyOkLink","phrasing","openDelimiter","closeDelimiter","item","blocks","skippable","ignorableNode","collapse","collapseFactory","replaceNewlines","replaceWhitespace","blocklike","inferWhiteSpace","collapsableAfter","ignore","stripAtStart","removable","minifyText","inferBoundary","contents","skippables","slugs","Slugger","rehypeSlug","reElement","details","filename","url","URLSearchParams","reduce","v","reNode","detailsNode","isChecked","str","toLocaleLowerCase","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","done","punctuationContinuation","punctuation","balance","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","inside","wwwAutolink","previousWww","previousUnbalanced","attempt","httpAutolink","previousHttp","t1","t2","p","s","colon","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_balanced","_gfmAutolinkLiteralWalkedInto","sliceSerialize","gfmFootnote","tokenizeDefinitionStart","continuation","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveTo","resolveToPotentialGfmFootnoteCall","labelStart","parser","gfmFootnotes","_bufferIndex","chunk","contentType","replacement","callStart","callData","callEscape","_container","labelAfter","labelEscape","gfmStrikethrough","single","singleTilde","tokenizer","tokenizeStrikethrough","resolveAllStrikethrough","insideSpan","null","attentionMarkers","_close","_open","strikethrough","nextEvents","more","gfmTable","flow","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","interrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","prefixed","lazy","disable","_gfmTableDynamicInterruptHack","inHead","inDelimiterRow","inRow","contentStart","contentEnd","cellStart","seenCellInRow","cell","tasklistCheck","_gfmTasklistFirstContentOfListItem","close","spaceThenNonSpace","gfmTaskListItem","gfm","findAndReplace","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","visitor","grandparent","lastIndex","matchObject","global","escape","gfmAutolinkLiteralFromMarkdown","transforms","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","autolinkEmail","autolinkProtocol","gfmAutolinkLiteralToMarkdown","protocol","parts","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","gfmFootnoteToMarkdown","footnoteReference","footnoteDefinition","subexit","gfmStrikethroughFromMarkdown","canContainEols","gfmStrikethroughToMarkdown","delete","handleDelete","serialize","defaultStringLength","toAlignment","codePointAt","gfmTableFromMarkdown","table","setData","tableData","enterCell","tableHeader","tableRow","codeText","resume","getData","gfmTableToMarkdown","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","lines","delimiterStart","delimiterEnd","markdownTable","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","paragraph","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","buffer","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","field","bail","error","getPrototypeOf","middleware","callback","fnExpectsCallback","exception","Promise","then","output","VFileMessage","reason","place","stringifyPosition","message","fatal","ruleId","actual","expected","file","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","JSON","proc","cwd","isUrl","fileURLOrPath","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","messages","history","stored","assertNonEmpty","assertPart","stem","encoding","part","unified","frozen","transformers","fns","pipeline","run","middlewareIndex","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","Parser","Compiler","freeze","attacher","transformer","addPlugin","addList","addPreset","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","runSync","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","typeFactory","propsFactory","pointStart","point","pointEnd","pos","EXIT","reverse","factory","subresult","grandparents","toResult"],"sourceRoot":""}