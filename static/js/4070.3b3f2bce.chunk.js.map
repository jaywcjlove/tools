{"version":3,"file":"static/js/4070.3b3f2bce.chunk.js","mappings":"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","sources":["../../node_modules/@lezer/json/dist/index.js","../../node_modules/@codemirror/lang-json/dist/index.js","../../node_modules/exifreader/src/dataview.js","../../node_modules/exifreader/src/utils.js","../../node_modules/exifreader/src/constants.js","../../node_modules/exifreader/src/tag-names-utils.js","../../node_modules/exifreader/src/byte-order.js","../../node_modules/exifreader/src/image-header-tiff.js","../../node_modules/exifreader/src/image-header-jpeg.js","../../node_modules/exifreader/src/image-header-png.js","../../node_modules/exifreader/src/image-header-iso-bmff-iloc.js","../../node_modules/exifreader/src/image-header-iso-bmff-utils.js","../../node_modules/exifreader/src/image-header-iso-bmff.js","../../node_modules/exifreader/src/image-header-heic.js","../../node_modules/exifreader/src/image-header-avif.js","../../node_modules/exifreader/src/image-header-webp.js","../../node_modules/exifreader/src/image-header-gif.js","../../node_modules/exifreader/src/xml.js","../../node_modules/exifreader/src/image-header.js","../../node_modules/exifreader/src/tag-names-common.js","../../node_modules/exifreader/src/tag-names-0th-ifd.js","../../node_modules/exifreader/src/tag-names-exif-ifd.js","../../node_modules/exifreader/src/tag-names-gps-ifd.js","../../node_modules/exifreader/src/tag-names-interoperability-ifd.js","../../node_modules/exifreader/src/tag-names-mpf-ifd.js","../../node_modules/exifreader/src/tag-names.js","../../node_modules/exifreader/src/tag-names-canon-ifd.js","../../node_modules/exifreader/src/tag-names-pentax-ifd.js","../../node_modules/exifreader/src/types.js","../../node_modules/exifreader/src/tags-helpers.js","../../node_modules/exifreader/src/tags.js","../../node_modules/exifreader/src/mpf-tags.js","../../node_modules/exifreader/src/file-tags.js","../../node_modules/exifreader/src/jfif-tags.js","../../node_modules/exifreader/src/iptc-tag-names.js","../../node_modules/exifreader/src/text-decoder.js","../../node_modules/exifreader/src/tag-decoder.js","../../node_modules/exifreader/src/iptc-tags.js","../../node_modules/exifreader/src/xmp-tag-names.js","../../node_modules/exifreader/src/dom-parser.js","../../node_modules/exifreader/src/xmp-namespaces.js","../../node_modules/exifreader/src/xmp-tags.js","../../node_modules/exifreader/src/photoshop-tag-names.js","../../node_modules/exifreader/src/photoshop-tags.js","../../node_modules/exifreader/src/icc-tag-names.js","../../node_modules/exifreader/src/icc-tags.js","../../node_modules/exifreader/src/canon-tags.js","../../node_modules/exifreader/src/pentax-tags.js","../../node_modules/exifreader/src/png-file-tags.js","../../node_modules/exifreader/src/png-text-tags.js","../../node_modules/exifreader/src/png-tags.js","../../node_modules/exifreader/src/vp8x-tags.js","../../node_modules/exifreader/src/gif-file-tags.js","../../node_modules/exifreader/src/thumbnail.js","../../node_modules/exifreader/src/composite.js","../../node_modules/exifreader/src/errors.js","../../node_modules/exifreader/src/exif-reader.js"],"sourcesContent":["import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \", :\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l\",\n  stateData: \"#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"isolate\", -2,6,11,\"\"],\n    [\"openedBy\", 7,\"{\",14,\"[\"],\n    [\"closedBy\", 8,\"}\",15,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oe~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Og~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zO]~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yO[~~'OO_~~'TO^~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport DataViewWrapper from './dataview.js';\n\nexport function getDataView(data, byteOffset, byteLength) {\n    try {\n        return new DataView(data, byteOffset, byteLength);\n    } catch (error) {\n        return new DataViewWrapper(data, byteOffset, byteLength);\n    }\n}\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getNullTerminatedStringFromDataView(dataView, offset) {\n    const chars = [];\n    let i = 0;\n    while (offset + i < dataView.byteLength) {\n        const char = dataView.getUint8(offset + i);\n        if (char === 0) {\n            break;\n        }\n        chars.push(char);\n        i++;\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    if (chars[chars.length - 1] === 0) {\n        chars.pop();\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getPascalStringFromDataView(dataView, offset) {\n    const size = dataView.getUint8(offset);\n    const string = getStringFromDataView(dataView, offset + 1, size);\n    return [size, string];\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n\nexport function padStart(string, length, character) {\n    const padding = strRepeat(character, length - string.length);\n    return padding + string;\n}\n\nexport function parseFloatRadix(string, radix) {\n    return parseInt(string.replace('.', ''), radix)\n        / Math.pow(radix, (string.split('.')[1] || '').length);\n}\n\nexport function strRepeat(string, num) {\n    return new Array(num + 1).join(string);\n}\n\nexport const COMPRESSION_METHOD_NONE = undefined;\nexport const COMPRESSION_METHOD_DEFLATE = 0;\n\nexport function decompress(dataView, compressionMethod, encoding, returnType = 'string') {\n    if (compressionMethod === COMPRESSION_METHOD_DEFLATE) {\n        if (typeof DecompressionStream === 'function') {\n            const decompressionStream = new DecompressionStream('deflate');\n            const decompressedStream = new Blob([dataView]).stream().pipeThrough(decompressionStream);\n            if (returnType === 'dataview') {\n                return new Response(decompressedStream).arrayBuffer().then((arrayBuffer) => new DataView(arrayBuffer));\n            }\n            return new Response(decompressedStream).arrayBuffer()\n                .then((buffer) => new TextDecoder(encoding).decode(buffer));\n        }\n    }\n    if (compressionMethod !== undefined) {\n        return Promise.reject(`Unknown compression method ${compressionMethod}.`);\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_PHOTOSHOP: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_AVIF: true,\n    USE_WEBP: true,\n    USE_GIF: true,\n    USE_MAKER_NOTES: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP0_JFIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView, getNullTerminatedStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_ZTXT = 'zTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\nexport const TYPE_ICCP = 'iCCP';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView, async) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset, async)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_ICC && async && isPngIccpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkDataLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n            const iccHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n            const {profileName, compressionMethod, compressedProfileOffset} = parseIccHeader(dataView, iccHeaderOffset);\n            if (!offsets.iccChunks) {\n                offsets.iccChunks = [];\n            }\n            offsets.iccChunks.push({\n                offset: compressedProfileOffset,\n                length: chunkDataLength - (compressedProfileOffset - iccHeaderOffset),\n                chunkNumber: 1,\n                chunksTotal: 1,\n                profileName,\n                compressionMethod\n            });\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ITXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset, async) {\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === TYPE_TEXT || chunkType === TYPE_ITXT || (chunkType === TYPE_ZTXT && async);\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngIccpChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ICCP;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n\nfunction parseIccHeader(dataView, offset) {\n    const NULL_SEPARATOR_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    const profileName = getNullTerminatedStringFromDataView(dataView, offset);\n    offset += profileName.length + NULL_SEPARATOR_SIZE;\n\n    const compressionMethod = dataView.getUint8(offset);\n    offset += COMPRESSION_METHOD_SIZE;\n\n    return {\n        profileName,\n        compressionMethod,\n        compressedProfileOffset: offset\n    };\n}\n","import {get64BitValue} from './image-header-iso-bmff-utils.js';\n\nexport function parseItemLocationBox(dataView, version, contentOffset, boxLength) {\n    const FLAGS_SIZE = 3;\n\n    const {offsets, sizes} = getItemLocationBoxOffsetsAndSizes(version, contentOffset + FLAGS_SIZE);\n\n    const offsetSize = dataView.getUint8(offsets.offsetSize) >> 4;\n    sizes.item.extent.extentOffset = offsetSize;\n    const lengthSize = dataView.getUint8(offsets.lengthSize) & 0x0f;\n    sizes.item.extent.extentLength = lengthSize;\n    const baseOffsetSize = dataView.getUint8(offsets.baseOffsetSize) >> 4;\n    sizes.item.baseOffset = baseOffsetSize;\n    const indexSize = getIndexSize(dataView, offsets.indexSize, version);\n    sizes.item.extent.extentIndex = indexSize !== undefined ? indexSize : 0;\n    const itemCount = getItemCount(dataView, offsets.itemCount, version);\n\n    return {\n        type: 'iloc',\n        items: getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount),\n        length: boxLength\n    };\n}\n\nfunction getItemLocationBoxOffsetsAndSizes(version, contentOffset) {\n    const sizes = {\n        item: {\n            dataReferenceIndex: 2,\n            extentCount: 2,\n            extent: {}\n        }\n    };\n    if (version < 2) {\n        sizes.itemCount = 2;\n        sizes.item.itemId = 2;\n    } else if (version === 2) {\n        sizes.itemCount = 4;\n        sizes.item.itemId = 4;\n    }\n    if (version === 1 || version === 2) {\n        sizes.item.constructionMethod = 2;\n    } else {\n        sizes.item.constructionMethod = 0;\n    }\n\n    const offsets = {\n        offsetSize: contentOffset,\n        lengthSize: contentOffset,\n        baseOffsetSize: contentOffset + 1,\n        indexSize: contentOffset + 1\n    };\n    offsets.itemCount = contentOffset + 2;\n    offsets.items = offsets.itemCount + sizes.itemCount;\n    offsets.item = {\n        itemId: 0\n    };\n    offsets.item.constructionMethod = offsets.item.itemId + sizes.item.itemId;\n    offsets.item.dataReferenceIndex = offsets.item.constructionMethod + sizes.item.constructionMethod;\n\n    return {offsets, sizes};\n}\n\nfunction getIndexSize(dataView, offset, version) {\n    if (version === 1 || version === 2) {\n        return dataView.getUint8(offset) & 0x0f;\n    }\n    return undefined;\n}\n\nfunction getItemCount(dataView, offset, version) {\n    if (version < 2) {\n        return dataView.getUint16(offset);\n    } else if (version === 2) {\n        return dataView.getUint32(offset);\n    }\n    return undefined;\n}\n\nfunction getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount) {\n    if (itemCount === undefined) {\n        return [];\n    }\n\n    const items = [];\n    let offset = offsets.items;\n\n    for (let i = 0; i < itemCount; i++) {\n        const item = {extents: []};\n        item.itemId = getItemId(dataView, offset, version);\n        offset += sizes.item.itemId;\n        item.constructionMethod = (version === 1) || (version === 2) ? dataView.getUint16(offset) & 0x0f : undefined;\n        offset += sizes.item.constructionMethod;\n        item.dataReferenceIndex = dataView.getUint16(offset);\n        offset += sizes.item.dataReferenceIndex;\n        item.baseOffset = getVariableSizedValue(dataView, offset, sizes.item.baseOffset);\n        offset += sizes.item.baseOffset;\n        item.extentCount = dataView.getUint16(offset);\n        offset += sizes.item.extentCount;\n        for (let j = 0; j < item.extentCount; j++) {\n            const extent = {};\n\n            extent.extentIndex = getExtentIndex(dataView, version, offset, indexSize);\n            offset += sizes.item.extent.extentIndex;\n            extent.extentOffset = getVariableSizedValue(dataView, offset, offsetSize);\n            offset += sizes.item.extent.extentOffset;\n            extent.extentLength = getVariableSizedValue(dataView, offset, lengthSize);\n            offset += sizes.item.extent.extentLength;\n\n            item.extents.push(extent);\n        }\n\n        items.push(item);\n    }\n\n    return items;\n}\n\nfunction getItemId(dataView, offset, version) {\n    if (version < 2) {\n        return dataView.getUint16(offset);\n    } else if (version === 2) {\n        return dataView.getUint32(offset);\n    }\n    return undefined;\n}\n\nfunction getExtentIndex(dataView, version, offset, indexSize) {\n    if ((version === 1 || version === 2) && indexSize > 0) {\n        return getVariableSizedValue(dataView, offset, indexSize);\n    }\n    return undefined;\n}\n\nfunction getVariableSizedValue(dataView, offset, size) {\n    if (size === 4) {\n        return dataView.getUint32(offset);\n    }\n    if (size === 8) {\n        // eslint-disable-next-line no-console\n        console.warn('This file uses an 8-bit offset which is currently not supported by ExifReader. Contact the maintainer to get it fixed.');\n        return get64BitValue(dataView, offset);\n    }\n    return 0;\n}\n","export function get64BitValue(dataView, offset) {\n    // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n    // wait until there are real-world examples where it is necessary.\n    return dataView.getUint32(offset + 4);\n}\n","import Constants from './constants.js';\nimport {getNullTerminatedStringFromDataView, getStringFromDataView} from './utils.js';\n// import {get64BitValue} from './image-header-iso-bmff-utils.js';\nimport {parseItemLocationBox} from './image-header-iso-bmff-iloc.js';\n\n// HEIC and AVIF files are based on the ISO-BMFF format. This file format is\n// built up by boxes. There are boxes and full boxes. All box types have a\n// length (4 or 8 bytes) and a type (4 bytes). Full boxes also have a version\n// (1 byte) and flags (3 bytes). The boxes can be nested. Each box type has its\n// own structure that can be seen in the specification.\n//\n// For metadata we are interested in the meta box. The meta box contains sub\n// boxes. The sub box type iinf has info about which types of metadata are\n// present in the file. The item ID we get from there we then look up in the\n// iloc sub box to get the offset to the real location of the metadata.\n//\n// The ICC profiles is a bit more nested. We have to look in\n// meta > iprp > ipco > colr, and then the whole profile is stored there.\n\n// These are actually 32-bit strings, not random IDs, e.g. \"ftyp\" and \"meta\".\nconst TYPE_FTYP = 0x66747970;\nconst TYPE_IPRP = 0x69707270;\nconst TYPE_META = 0x6d657461;\nconst TYPE_ILOC = 0x696c6f63;\nconst TYPE_IINF = 0x69696e66;\nconst TYPE_INFE = 0x696e6665;\nconst TYPE_IPCO = 0x6970636f;\nconst TYPE_COLR = 0x636f6c72;\n\n// const EXTENSION_TYPE_FDEL = 0x6664656c;\n\nexport const ITEM_INFO_TYPE_EXIF = 0x45786966;\nexport const ITEM_INFO_TYPE_MIME = 0x6d696d65;\nconst ITEM_INFO_TYPE_URI = 0x75726920;\n\n/**\n * Parses a ISO-BMFF box from the provided data view starting at the given offset.\n *\n * @param {DataView} dataView - The DataView to parse.\n * @param {number} offset - The offset at which to start parsing.\n * @returns {Object} The parsed box.\n */\nexport function parseBox(dataView, offset) {\n    const BOX_TYPE_OFFSET = 4;\n    const BOX_MIN_LENGTH = 8;\n    const VERSION_SIZE = 1;\n\n    const {length, contentOffset} = getBoxLength(dataView, offset);\n    if (length < BOX_MIN_LENGTH) {\n        return undefined;\n    }\n\n    const type = dataView.getUint32(offset + BOX_TYPE_OFFSET);\n\n    if (type === TYPE_FTYP) {\n        return parseFileTypeBox(dataView, contentOffset, length);\n    }\n    if (type === TYPE_IPRP) {\n        return parseItemPropertiesBox(dataView, offset, contentOffset, length);\n    }\n    if (type === TYPE_IPCO) {\n        return parseItemPropertyContainerBox(dataView, offset, contentOffset, length);\n    }\n    if (type === TYPE_COLR) {\n        return parseColorInformationBox(dataView, contentOffset, length);\n    }\n\n    // The following are full boxes, also containing version and flags.\n    const version = dataView.getUint8(contentOffset);\n\n    if (type === TYPE_META) {\n        return parseMetadataBox(dataView, offset, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_ILOC) {\n        return parseItemLocationBox(dataView, version, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_IINF) {\n        return parseItemInformationBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_INFE) {\n        return parseItemInformationEntryBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n    }\n\n    return {\n        // type: getStringFromDataView(dataView, offset + BOX_TYPE_OFFSET, 4),\n        type: undefined,\n        length\n    };\n}\n\n/**\n * @typedef {Object} BoxLength\n * @property {number} length The length of the box including length and type.\n * @property {number} contentOffset\n */\n\n/**\n * @param {DataView} dataView\n * @param {number} offset\n * @returns {BoxLength}\n */\nfunction getBoxLength(dataView, offset) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n    const BOX_EXTENDED_SIZE = 8;\n    const BOX_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const boxLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(boxLength)) {\n        return {\n            length: dataView.byteLength - offset,\n            contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE,\n        };\n    }\n    if (hasExtendedSize(boxLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return {\n                length: dataView.getUint32(offset + BOX_EXTENDED_SIZE_LOW_OFFSET),\n                contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE + BOX_EXTENDED_SIZE,\n            };\n        }\n    }\n\n    return {\n        length: boxLength,\n        contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE,\n    };\n}\n\nfunction extendsToEndOfFile(boxLength) {\n    return boxLength === 0;\n}\n\nfunction hasExtendedSize(boxLength) {\n    return boxLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const BOX_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + BOX_EXTENDED_SIZE_OFFSET) === 0;\n}\n\n/**\n * @typedef {Object} Offsets\n * @property {number} tiffHeaderOffset\n * @property {Array<Object>} xmpChunks\n * @property {Array<Object>} iccChunks\n * @property {boolean} hasAppMarkers\n */\n\n/**\n * Finds the offsets of ISO-BMFF-structued data in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Offsets} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nexport function findOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_XMP || Constants.USE_ICC) {\n        const offsets = {};\n        const metaBox = findMetaBox(dataView);\n\n        if (!metaBox) {\n            return {hasAppMarkers: false};\n        }\n\n        if (Constants.USE_EXIF) {\n            offsets.tiffHeaderOffset = findExifOffset(dataView, metaBox);\n        }\n        if (Constants.USE_XMP) {\n            offsets.xmpChunks = findXmpChunks(metaBox);\n        }\n        if (Constants.USE_ICC) {\n            offsets.iccChunks = findIccChunks(metaBox);\n        }\n        offsets.hasAppMarkers = (offsets.tiffHeaderOffset !== undefined) || (offsets.xmpChunks !== undefined) || (offsets.iccChunks !== undefined);\n        return offsets;\n    }\n\n    return {};\n}\n\nfunction findMetaBox(dataView) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n\n    let offset = 0;\n\n    while (offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE <= dataView.byteLength) {\n        const box = parseBox(dataView, offset);\n\n        if (box === undefined) {\n            break;\n        }\n\n        if (box.type === 'meta') {\n            return box;\n        }\n\n        offset += box.length;\n    }\n\n    return undefined;\n}\n\nfunction findExifOffset(dataView, metaBox) {\n    try {\n        const exifItemId = findIinfExifItemId(metaBox).itemId;\n        const ilocItem = findIlocItem(metaBox, exifItemId);\n        const exifOffset = ilocItem.baseOffset + ilocItem.extents[0].extentOffset;\n        return getTiffHeaderOffset(dataView, exifOffset);\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction findIinfExifItemId(metaBox) {\n    return metaBox.subBoxes.find((box) => box.type === 'iinf').itemInfos.find((itemInfo) => itemInfo.itemType === ITEM_INFO_TYPE_EXIF);\n}\n\nfunction findIlocItem(metaBox, itemId) {\n    return metaBox.subBoxes.find((box) => box.type === 'iloc').items.find((item) => item.itemId === itemId);\n}\n\nfunction getTiffHeaderOffset(dataView, exifOffset) {\n    // ISO-BMFF formatted files store the Exif data as an \"Exif block\" where the\n    // first 32 bits is the TIFF header offset.\n    const TIFF_HEADER_OFFSET_SIZE = 4;\n    return exifOffset + TIFF_HEADER_OFFSET_SIZE + dataView.getUint32(exifOffset);\n}\n\nfunction findXmpChunks(metaBox) {\n    try {\n        const xmpItemId = findIinfXmpItemId(metaBox).itemId;\n        const ilocItem = findIlocItem(metaBox, xmpItemId);\n        const ilocItemExtent = findIlocItem(metaBox, xmpItemId).extents[0];\n        return [\n            {\n                dataOffset: ilocItem.baseOffset + ilocItemExtent.extentOffset,\n                length: ilocItemExtent.extentLength,\n            }\n        ];\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction findIinfXmpItemId(metaBox) {\n    return metaBox.subBoxes.find((box) => box.type === 'iinf')\n        .itemInfos.find((itemInfo) => itemInfo.itemType === ITEM_INFO_TYPE_MIME && itemInfo.contentType === 'application/rdf+xml');\n}\n\nfunction findIccChunks(metaBox) {\n    // This finds the first ICC chunk, but there could be one for each image\n    // that is embedded in the file. If it turns out we need to match the ICC\n    // chunk to a specific image, we need to check the \"ipma\" in addition to the\n    // \"ipco\" (currently we only extract the \"ipco\" so more code would be\n    // needed).\n    try {\n        const icc = metaBox.subBoxes.find((box) => box.type === 'iprp')\n            .subBoxes.find((box) => box.type === 'ipco')\n            .properties.find((box) => box.type === 'colr')\n            .icc;\n        if (icc) {\n            return [icc];\n        }\n    } catch (error) {\n        // Let it pass through.\n    }\n    return undefined;\n}\n\nfunction parseFileTypeBox(dataView, contentOffset, boxLength) {\n    const MAJOR_BRAND_SIZE = 4;\n    const majorBrand = getStringFromDataView(dataView, contentOffset, MAJOR_BRAND_SIZE);\n\n    return {\n        type: 'ftyp',\n        majorBrand,\n        length: boxLength\n    };\n}\n\nfunction parseItemPropertiesBox(dataView, startOffset, contentOffset, length) {\n    return {\n        type: 'iprp',\n        subBoxes: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n        length,\n    };\n}\n\nfunction parseItemPropertyContainerBox(dataView, startOffset, contentOffset, length) {\n    return {\n        type: 'ipco',\n        properties: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n        length,\n    };\n}\n\nfunction parseColorInformationBox(dataView, contentOffset, length) {\n    return {\n        type: 'colr',\n        icc: parseIcc(dataView, contentOffset),\n        length,\n    };\n}\n\nfunction parseIcc(dataView, contentOffset) {\n    const COLOR_TYPE_SIZE = 4;\n\n    const colorType = getStringFromDataView(dataView, contentOffset, COLOR_TYPE_SIZE);\n    if (colorType !== 'prof' && colorType !== 'rICC') {\n        // Support for nclx would require some restructuring for ICC handling.\n        // Probably do it as a separate feature instead of combining with ICC.\n        // Exiftool groups it under QuickTime. The test file test.avif has nclx.\n        return undefined;\n    }\n\n    return {\n        offset: contentOffset + COLOR_TYPE_SIZE,\n        length: dataView.getUint32(contentOffset + COLOR_TYPE_SIZE),\n        chunkNumber: 1,\n        chunksTotal: 1\n    };\n}\n\nfunction parseMetadataBox(dataView, startOffset, contentOffset, length) {\n    const FLAGS_SIZE = 3;\n\n    return {\n        type: 'meta',\n        subBoxes: parseSubBoxes(dataView, contentOffset + FLAGS_SIZE, length - (contentOffset + FLAGS_SIZE - startOffset)),\n        length\n    };\n}\n\n/**\n * @param {DataView} dataView\n * @param {number} offset The offset to start parsing from.\n * @param {number} length The length of all sub boxes combined.\n * @return {Array<Object>}\n */\nfunction parseSubBoxes(dataView, offset, length) {\n    const ACCEPTED_ITEM_INFO_TYPES = [\n        ITEM_INFO_TYPE_EXIF,\n        ITEM_INFO_TYPE_MIME,\n    ];\n\n    const subBoxes = [];\n    let currentOffset = offset;\n    while (currentOffset < offset + length) {\n        const box = parseBox(dataView, currentOffset);\n        if (box === undefined) {\n            break;\n        }\n        if (box.type !== undefined && (box.itemType === undefined || ACCEPTED_ITEM_INFO_TYPES.indexOf(box.itemType) !== -1)) {\n            subBoxes.push(box);\n        }\n        currentOffset += box.length;\n    }\n    return subBoxes;\n}\n\nfunction parseItemInformationBox(dataView, startOffset, version, contentOffset, length) {\n    const {offsets} = getItemInformationBoxOffsetsAndSizes(version, contentOffset);\n\n    return {\n        type: 'iinf',\n        itemInfos: parseSubBoxes(dataView, offsets.itemInfos, length - (offsets.itemInfos - startOffset)),\n        length\n    };\n}\n\nfunction getItemInformationBoxOffsetsAndSizes(version, contentOffset) {\n    const FLAGS_SIZE = 3;\n\n    const offsets = {entryCount: contentOffset + FLAGS_SIZE};\n    const sizes = {};\n\n    if (version === 0) {\n        sizes.entryCount = 2;\n    } else {\n        sizes.entryCount = 4;\n    }\n\n    offsets.itemInfos = offsets.entryCount + sizes.entryCount;\n\n    return {offsets};\n}\n\nfunction parseItemInformationEntryBox(dataView, startOffset, version, contentOffset, length) {\n    const FLAGS_SIZE = 3;\n\n    contentOffset += FLAGS_SIZE;\n    const entry = {type: 'infe', length};\n\n    if (version === 0 || version === 1) {\n        entry.itemId = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.itemName.length + 1;\n        // entry.contentType = getNullTerminatedStringFromDataView(dataView, offset);\n        // offset += entry.contentType.length + 1;\n        // Since contentEncoding is optional we need to check the offset against length here.\n        // entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, offset);\n        // offset += entry.contentEncoding.length + 1;\n    }\n    // The following code should be correct but we currently don't need it.\n    // if (version === 1) {\n    //     // Everything here is optional, check the offset against length.\n    //     entry.extensionType = dataView.getUint32(contentOffset);\n    //     contentOffset += 4;\n    //     if (entry.extensionType === EXTENSION_TYPE_FDEL) {\n    //         entry.contentLocation = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    //         contentOffset += entry.contentLocation.length + 1;\n    //         entry.contentMd5 = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    //         contentOffset += entry.contentMd5.length + 1;\n    //         entry.contentLength = get64BitValue(dataView, contentOffset);\n    //         contentOffset += 8;\n    //         entry.transferLength = get64BitValue(dataView, contentOffset);\n    //         contentOffset += 8;\n    //         entry.entryCount = dataView.getUint8(contentOffset);\n    //         contentOffset += 1;\n    //         entry.entries = [];\n    //         for (let i = 0; i < entry.entryCount; i++) {\n    //             entry.entries.push({groupId: dataView.getUint32(contentOffset)});\n    //             contentOffset += 4;\n    //         }\n    //     }\n    // }\n    if (version >= 2) {\n        if (version === 2) {\n            entry.itemId = dataView.getUint16(contentOffset);\n            contentOffset += 2;\n        } else if (version === 3) {\n            entry.itemId = dataView.getUint32(contentOffset);\n            contentOffset += 4;\n        }\n        entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        // entry.itemTypeAscii = getStringFromDataView(dataView, offset, 4); // For testing.\n        entry.itemType = dataView.getUint32(contentOffset);\n        contentOffset += 4;\n        entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.itemName.length + 1;\n        if (entry.itemType === ITEM_INFO_TYPE_MIME) {\n            entry.contentType = getNullTerminatedStringFromDataView(dataView, contentOffset);\n            contentOffset += entry.contentType.length + 1;\n            if (startOffset + length > contentOffset) {\n                entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, contentOffset);\n                contentOffset += entry.contentEncoding.length + 1;\n            }\n        } else if (entry.itemType === ITEM_INFO_TYPE_URI) {\n            entry.itemUri = getNullTerminatedStringFromDataView(dataView, contentOffset);\n            contentOffset += entry.itemUri.length + 1;\n        }\n    }\n    return entry;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {parseBox, findOffsets} from './image-header-iso-bmff.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\n/**\n * Checks if the provided data view represents a HEIC/HEIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents a HEIC/HEIF file, false otherwise.\n */\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n\n    try {\n        const headerBox = parseBox(dataView, 0);\n        return headerBox && HEIC_MAJOR_BRANDS.indexOf(headerBox.majorBrand) !== -1;\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Finds the offsets of a HEIC file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findHeicOffsets(dataView) {\n    return findOffsets(dataView);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification:\n// https://aomediacodec.github.io/av1-avif\n\nimport {parseBox, findOffsets} from './image-header-iso-bmff.js';\n\nexport default {\n    isAvifFile,\n    findAvifOffsets\n};\n\n/**\n * Checks if the provided data view represents an AVIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents an AVIF file, false otherwise.\n */\nfunction isAvifFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    try {\n        const headerBox = parseBox(dataView, 0);\n        return headerBox && headerBox.majorBrand === 'avif';\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Finds the offsets of an AVIF file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findAvifOffsets(dataView) {\n    return findOffsets(dataView);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n    let vp8xChunkOffset;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        } else if (chunkId === 'VP8X') {\n            hasAppMarkers = true;\n            vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks,\n        vp8xChunkOffset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isGifFile,\n    findOffsets\n};\n\nconst GIF_SIGNATURE_SIZE = 6;\nconst GIF_SIGNATURES = ['GIF87a', 'GIF89a'];\n\nfunction isGifFile(dataView) {\n    return !!dataView && GIF_SIGNATURES.includes(getStringFromDataView(dataView, 0, GIF_SIGNATURE_SIZE));\n}\n\nfunction findOffsets() {\n    return {\n        gifHeaderOffset: 0\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isXMLFile,\n    findOffsets\n};\n\nconst XML_MARKER_OFFSET = 0;\nconst XML_MARKER = '<?xpacket begin';\n\nfunction isXMLFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, XML_MARKER_OFFSET, XML_MARKER.length) === XML_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const xmpChunks = [];\n    xmpChunks.push({dataOffset: XML_MARKER_OFFSET, length: dataView.byteLength});\n    return {\n        xmpChunks,\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Avif from './image-header-avif.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport Xml from './xml.js';\nimport {objectAssign} from './utils.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView, async) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n    }\n\n    if (Constants.USE_AVIF && Avif.isAvifFile(dataView)) {\n        return addFileType(Avif.findAvifOffsets(dataView), 'avif', 'AVIF');\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n    }\n\n    if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n        return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n    }\n\n    if (Constants.USE_XMP && Xml.isXMLFile(dataView)) {\n        return addFileType(Xml.findOffsets(dataView), 'xml', 'XML');\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n    return objectAssign({}, offsets, {fileType: {value: fileType, description: fileTypeDescription}});\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] / value[1] > 0.25) {\n            const decimal = value[0] / value[1];\n            if (Number.isInteger(decimal)) {\n                return '' + decimal;\n            }\n            return decimal.toFixed(1);\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${Number(value[0] / value[1]).toFixed(1)}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: {\n        name: 'XPTitle',\n        description: decodeXPValue,\n    },\n    0x9c9c: {\n        name: 'XPComment',\n        description: decodeXPValue\n    },\n    0x9c9d: {\n        name: 'XPAuthor',\n        description: decodeXPValue,\n    },\n    0x9c9e: {\n        name: 'XPKeywords',\n        description: decodeXPValue,\n    },\n    0x9c9f: {\n        name: 'XPSubject',\n        description: decodeXPValue,\n    },\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n\nfunction decodeXPValue(value) {\n    // The XP tags are encoded as UCS-2 which uses two bytes per character but\n    // it's close to UTF-16 so we can use that to decode them.\n    // https://www.loc.gov/preservation/digital/formats/content/tiff_tags.shtml\n    const decodedValue = new TextDecoder('utf-16').decode(new Uint8Array(value));\n    // Some softwares pad the string with null characters so we remove them.\n    return decodedValue.replace(/\\u0000+$/, ''); // eslint-disable-line no-control-regex\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x935c: 'ImageSourceData',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm', // Sometimes called FocalLengthIn35mmFormat.\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value + ' mm';\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengthFrom = parseFloat((value[0][0] / value[0][1]).toFixed(5));\n            const focalLengthTo = parseFloat((value[1][0] / value[1][1]).toFixed(5));\n            const focalLengths = `${focalLengthFrom}-${focalLengthTo} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            const maxAperture = 1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]));\n            return `${focalLengths} f/${parseFloat(maxAperture.toFixed(5))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\nimport TagNamesCanonIfd from './tag-names-canon-ifd.js';\nimport TagNamesPentaxIfd from './tag-names-pentax-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\nexport const IFD_TYPE_CANON = 'canon';\nexport const IFD_TYPE_PENTAX = 'pentax';\n\nexport default {\n    [IFD_TYPE_0TH]: tagNames0thExifIfds,\n    [IFD_TYPE_1ST]: TagNames0thIfd,\n    [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n    [IFD_TYPE_GPS]: TagNamesGpsIfd,\n    [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n    [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {},\n    [IFD_TYPE_CANON]: Constants.USE_MAKER_NOTES ? TagNamesCanonIfd : {},\n    [IFD_TYPE_PENTAX]: Constants.USE_MAKER_NOTES ? TagNamesPentaxIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    0x0004: {\n        'name': 'ShotInfo',\n        'description': (value) => value\n    },\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    0x0000: {\n        'name': 'PentaxVersion',\n        'description': (value) => value.join('.')\n    },\n    0x0005: 'PentaxModelID',\n    0x022b: 'LevelInfo'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Types from './types.js';\nimport TagNames, {IFD_TYPE_0TH, IFD_TYPE_1ST, IFD_TYPE_PENTAX} from './tag-names.js';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nexport function readIfd(dataView, ifdType, offsetOrigin, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, offsetOrigin, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n            if (tag.name === 'MakerNote' || (ifdType === IFD_TYPE_PENTAX && tag.name === 'LevelInfo')) {\n                tags[tag.name].__offset = tag.__offset;\n            }\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n            tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, offsetOrigin, offsetOrigin + nextIfdOffset, byteOrder, includeUnknown);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, offsetOrigin, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n    let tagValueOffset;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValueOffset = offset + TAG_VALUE_OFFSET;\n        tagValue = getTagValue(dataView, tagValueOffset, tagType, tagCount, byteOrder);\n    } else {\n        tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, offsetOrigin, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, offsetOrigin + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription,\n        __offset: tagValueOffset\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, offsetOrigin, tagValueOffset, tagType, tagCount) {\n    return offsetOrigin + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport {IFD_TYPE_0TH, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY} from './tag-names.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nexport default {\n    read,\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return {tags, byteOrder};\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport {IFD_TYPE_MPF} from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nexport default {\n    read\n};\n\nconst ENTRY_SIZE = 16;\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = getImageOffset(i, tags['MPEntry'], byteOrder, dataOffset);\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction getImageOffset(imageIndex, mpEntry, byteOrder, dataOffset) {\n    if (isFirstIndividualImage(imageIndex)) {\n        return 0;\n    }\n    return getImageNumberValue(mpEntry.value, imageIndex * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n}\n\nfunction isFirstIndividualImage(imageIndex) {\n    return imageIndex === 0;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(tagValue instanceof DataView ? tagValue.buffer : Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_ID_SIZE = 2;\nconst RESOURCE_NAME_SIZE_SIZE = 1;\nconst RESOURCE_NAME_MIN_SIZE = 2;\nconst RESOURCE_SIZE_SIZE = 4;\nconst RESOURCE_BLOCK_MIN_HEADER_SIZE = BYTES_8BIM_SIZE + RESOURCE_ID_SIZE + RESOURCE_NAME_MIN_SIZE + RESOURCE_SIZE_SIZE;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404; // Sometimes called resource ID.\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_MIN_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + resourceBlock.headerSize};\n        }\n        dataOffset += resourceBlock.headerSize + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    // We currently do not use the resource name for anything, we just need to know the size.\n    const resourceNameSize = dataView.getUint8(dataOffset + BYTES_8BIM_SIZE + RESOURCE_ID_SIZE);\n    const resourceNameTotalSize = (resourceNameSize % 2 === 0 ? resourceNameSize + 1 : resourceNameSize) + RESOURCE_NAME_SIZE_SIZE;\n\n    return {\n        headerSize: BYTES_8BIM_SIZE + RESOURCE_ID_SIZE + resourceNameTotalSize + RESOURCE_SIZE_SIZE,\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint32(dataOffset + BYTES_8BIM_SIZE + RESOURCE_ID_SIZE + resourceNameTotalSize),\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get(domParser) {\n    if (domParser) {\n        return domParser;\n    }\n\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        const {DOMParser, onErrorStopParsing} = __non_webpack_require__('@xmldom/xmldom');\n        return new DOMParser({onError: onErrorStopParsing});\n    } catch (error) {\n        return undefined;\n    }\n}\n","export function isMissingNamespaceError(error) {\n    const missingNamespaceStrings = [\n        // @xmldom/xmldom\n        'prefix is non-null and namespace is null',\n        // Firefox\n        'prefix not bound to a namespace', // en\n        'prefix inte bundet till en namnrymd', // sv\n        // Chrome\n        /Namespace prefix .+ is not defined/\n    ];\n\n    for (let i = 0; i < missingNamespaceStrings.length; i++) {\n        const regexp = new RegExp(missingNamespaceStrings[i]);\n        if (regexp.test(error.message)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// This should fix most missing namespace errors, but it's not a complete solution.\nexport function addMissingNamespaces(xmlString) {\n    const rootTagMatch = xmlString.match(/<([A-Za-z_][A-Za-z0-9._-]*)([^>]*)>/);\n    if (!rootTagMatch) {\n        return xmlString;\n    }\n    const rootTagName = rootTagMatch[1];\n\n    const declaredPrefixes = getAllDeclaredNamespacePrefixes(xmlString);\n    const usedPrefixes = getUsedNamespacePrefixes(xmlString);\n    const missingPrefixes = usedPrefixes.filter((prefix) => declaredPrefixes.indexOf(prefix) === -1);\n    if (missingPrefixes.length === 0) {\n        return xmlString;\n    }\n\n    const namespaceDeclarations = createNamespaceDeclarations(missingPrefixes);\n    return insertDeclarationsIntoRoot(xmlString, rootTagName, namespaceDeclarations);\n}\n\nfunction getAllDeclaredNamespacePrefixes(xmlContent) {\n    const prefixes = [];\n    const namespaceDeclarationRegex = /xmlns:([\\w-]+)=[\"'][^\"']+[\"']/g;\n    let match;\n    while ((match = namespaceDeclarationRegex.exec(xmlContent)) !== null) {\n        if (prefixes.indexOf(match[1]) === -1) {\n            prefixes.push(match[1]);\n        }\n    }\n    return prefixes;\n}\n\nfunction getUsedNamespacePrefixes(xmlContent) {\n    const prefixes = [];\n    const prefixUsageRegex = /\\b([A-Za-z_][A-Za-z0-9._-]*):[A-Za-z_][A-Za-z0-9._-]*\\b/g;\n    let match;\n    while ((match = prefixUsageRegex.exec(xmlContent)) !== null) {\n        const prefix = match[1];\n        if (prefix === 'xmlns' || prefix === 'xml') {\n            continue;\n        }\n        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n        }\n    }\n    return prefixes;\n}\n\nconst KNOWN_NAMESPACE_URIS = {\n    xmp: 'http://ns.adobe.com/xap/1.0/',\n    tiff: 'http://ns.adobe.com/tiff/1.0/',\n    exif: 'http://ns.adobe.com/exif/1.0/',\n    dc: 'http://purl.org/dc/elements/1.1/',\n    xmpMM: 'http://ns.adobe.com/xap/1.0/mm/',\n    stEvt: 'http://ns.adobe.com/xap/1.0/sType/ResourceEvent#',\n    stRef: 'http://ns.adobe.com/xap/1.0/sType/ResourceRef#',\n    photoshop: 'http://ns.adobe.com/photoshop/1.0/'\n};\n\nfunction createNamespaceDeclarations(prefixes) {\n    const declarations = [];\n    for (let i = 0; i < prefixes.length; i++) {\n        const prefix = prefixes[i];\n        const uri = KNOWN_NAMESPACE_URIS[prefix] || 'http://fallback.namespace/' + prefix;\n        declarations.push(' xmlns:' + prefix + '=\"' + uri + '\"');\n    }\n    return declarations.join('');\n}\n\nfunction insertDeclarationsIntoRoot(xmlString, rootTagName, declarations) {\n    const rootTagPattern = new RegExp('<' + rootTagName + '([^>]*)>');\n    return xmlString.replace(rootTagPattern, '<' + rootTagName + '$1' + declarations + '>');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\nimport {isMissingNamespaceError, addMissingNamespaces} from './xmp-namespaces.js';\n\nexport default {\n    read\n};\n\nclass ParseError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ParseError';\n    }\n}\n\nfunction read(dataView, chunks, domParser) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView, domParser);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp, domParser);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp, domParser);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks), domParser);\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView, domParser) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView, domParser);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView, _domParser) {\n    const domParser = DOMParser.get(_domParser);\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = parseFromString(domParser, trimXmlSource(xmlString));\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction parseFromString(domParser, xmlString, isRetry = false) {\n    try {\n        const doc = domParser.parseFromString(xmlString, 'application/xml');\n        const errors = doc.getElementsByTagName('parsererror');\n        if (errors.length > 0) {\n            throw new ParseError(errors[0].textContent);\n        }\n        return doc;\n    } catch (error) {\n        if (error.name === 'ParseError' && isMissingNamespaceError(error) && !isRetry) {\n            // Retry once after trying to fix the invalid XML.\n            return parseFromString(domParser, addMissingNamespaces(xmlString), true);\n        }\n        throw error;\n    }\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        try {\n            if (isTagAttribute(name)) {\n                tags[getLocalName(name)] = {\n                    value: attributes[name],\n                    attributes: {},\n                    description: getDescription(attributes[name], name)\n                };\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        try {\n            if (!isNamespaceDefinition(name)) {\n                tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (isDuplicateTag(node)) {\n        return parseNodeAsDuplicateTag(node, name);\n    }\n    if (isEmptyResourceTag(node)) {\n        return {value: '', attributes: {}, description: ''};\n    }\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction isEmptyResourceTag(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        && (typeof node.value === 'string')\n        && (node.value.trim() === '');\n}\n\nfunction isDuplicateTag(node) {\n    return Array.isArray(node);\n}\n\nfunction parseNodeAsDuplicateTag(node, name) {\n    return parseNodeAsSimpleValue(node[node.length - 1], name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {\n    getPascalStringFromDataView,\n    padStart,\n    parseFloatRadix,\n    strRepeat\n} from './utils.js';\n\n// export const OsTypeKeys = {\n//     OBJC: 'Objc',\n//     DOUB: 'doub',\n//     UNTF: 'UntF',\n//     TEXT: 'TEXT',\n//     BOOL: 'bool',\n//     ENUM: 'enum',\n//     LONG: 'long'\n// };\n\nexport const PathRecordTypes = {\n    CLOSED_SUBPATH_LENGTH: 0,\n    CLOSED_SUBPATH_BEZIER_LINKED: 1,\n    CLOSED_SUBPATH_BEZIER_UNLINKED: 2,\n    OPEN_SUBPATH_LENGTH: 3,\n    OPEN_SUBPATH_BEZIER_LINKED: 4,\n    OPEN_SUBPATH_BEZIER_UNLINKED: 5,\n    FILL_RULE: 6,\n    CLIPBOARD: 7,\n    INITIAL_FILL_RULE: 8\n};\n\nconst PATH_RECORD_SIZE = 24;\n\nexport default {\n    // 0x0425: {\n    //     name: 'CaptionDigest',\n    //     description(dataView) {\n    //         let description = '';\n    //         for (let i = 0; i < dataView.byteLength; i++) {\n    //             const byte = dataView.getUint8(i);\n    //             description += padStart(byte.toString(16), 2, '0');\n    //         }\n    //         return description;\n    //     }\n    // },\n    // Commented out for now to lower bundle size until someone asks for it.\n    // 0x043a: {\n    //     name: 'PrintInformation',\n    //     description: parseDescriptor\n    // },\n    // 0x043b: {\n    //     name: 'PrintStyle',\n    //     description: parseDescriptor\n    // },\n    0x07d0: {\n        name: 'PathInformation',\n        description: pathResource\n    },\n    0x0bb7: {\n        name: 'ClippingPathName',\n        description(dataView) {\n            const [, string] = getPascalStringFromDataView(dataView, 0);\n            return string;\n        }\n    },\n};\n\n// function parseDescriptor(dataView) {\n//     const DESCRIPTOR_VERSION_SIZE = 4;\n//     // This is a unicode string terminated with null. Unsure about the format though since in my example image it starts with 0x0000.\n//     const UNCLEAR_CLASS_ID_NAME_PART_SIZE = 6;\n//     let offset = 0;\n//     offset += DESCRIPTOR_VERSION_SIZE + UNCLEAR_CLASS_ID_NAME_PART_SIZE;\n//     const [classId, classIdSize] = getBlockValue(dataView, offset);\n//     offset += classIdSize;\n//     const numItems = Types.getLongAt(dataView, offset);\n//     offset += 4;\n//     const descriptor = {[classId]: {}};\n//     for (let i = 0; i < numItems; i++) {\n//         const [itemKey, itemKeySize] = getBlockValue(dataView, offset);\n//         offset += itemKeySize;\n//         const osTypeKey = getStringFromDataView(dataView, offset, 4);\n//         offset += 4;\n//         try {\n//             const {itemValue, itemSize} = getItemValue(dataView, offset, osTypeKey);\n//             offset += itemSize;\n//             descriptor[classId][ITEM_KEY_TERMS[itemKey] || itemKey] = itemValue;\n//         } catch (error) {\n//             // We can't recover from unknown OS type key since we don't know\n//             // where the next one starts.\n//             break;\n//         }\n//     }\n//     return JSON.stringify(descriptor);\n// }\n\n// function getBlockValue(dataView, offset, unicode = false) {\n//     const length = (unicode ? 2 : 1) * Types.getLongAt(dataView, offset) || 4;\n//     offset += 4;\n//     const value = (unicode ? getUnicodeStringFromDataView : getStringFromDataView)(dataView, offset, length);\n//     offset += length;\n//     return [value, 4 + length];\n// }\n\n// function getItemValue(dataView, offset, osTypeKey) {\n//     // Not all OSType keys are implemented yet because they are missing in the example image.\n//     if (osTypeKey === OsTypeKeys.OBJC) {\n//         const [classIdName, classIdNameSize] = getBlockValue(dataView, offset, true);\n//         offset += classIdNameSize;\n//         const [classId, classIdSize] = getBlockValue(dataView, offset);\n//         offset += classIdSize;\n//         const _offset = Types.getLongAt(dataView, offset);\n//         return {\n//             itemValue: {[classIdName]: {[classId]: _offset}},\n//             itemSize: classIdNameSize + classIdSize + 4\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.DOUB) {\n//         return {\n//             itemValue: parseDouble(dataView, offset),\n//             itemSize: 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.UNTF) {\n//         const unit = getStringFromDataView(dataView, offset, 4);\n//         return {\n//             itemValue: {unit, value: parseDouble(dataView, offset + 4)},\n//             itemSize: unit.length + 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.TEXT) {\n//         const length = 2 * Types.getLongAt(dataView, offset);\n//         offset += 4;\n//         const text = getUnicodeStringFromDataView(dataView, offset, length);\n//         return {\n//             itemValue: text,\n//             itemSize: 4 + length\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.BOOL) {\n//         return {\n//             itemValue: Types.getByteAt(dataView, offset) === 1,\n//             itemSize: 1\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.ENUM) {\n//         const [type, typeSize] = getBlockValue(dataView, offset);\n//         offset += typeSize;\n//         const [enumName, enumSize] = getBlockValue(dataView, offset);\n//         return {\n//             itemValue: {[type]: enumName},\n//             itemSize: typeSize + enumSize\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.LONG) {\n//         return {\n//             itemValue: Types.getLongAt(dataView, offset),\n//             itemSize: 4\n//         };\n//     }\n//     throw new Error(`Unknown OS type key: ${osTypeKey}`);\n// }\n\n// function parseDouble(dataView, offset) {\n//     const BIAS = 1023;\n//     const sign = (Types.getByteAt(dataView, offset) & parseInt('10000000', 2)) === 0 ? 1 : -1;\n//     const exponent = ((Types.getShortAt(dataView, offset) & parseInt('0111111111110000', 2)) >> 4) - BIAS;\n//     const fractionHigh = padStart((Types.getLongAt(dataView, offset) & parseInt('00000000000011111111111111111111', 2)).toString(2), 20, '0');\n//     const fractionLow = padStart(Types.getLongAt(dataView, offset + 4).toString(2), 32, '0');\n//     const fraction = parseFloatRadix('1.' + fractionHigh + fractionLow, 2);\n//     return sign * fraction * Math.pow(2, exponent);\n// }\n\nfunction pathResource(dataView) {\n    const TYPE_SIZE = 2;\n    const types = {};\n    const paths = [];\n\n    for (let offset = 0; offset < dataView.byteLength; offset += TYPE_SIZE + PATH_RECORD_SIZE) {\n        const type = Types.getShortAt(dataView, offset);\n        if (PATH_RECORD_TYPES[type]) {\n            if (!types[type]) {\n                types[type] = PATH_RECORD_TYPES[type].description;\n            }\n            paths.push({\n                type,\n                path: PATH_RECORD_TYPES[type].path(dataView, offset + TYPE_SIZE)\n            });\n        }\n    }\n    return JSON.stringify({types, paths});\n}\n\nconst PATH_RECORD_TYPES = {\n    [PathRecordTypes.CLOSED_SUBPATH_LENGTH]: {\n        description: 'Closed subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_LINKED]: {\n        description: 'Closed subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Closed subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_LENGTH]: {\n        description: 'Open subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_LINKED]: {\n        description: 'Open subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Open subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.FILL_RULE]: {\n        description: 'Path fill rule',\n        path: () => []\n    },\n    [PathRecordTypes.INITIAL_FILL_RULE]: {\n        description: 'Initial fill rule',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLIPBOARD]: {\n        description: 'Clipboard',\n        path: parseClipboard\n    }\n};\n\nfunction parseBezierKnot(dataView, offset) {\n    const PATH_POINT_SIZE = 8;\n    const path = [];\n    for (let i = 0; i < PATH_RECORD_SIZE; i += PATH_POINT_SIZE) {\n        path.push(parsePathPoint(dataView, offset + i));\n    }\n    return path;\n}\n\nfunction parsePathPoint(dataView, offset) {\n    const vertical = getFixedPointNumber(dataView, offset, 8);\n    const horizontal = getFixedPointNumber(dataView, offset + 4, 8);\n    return [horizontal, vertical];\n}\n\nfunction parseClipboard(dataView, offset) {\n    return [\n        [\n            getFixedPointNumber(dataView, offset, 8), // Top\n            getFixedPointNumber(dataView, offset + 4, 8), // Left\n            getFixedPointNumber(dataView, offset + 8, 8), // Botton\n            getFixedPointNumber(dataView, offset + 12, 8), // Right\n        ],\n        getFixedPointNumber(dataView, offset + 16, 8) // Resolution\n    ];\n}\n\nfunction getFixedPointNumber(dataView, offset, binaryPoint) {\n    const number = Types.getLongAt(dataView, offset);\n\n    const sign = (number >>> 31) === 0 ? 1 : -1;\n    const integer = (number & 0x7f000000) >>> (32 - binaryPoint);\n    const fraction = number & parseInt(strRepeat('1', 32 - binaryPoint), 2);\n\n    return sign * parseFloatRadix(integer.toString(2) + '.' + padStart(fraction.toString(2), 32 - binaryPoint, '0'), 2);\n}\n\n// Item key terminology: https://psd-tools.readthedocs.io/en/latest/reference/psd_tools.terminology.html\n// Are these correct? There are collisions that are commented out. A lot of code for little gain?\n// const ITEM_KEY_TERMS = {\n//     'A   ': 'A',\n//     'Adjs': 'Adjustment',\n//     'Algd': 'Aligned',\n//     'Algn': 'Alignment',\n//     'AllE': 'AllExcept',\n//     'All ': 'AllPS',\n//     'AlTl': 'AllToolOptions',\n//     'AChn': 'AlphaChannelOptions',\n//     'AlpC': 'AlphaChannels',\n//     'AmbB': 'AmbientBrightness',\n//     'AmbC': 'AmbientColor',\n//     'Amnt': 'Amount',\n//     'AmMx': 'AmplitudeMax',\n//     'AmMn': 'AmplitudeMin',\n//     'Anch': 'Anchor',\n//     'Angl': 'Angle',\n//     'Ang1': 'Angle1',\n//     'Ang2': 'Angle2',\n//     'Ang3': 'Angle3',\n//     'Ang4': 'Angle4',\n//     'AntA': 'AntiAlias',\n//     'Appe': 'Append',\n//     'Aply': 'Apply',\n//     'Ar  ': 'Area',\n//     'Arrw': 'Arrowhead',\n//     'As  ': 'As',\n//     'Asst': 'AssetBin',\n//     'AssC': 'AssumedCMYK',\n//     'AssG': 'AssumedGray',\n//     'AssR': 'AssumedRGB',\n//     'At  ': 'At',\n//     'Auto': 'Auto',\n//     'AuCo': 'AutoContrast',\n//     'Atrs': 'AutoErase',\n//     'AtKr': 'AutoKern',\n//     'AtUp': 'AutoUpdate',\n//     'Axis': 'Axis',\n//     'B   ': 'B',\n//     'Bckg': 'Background',\n//     'BckC': 'BackgroundColor',\n//     'BckL': 'BackgroundLevel',\n//     'Bwd ': 'Backward',\n//     'Blnc': 'Balance',\n//     'Bsln': 'BaselineShift',\n//     'BpWh': 'BeepWhenDone',\n//     'BgnR': 'BeginRamp',\n//     'BgnS': 'BeginSustain',\n//     'bvlD': 'BevelDirection',\n//     'ebbl': 'BevelEmboss',\n//     'bvlS': 'BevelStyle',\n//     'bvlT': 'BevelTechnique',\n//     'BgNH': 'BigNudgeH',\n//     'BgNV': 'BigNudgeV',\n//     'BtDp': 'BitDepth',\n//     'Blck': 'Black',\n//     'BlcC': 'BlackClip',\n//     'Blcn': 'BlackGeneration',\n//     'BlcG': 'BlackGenerationCurve',\n//     'BlcI': 'BlackIntensity',\n//     'BlcL': 'BlackLevel',\n//     // 'BlcL': 'BlackLimit',\n//     'Bld ': 'Bleed',\n//     'Blnd': 'BlendRange',\n//     'Bl  ': 'Blue',\n//     'BlBl': 'BlueBlackPoint',\n//     'blueFloat': 'BlueFloat',\n//     'BlGm': 'BlueGamma',\n//     'BlWh': 'BlueWhitePoint',\n//     'BlX ': 'BlueX',\n//     'BlY ': 'BlueY',\n//     'blur': 'Blur',\n//     'BlrM': 'BlurMethod',\n//     'BlrQ': 'BlurQuality',\n//     'Bk  ': 'Book',\n//     'BrdT': 'BorderThickness',\n//     'Btom': 'Bottom',\n//     'Brgh': 'Brightness',\n//     'BrsD': 'BrushDetail',\n//     'BrsS': 'BrushSize',\n//     'BrsT': 'BrushType',\n//     'Brsh': 'Brushes',\n//     'BmpA': 'BumpAmplitude',\n//     'BmpC': 'BumpChannel',\n//     'By  ': 'By',\n//     'Byln': 'Byline',\n//     'BylT': 'BylineTitle',\n//     'BytO': 'ByteOrder',\n//     'CMYS': 'CMYKSetup',\n//     'CchP': 'CachePrefs',\n//     'Clcl': 'Calculation',\n//     'Clbr': 'CalibrationBars',\n//     'Cptn': 'Caption',\n//     'CptW': 'CaptionWriter',\n//     'Ctgr': 'Category',\n//     'ClSz': 'CellSize',\n//     'Cntr': 'Center',\n//     'CntC': 'CenterCropMarks',\n//     'ChlA': 'ChalkArea',\n//     'Chnl': 'Channel',\n//     'ChMx': 'ChannelMatrix',\n//     'ChnN': 'ChannelName',\n//     'Chns': 'Channels',\n//     'ChnI': 'ChannelsInterleaved',\n//     'ChAm': 'CharcoalAmount',\n//     'ChrA': 'CharcoalArea',\n//     'Ckmt': 'ChokeMatte',\n//     'ChFX': 'ChromeFX',\n//     'City': 'City',\n//     'ClrA': 'ClearAmount',\n//     'ClPt': 'ClippingPath',\n//     'ClpP': 'ClippingPathEPS',\n//     'ClpF': 'ClippingPathFlatness',\n//     'ClpI': 'ClippingPathIndex',\n//     'Clpg': 'ClippingPathInfo',\n//     'ClnS': 'CloneSource',\n//     'Clsp': 'ClosedSubpath',\n//     'Clr ': 'Color',\n//     'Clrh': 'ColorChannels',\n//     'ClrC': 'ColorCorrection',\n//     'ClrI': 'ColorIndicates',\n//     'ClMg': 'ColorManagement',\n//     'Clrr': 'ColorPickerPrefs',\n//     'ClrS': 'ColorSpace',\n//     'ClrT': 'ColorTable',\n//     'Clrz': 'Colorize',\n//     'Clrs': 'Colors',\n//     'ClrL': 'ColorsList',\n//     'ClmW': 'ColumnWidth',\n//     'CmdK': 'CommandKey',\n//     'Cmpn': 'Compensation',\n//     'Cmpr': 'Compression',\n//     'Cncv': 'Concavity',\n//     'Cndt': 'Condition',\n//     'Cnst': 'Constant',\n//     // 'Cnst': 'Constrain',\n//     'CnsP': 'ConstrainProportions',\n//     'Cfov': 'ConstructionFOV',\n//     'Cntg': 'Contiguous',\n//     'Cntn': 'Continue',\n//     'Cnty': 'Continuity',\n//     'ShpC': 'ContourType',\n//     // 'Cntr': 'Contrast',\n//     'Cnvr': 'Convert',\n//     'Cpy ': 'Copy',\n//     'Cpyr': 'Copyright',\n//     'CprN': 'CopyrightNotice',\n//     'CrnC': 'CornerCropMarks',\n//     'Cnt ': 'Count',\n//     'CntN': 'CountryName',\n//     'CrcB': 'CrackBrightness',\n//     'CrcD': 'CrackDepth',\n//     'CrcS': 'CrackSpacing',\n//     'blfl': 'CreateLayersFromLayerFX',\n//     'Crdt': 'Credit',\n//     'Crss': 'Crossover',\n//     'Crnt': 'Current',\n//     'CrnH': 'CurrentHistoryState',\n//     'CrnL': 'CurrentLight',\n//     'CrnT': 'CurrentToolOptions',\n//     'Crv ': 'Curve',\n//     'CrvF': 'CurveFile',\n//     'Cstm': 'Custom',\n//     'CstF': 'CustomForced',\n//     'CstM': 'CustomMatte',\n//     'CstP': 'CustomPalette',\n//     'Cyn ': 'Cyan',\n//     'DCS ': 'DCS',\n//     'DPXf': 'DPXFormat',\n//     'DrkI': 'DarkIntensity',\n//     'Drkn': 'Darkness',\n//     'DtCr': 'DateCreated',\n//     'Dt ': 'Datum',\n//     'Dfnt': 'Definition',\n//     'Dnst': 'Density',\n//     'Dpth': 'Depth',\n//     'Dstl': 'DestBlackMax',\n//     'DstB': 'DestBlackMin',\n//     'Dstt': 'DestWhiteMax',\n//     'DstW': 'DestWhiteMin',\n//     'DstM': 'DestinationMode',\n//     'Dtl ': 'Detail',\n//     'Dmtr': 'Diameter',\n//     'DffD': 'DiffusionDither',\n//     'Drct': 'Direction',\n//     'DrcB': 'DirectionBalance',\n//     'DspF': 'DisplaceFile',\n//     'DspM': 'DisplacementMap',\n//     'DspP': 'DisplayPrefs',\n//     'Dstn': 'Distance',\n//     // 'Dstr': 'Distortion',\n//     // 'Dstr': 'Distribution',\n//     'Dthr': 'Dither',\n//     'DthA': 'DitherAmount',\n//     'Dthp': 'DitherPreserve',\n//     'Dthq': 'DitherQuality',\n//     'DocI': 'DocumentID',\n//     'DtGn': 'DotGain',\n//     'DtGC': 'DotGainCurves',\n//     'DrSh': 'DropShadow',\n//     'Dplc': 'Duplicate',\n//     'DnmC': 'DynamicColorSliders',\n//     'Edg ': 'Edge',\n//     'EdgB': 'EdgeBrightness',\n//     'EdgF': 'EdgeFidelity',\n//     'EdgI': 'EdgeIntensity',\n//     'EdgS': 'EdgeSimplicity',\n//     'EdgT': 'EdgeThickness',\n//     'EdgW': 'EdgeWidth',\n//     'Effc': 'Effect',\n//     'EmbC': 'EmbedCMYK',\n//     'EmbG': 'EmbedGray',\n//     'EmbL': 'EmbedLab',\n//     'EmbP': 'EmbedProfiles',\n//     'EmbR': 'EmbedRGB',\n//     'EmlD': 'EmulsionDown',\n//     'EGst': 'EnableGestures',\n//     'enab': 'Enabled',\n//     'Encd': 'Encoding',\n//     'End ': 'End',\n//     'EndA': 'EndArrowhead',\n//     'EndR': 'EndRamp',\n//     'EndS': 'EndSustain',\n//     'Engn': 'Engine',\n//     'ErsT': 'EraseToHistory',\n//     'ErsK': 'EraserKind',\n//     'ExcP': 'ExactPoints',\n//     'Expr': 'Export',\n//     'ExpC': 'ExportClipboard',\n//     'Exps': 'Exposure',\n//     'Extd': 'Extend',\n//     'EQlt': 'ExtendedQuality',\n//     'Extn': 'Extension',\n//     'ExtQ': 'ExtensionsQuery',\n//     'ExtD': 'ExtrudeDepth',\n//     'ExtM': 'ExtrudeMaskIncomplete',\n//     'ExtR': 'ExtrudeRandom',\n//     'ExtS': 'ExtrudeSize',\n//     'ExtF': 'ExtrudeSolidFace',\n//     'ExtT': 'ExtrudeType',\n//     'EyDr': 'EyeDropperSample',\n//     'FxCm': 'FPXCompress',\n//     'FxQl': 'FPXQuality',\n//     'FxSz': 'FPXSize',\n//     'FxVw': 'FPXView',\n//     'FdT ': 'FadeTo',\n//     'FdtS': 'FadeoutSteps',\n//     'FlOf': 'Falloff',\n//     'Fthr': 'Feather',\n//     'FbrL': 'FiberLength',\n//     'File': 'File',\n//     'FlCr': 'FileCreator',\n//     'FlIn': 'FileInfo',\n//     'FilR': 'FileReference',\n//     'FlSP': 'FileSavePrefs',\n//     'FlTy': 'FileType',\n//     'flst': 'FilesList',\n//     'Fl  ': 'Fill',\n//     'FlCl': 'FillColor',\n//     'FlNt': 'FillNeutral',\n//     'FlPd': 'FilterLayerPersistentData',\n//     'FlRs': 'FilterLayerRandomSeed',\n//     'Fngr': 'Fingerpainting',\n//     'FlrC': 'FlareCenter',\n//     'Fltn': 'Flatness',\n//     'Fltt': 'Flatten',\n//     'FlpV': 'FlipVertical',\n//     'Fcs ': 'Focus',\n//     'Fldr': 'Folders',\n//     'FntD': 'FontDesignAxes',\n//     'FntV': 'FontDesignAxesVectors',\n//     'FntN': 'FontName',\n//     'Scrp': 'FontScript',\n//     'FntS': 'FontStyleName',\n//     'FntT': 'FontTechnology',\n//     'FrcC': 'ForcedColors',\n//     'FrgC': 'ForegroundColor',\n//     'FrgL': 'ForegroundLevel',\n//     'Fmt ': 'Format',\n//     'Fwd ': 'Forward',\n//     'FrFX': 'FrameFX',\n//     'FrmW': 'FrameWidth',\n//     'FTcs': 'FreeTransformCenterState',\n//     'Frqn': 'Frequency',\n//     'From': 'From',\n//     'FrmB': 'FromBuiltin',\n//     'FrmM': 'FromMode',\n//     'FncK': 'FunctionKey',\n//     'Fzns': 'Fuzziness',\n//     'GCR ': 'GCR',\n//     'GFPT': 'GIFColorFileType',\n//     'GFCL': 'GIFColorLimit',\n//     'GFEC': 'GIFExportCaption',\n//     'GFMI': 'GIFMaskChannelIndex',\n//     'GFMV': 'GIFMaskChannelInverted',\n//     'GFPF': 'GIFPaletteFile',\n//     'GFPL': 'GIFPaletteType',\n//     'GFCS': 'GIFRequiredColorSpaceType',\n//     'GFIT': 'GIFRowOrderType',\n//     'GFTC': 'GIFTransparentColor',\n//     'GFTB': 'GIFTransparentIndexBlue',\n//     'GFTG': 'GIFTransparentIndexGreen',\n//     'GFTR': 'GIFTransparentIndexRed',\n//     'GFBM': 'GIFUseBestMatch',\n//     'Gmm ': 'Gamma',\n//     'GmtW': 'GamutWarning',\n//     'GnrP': 'GeneralPrefs',\n//     'gblA': 'GlobalAngle',\n//     'gagl': 'GlobalLightingAngle',\n//     'Glos': 'Gloss',\n//     'GlwA': 'GlowAmount',\n//     'GlwT': 'GlowTechnique',\n//     'Grad': 'Gradient',\n//     'Grdf': 'GradientFill',\n//     // 'Grn ': 'Grain',\n//     'Grnt': 'GrainType',\n//     'Grns': 'Graininess',\n//     'Gry ': 'Gray',\n//     'GrBh': 'GrayBehavior',\n//     'GrSt': 'GraySetup',\n//     'Grn ': 'Green',\n//     'GrnB': 'GreenBlackPoint',\n//     'greenFloat': 'GreenFloat',\n//     'GrnG': 'GreenGamma',\n//     'GrnW': 'GreenWhitePoint',\n//     'GrnX': 'GreenX',\n//     'GrnY': 'GreenY',\n//     'GrdC': 'GridColor',\n//     'Grds': 'GridCustomColor',\n//     'GrdM': 'GridMajor',\n//     'Grdn': 'GridMinor',\n//     'GrdS': 'GridStyle',\n//     'Grdt': 'GridUnits',\n//     'Grup': 'Group',\n//     'GrtW': 'GroutWidth',\n//     'GrwS': 'GrowSelection',\n//     'Gdes': 'Guides',\n//     'GdsC': 'GuidesColor',\n//     'Gdss': 'GuidesCustomColor',\n//     'GdPr': 'GuidesPrefs',\n//     'GdsS': 'GuidesStyle',\n//     'GttW': 'GutterWidth',\n//     'HlfF': 'HalftoneFile',\n//     'HlfS': 'HalftoneScreen',\n//     'HlSz': 'HalftoneSize',\n//     'Hlfp': 'HalftoneSpec',\n//     'Hrdn': 'Hardness',\n//     'HCdH': 'HasCmdHPreference',\n//     'Hdr ': 'Header',\n//     'Hdln': 'Headline',\n//     'Hght': 'Height',\n//     'HghA': 'HighlightArea',\n//     'hglC': 'HighlightColor',\n//     'HghL': 'HighlightLevels',\n//     'hglM': 'HighlightMode',\n//     'hglO': 'HighlightOpacity',\n//     'HghS': 'HighlightStrength',\n//     'HstB': 'HistoryBrushSource',\n//     'HstP': 'HistoryPrefs',\n//     'HsSS': 'HistoryStateSource',\n//     'HsSt': 'HistoryStates',\n//     'Hrzn': 'Horizontal',\n//     'HrzS': 'HorizontalScale',\n//     'HstN': 'HostName',\n//     'HstV': 'HostVersion',\n//     'H   ': 'Hue',\n//     'ICCE': 'ICCEngine',\n//     'ICCt': 'ICCSetupName',\n//     'Idnt': 'ID',\n//     'Idle': 'Idle',\n//     'ImgB': 'ImageBalance',\n//     'Impr': 'Import',\n//     'Imps': 'Impressionist',\n//     'In  ': 'In',\n//     'c@#^': 'Inherits',\n//     'InkC': 'InkColors',\n//     'Inks': 'Inks',\n//     'IrGl': 'InnerGlow',\n//     'glwS': 'InnerGlowSource',\n//     'IrSh': 'InnerShadow',\n//     'Inpt': 'Input',\n//     'kIBP': 'InputBlackPoint',\n//     'Inmr': 'InputMapRange',\n//     'Inpr': 'InputRange',\n//     'kIWP': 'InputWhitePoint',\n//     'Intn': 'Intensity',\n//     'Inte': 'Intent',\n//     'IntH': 'InterfaceBevelHighlight',\n//     'Intv': 'InterfaceBevelShadow',\n//     'IntB': 'InterfaceBlack',\n//     'Intd': 'InterfaceBorder',\n//     'Intk': 'InterfaceButtonDarkShadow',\n//     'Intt': 'InterfaceButtonDownFill',\n//     'InBF': 'InterfaceButtonUpFill',\n//     'ICBL': 'InterfaceColorBlue2',\n//     'ICBH': 'InterfaceColorBlue32',\n//     'ICGL': 'InterfaceColorGreen2',\n//     'ICGH': 'InterfaceColorGreen32',\n//     'ICRL': 'InterfaceColorRed2',\n//     'ICRH': 'InterfaceColorRed32',\n//     'IntI': 'InterfaceIconFillActive',\n//     'IntF': 'InterfaceIconFillDimmed',\n//     'Intc': 'InterfaceIconFillSelected',\n//     'Intm': 'InterfaceIconFrameActive',\n//     // 'Intr': 'InterfaceIconFrameDimmed',\n//     'IntS': 'InterfaceIconFrameSelected',\n//     'IntP': 'InterfacePaletteFill',\n//     'IntR': 'InterfaceRed',\n//     'IntT': 'InterfaceToolTipBackground',\n//     'ITTT': 'InterfaceToolTipText',\n//     'ITBg': 'InterfaceTransparencyBackground',\n//     'ITFg': 'InterfaceTransparencyForeground',\n//     'IntW': 'InterfaceWhite',\n//     // 'Intr': 'Interlace',\n//     'IntC': 'InterlaceCreateType',\n//     'IntE': 'InterlaceEliminateType',\n//     // 'Intr': 'Interpolation',\n//     'IntM': 'InterpolationMethod',\n//     'Invr': 'Invert',\n//     'InvM': 'InvertMask',\n//     'InvS': 'InvertSource2',\n//     'InvT': 'InvertTexture',\n//     'IsDr': 'IsDirty',\n//     'ItmI': 'ItemIndex',\n//     'JPEQ': 'JPEGQuality',\n//     'Krng': 'Kerning',\n//     'Kywd': 'Keywords',\n//     'Knd ': 'Kind',\n//     'LTnm': 'LUTAnimation',\n//     'LZWC': 'LZWCompression',\n//     'Lbls': 'Labels',\n//     'Lnds': 'Landscape',\n//     'LstT': 'LastTransform',\n//     'Lyr ': 'Layer',\n//     'Lefx': 'LayerEffects',\n//     'lfxv': 'LayerFXVisible',\n//     'LyrI': 'LayerID',\n//     'LyrN': 'LayerName',\n//     'Lyrs': 'Layers',\n//     'Ldng': 'Leading',\n//     'Left': 'Left',\n//     'lSNs': 'LegacySerialString',\n//     // 'Lngt': 'Length',\n//     'Lns ': 'Lens',\n//     'Lvl ': 'Level',\n//     'Lvls': 'Levels',\n//     'LgDr': 'LightDark',\n//     'LghD': 'LightDirection',\n//     'LghI': 'LightIntensity',\n//     'LghP': 'LightPosition',\n//     'LghS': 'LightSource',\n//     'LghT': 'LightType',\n//     'LghG': 'LightenGrout',\n//     'Lght': 'Lightness',\n//     'Line': 'Line',\n//     'lnkE': 'LinkEnable',\n//     'LnkL': 'LinkedLayerIDs',\n//     'Lald': 'LocalLightingAltitude',\n//     'lagl': 'LocalLightingAngle',\n//     'LclR': 'LocalRange',\n//     'Lctn': 'Location',\n//     'Log ': 'Log',\n//     'kLog': 'Logarithmic',\n//     'LwCs': 'LowerCase',\n//     'Lmnc': 'Luminance',\n//     'Mgnt': 'Magenta',\n//     'MkVs': 'MakeVisible',\n//     'Mfov': 'ManipulationFOV',\n//     'MpBl': 'MapBlack',\n//     'Mpng': 'Mapping',\n//     'MpgS': 'MappingShape',\n//     'Mtrl': 'Material',\n//     'Mtrx': 'Matrix',\n//     'MttC': 'MatteColor',\n//     'Mxm ': 'Maximum',\n//     'MxmS': 'MaximumStates',\n//     'MmrU': 'MemoryUsagePercent',\n//     'Mrge': 'Merge',\n//     'Mrgd': 'Merged',\n//     'Msge': 'Message',\n//     'Mthd': 'Method',\n//     'MztT': 'MezzotintType',\n//     'Mdpn': 'Midpoint',\n//     'MdtL': 'MidtoneLevels',\n//     'Mnm ': 'Minimum',\n//     'MsmC': 'MismatchCMYK',\n//     'MsmG': 'MismatchGray',\n//     'MsmR': 'MismatchRGB',\n//     'Md  ': 'Mode',\n//     'Mnch': 'Monochromatic',\n//     'MvT ': 'MoveTo',\n//     'Nm  ': 'Name',\n//     'Ngtv': 'Negative',\n//     'Nw  ': 'New',\n//     'Nose': 'Noise',\n//     'NnIm': 'NonImageData',\n//     'NnLn': 'NonLinear',\n//     'null': 'Null',\n//     'Nm L': 'NumLights',\n//     'Nmbr': 'Number',\n//     'NCch': 'NumberOfCacheLevels',\n//     'NC64': 'NumberOfCacheLevels64',\n//     'NmbO': 'NumberOfChannels',\n//     'NmbC': 'NumberOfChildren',\n//     'NmbD': 'NumberOfDocuments',\n//     'NmbG': 'NumberOfGenerators',\n//     // 'NmbL': 'NumberOfLayers',\n//     // 'NmbL': 'NumberOfLevels',\n//     'NmbP': 'NumberOfPaths',\n//     'NmbR': 'NumberOfRipples',\n//     'NmbS': 'NumberOfSiblings',\n//     'ObjN': 'ObjectName',\n//     'Ofst': 'Offset',\n//     'Sftt': 'OldSmallFontType',\n//     'On  ': 'On',\n//     'Opct': 'Opacity',\n//     'Optm': 'Optimized',\n//     'Ornt': 'Orientation',\n//     'OrgH': 'OriginalHeader',\n//     'OrgT': 'OriginalTransmissionReference',\n//     'OthC': 'OtherCursors',\n//     'OrGl': 'OuterGlow',\n//     'Otpt': 'Output',\n//     'kOBP': 'OutputBlackPoint',\n//     'kOWP': 'OutputWhitePoint',\n//     'OvrC': 'OverprintColors',\n//     'OvrO': 'OverrideOpen',\n//     'ObrP': 'OverridePrinter',\n//     'Ovrd': 'OverrideSave',\n//     'PNGf': 'PNGFilter',\n//     'PGIT': 'PNGInterlaceType',\n//     'PMpf': 'PageFormat',\n//     'PgNm': 'PageNumber',\n//     'PgPs': 'PagePosition',\n//     'PgSt': 'PageSetup',\n//     'PnCK': 'PaintCursorKind',\n//     'PntT': 'PaintType',\n//     'PntC': 'PaintingCursors',\n//     'Plt ': 'Palette',\n//     'PltF': 'PaletteFile',\n//     'PprB': 'PaperBrightness',\n//     'PrIn': 'ParentIndex',\n//     'PrNm': 'ParentName',\n//     'Path': 'Path',\n//     'PthC': 'PathContents',\n//     'PthN': 'PathName',\n//     'Pttn': 'Pattern',\n//     'Pncl': 'PencilWidth',\n//     'Prsp': 'PerspectiveIndex',\n//     'Phsp': 'Phosphors',\n//     'PckI': 'PickerID',\n//     'Pckr': 'PickerKind',\n//     'PPSz': 'PixelPaintSize',\n//     'Pltf': 'Platform',\n//     'PlgF': 'PluginFolder',\n//     'PlgP': 'PluginPrefs',\n//     'Pts ': 'Points',\n//     'Pstn': 'Position',\n//     'PstS': 'PostScriptColor',\n//     'Pstr': 'Posterization',\n//     'PrdC': 'PredefinedColors',\n//     'PrfB': 'PreferBuiltin',\n//     'Prfr': 'Preferences',\n//     'PrsA': 'PreserveAdditional',\n//     'PrsL': 'PreserveLuminosity',\n//     'PrsT': 'PreserveTransparency',\n//     'Prs ': 'Pressure',\n//     'Prvw': 'Preview',\n//     'PrvK': 'PreviewCMYK',\n//     'PrvF': 'PreviewFullSize',\n//     'PrvI': 'PreviewIcon',\n//     'PrvM': 'PreviewMacThumbnail',\n//     'PrvW': 'PreviewWinThumbnail',\n//     'PrvQ': 'PreviewsQuery',\n//     'PMps': 'PrintSettings',\n//     'PrfS': 'ProfileSetup',\n//     'PrvS': 'ProvinceState',\n//     'Qlty': 'Quality',\n//     'QucM': 'QuickMask',\n//     'RGBS': 'RGBSetup',\n//     'Rds ': 'Radius',\n//     'RndS': 'RandomSeed',\n//     'Rt  ': 'Ratio',\n//     'Rcnf': 'RecentFiles',\n//     'Rd  ': 'Red',\n//     'RdBl': 'RedBlackPoint',\n//     'redFloat': 'RedFloat',\n//     'RdGm': 'RedGamma',\n//     'RdWh': 'RedWhitePoint',\n//     'RdX ': 'RedX',\n//     'RdY ': 'RedY',\n//     'RgsM': 'RegistrationMarks',\n//     'Rltv': 'Relative',\n//     'Rlf ': 'Relief',\n//     'Rfid': 'RenderFidelity',\n//     'Rsmp': 'Resample',\n//     'RWOZ': 'ResizeWindowsOnZoom',\n//     'Rslt': 'Resolution',\n//     'RsrI': 'ResourceID',\n//     'Rspn': 'Response',\n//     'RtnH': 'RetainHeader',\n//     'Rvrs': 'Reverse',\n//     'Rght': 'Right',\n//     'RplM': 'RippleMagnitude',\n//     'RplS': 'RippleSize',\n//     'Rtt ': 'Rotate',\n//     'Rndn': 'Roundness',\n//     'RlrH': 'RulerOriginH',\n//     'RlrV': 'RulerOriginV',\n//     'RlrU': 'RulerUnits',\n//     // 'Strt': 'Saturation',\n//     'SvAn': 'SaveAndClose',\n//     'SvCm': 'SaveComposite',\n//     'PltL': 'SavePaletteLocations',\n//     'SvPt': 'SavePaths',\n//     'SvPy': 'SavePyramids',\n//     'Svng': 'Saving',\n//     'Scl ': 'Scale',\n//     'SclH': 'ScaleHorizontal',\n//     'SclV': 'ScaleVertical',\n//     'Scln': 'Scaling',\n//     'Scns': 'Scans',\n//     'ScrD': 'ScratchDisks',\n//     'ScrF': 'ScreenFile',\n//     'ScrT': 'ScreenType',\n//     'Sprt': 'Separations',\n//     'SrlS': 'SerialString',\n//     // 'ShdI': 'ShadingIntensity',\n//     'ShdN': 'ShadingNoise',\n//     'ShdS': 'ShadingShape',\n//     'sdwC': 'ShadowColor',\n//     // 'ShdI': 'ShadowIntensity',\n//     'ShdL': 'ShadowLevels',\n//     'sdwM': 'ShadowMode',\n//     'sdwO': 'ShadowOpacity',\n//     'Shp ': 'Shape',\n//     'Shrp': 'Sharpness',\n//     'ShrE': 'ShearEd',\n//     'ShrP': 'ShearPoints',\n//     'ShrS': 'ShearSt',\n//     'ShfK': 'ShiftKey',\n//     'ShKT': 'ShiftKeyToolSwitch',\n//     'ShrN': 'ShortNames',\n//     'ShwE': 'ShowEnglishFontNames',\n//     'SwMC': 'ShowMenuColors',\n//     'ShwT': 'ShowToolTips',\n//     'ShTr': 'ShowTransparency',\n//     'Sz  ': 'SizeKey',\n//     'Skew': 'Skew',\n//     'Sfts': 'SmallFontType',\n//     'SmBM': 'SmartBlurMode',\n//     'SmBQ': 'SmartBlurQuality',\n//     'Smoo': 'Smooth',\n//     'Smth': 'Smoothness',\n//     'SnpI': 'SnapshotInitial',\n//     'SfCl': 'SoftClip',\n//     'Sftn': 'Softness',\n//     'SoFi': 'SolidFill',\n//     'Srce': 'Source',\n//     'Src2': 'Source2',\n//     'SrcM': 'SourceMode',\n//     'Spcn': 'Spacing',\n//     'SpcI': 'SpecialInstructions',\n//     'SphM': 'SpherizeMode',\n//     'Spot': 'Spot',\n//     'SprR': 'SprayRadius',\n//     'SqrS': 'SquareSize',\n//     'Srcl': 'SrcBlackMax',\n//     'SrcB': 'SrcBlackMin',\n//     'Srcm': 'SrcWhiteMax',\n//     'SrcW': 'SrcWhiteMin',\n//     // 'Strt': 'Start',\n//     'StrA': 'StartArrowhead',\n//     'Stte': 'State',\n//     'srgh': 'Strength',\n//     'srgR': 'StrengthRatio',\n//     'Strg': 'Strength_PLUGIN',\n//     'StDt': 'StrokeDetail',\n//     'SDir': 'StrokeDirection',\n//     'StrL': 'StrokeLength',\n//     'StrP': 'StrokePressure',\n//     'StrS': 'StrokeSize',\n//     'StrW': 'StrokeWidth',\n//     'Styl': 'Style',\n//     'Stys': 'Styles',\n//     'StlC': 'StylusIsColor',\n//     'StlO': 'StylusIsOpacity',\n//     'StlP': 'StylusIsPressure',\n//     'StlS': 'StylusIsSize',\n//     'SbpL': 'SubPathList',\n//     'SplC': 'SupplementalCategories',\n//     'SstI': 'SystemInfo',\n//     'SstP': 'SystemPalette',\n//     // 'null': 'Target',\n//     'Trgp': 'TargetPath',\n//     'TrgP': 'TargetPathIndex',\n//     // 'Lngt': 'TermLength',\n//     'Txt ': 'Text',\n//     // 'TxtC': 'TextClickPoint',\n//     'TxtD': 'TextData',\n//     'TxtS': 'TextStyle',\n//     'Txtt': 'TextStyleRange',\n//     'Txtr': 'Texture',\n//     // 'TxtC': 'TextureCoverage',\n//     'TxtF': 'TextureFile',\n//     'TxtT': 'TextureType',\n//     'Thsh': 'Threshold',\n//     'TlNm': 'TileNumber',\n//     'TlOf': 'TileOffset',\n//     'TlSz': 'TileSize',\n//     'Ttl ': 'Title',\n//     'T   ': 'To',\n//     'TBl ': 'ToBuiltin',\n//     'ToLk': 'ToLinked',\n//     'TMd ': 'ToMode',\n//     'TglO': 'ToggleOthers',\n//     'Tlrn': 'Tolerance',\n//     'Top ': 'Top',\n//     'TtlL': 'TotalLimit',\n//     'Trck': 'Tracking',\n//     'TrnF': 'TransferFunction',\n//     // 'TrnS': 'TransferSpec',\n//     'Trns': 'Transparency',\n//     // 'TrnG': 'TransparencyGrid',\n//     'TrnC': 'TransparencyGridColors',\n//     // 'TrnG': 'TransparencyGridSize',\n//     'TrnP': 'TransparencyPrefs',\n//     // 'TrnS': 'TransparencyShape',\n//     'TrnI': 'TransparentIndex',\n//     'TrnW': 'TransparentWhites',\n//     'Twst': 'Twist',\n//     'Type': 'Type',\n//     'UC  ': 'UCA',\n//     'URL ': 'URL',\n//     'UndA': 'UndefinedArea',\n//     'Undl': 'Underline',\n//     'UntP': 'UnitsPrefs',\n//     'Untl': 'Untitled',\n//     'UppY': 'UpperY',\n//     'Urgn': 'Urgency',\n//     'AcrS': 'UseAccurateScreens',\n//     'AdPl': 'UseAdditionalPlugins',\n//     'UsCc': 'UseCacheForHistograms',\n//     'UsCr': 'UseCurves',\n//     'UsDf': 'UseDefault',\n//     'uglg': 'UseGlobalAngle',\n//     'UsIC': 'UseICCProfile',\n//     'UsMs': 'UseMask',\n//     'UsrM': 'UserMaskEnabled',\n//     'Usrs': 'UserMaskLinked',\n//     'Usng': 'Using',\n//     'Vl  ': 'Value',\n//     'Vrnc': 'Variance',\n//     'Vct0': 'Vector0',\n//     'Vct1': 'Vector1',\n//     'VctC': 'VectorColor',\n//     'VrsF': 'VersionFix',\n//     'VrsM': 'VersionMajor',\n//     'VrsN': 'VersionMinor',\n//     'Vrtc': 'Vertical',\n//     'VrtS': 'VerticalScale',\n//     'Vdlp': 'VideoAlpha',\n//     'Vsbl': 'Visible',\n//     'WtcS': 'WatchSuspension',\n//     'watr': 'Watermark',\n//     'Wvtp': 'WaveType',\n//     'WLMx': 'WavelengthMax',\n//     'WLMn': 'WavelengthMin',\n//     'WbdP': 'WebdavPrefs',\n//     'Wtdg': 'WetEdges',\n//     'What': 'What',\n//     'WhtC': 'WhiteClip',\n//     'WhtI': 'WhiteIntensity',\n//     'WhHi': 'WhiteIsHigh',\n//     'WhtL': 'WhiteLevel',\n//     'WhtP': 'WhitePoint',\n//     'WhPt': 'WholePath',\n//     'Wdth': 'Width',\n//     'WndM': 'WindMethod',\n//     'With': 'With',\n//     'WrPt': 'WorkPath',\n//     'WrkP': 'WorkPathIndex',\n//     'X   ': 'X',\n//     'Y   ': 'Y',\n//     'Ylw ': 'Yellow',\n//     'ZZTy': 'ZigZagType',\n//     'Alis': '_3DAntiAlias',\n// };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/\n\nimport {getDataView, getStringFromDataView, getPascalStringFromDataView} from './utils.js';\nimport Types from './types.js';\nimport TagNames from './photoshop-tag-names.js';\n\nexport default {\n    read\n};\n\nconst SIGNATURE = '8BIM';\nconst TAG_ID_SIZE = 2;\nconst RESOURCE_LENGTH_SIZE = 4;\n\nconst SIGNATURE_SIZE = SIGNATURE.length;\n\nfunction read(bytes, includeUnknown) {\n    const dataView = getDataView(new Uint8Array(bytes).buffer);\n    const tags = {};\n    let offset = 0;\n\n    while (offset < bytes.length) {\n        const signature = getStringFromDataView(dataView, offset, SIGNATURE_SIZE);\n        offset += SIGNATURE_SIZE;\n        const tagId = Types.getShortAt(dataView, offset);\n        offset += TAG_ID_SIZE;\n        const {tagName, tagNameSize} = getTagName(dataView, offset);\n        offset += tagNameSize;\n        const resourceSize = Types.getLongAt(dataView, offset);\n        offset += RESOURCE_LENGTH_SIZE;\n        if (signature === SIGNATURE) {\n            const valueDataView = getDataView(dataView.buffer, offset, resourceSize);\n            const tag = {\n                id: tagId,\n                value: getStringFromDataView(valueDataView, 0, resourceSize),\n            };\n            if (TagNames[tagId]) {\n                try {\n                    tag.description = TagNames[tagId].description(valueDataView);\n                } catch (error) {\n                    tag.description = '<no description formatter>';\n                }\n                tags[tagName ? tagName : TagNames[tagId].name] = tag;\n            } else if (includeUnknown) {\n                tags[`undefined-${tagId}`] = tag;\n            }\n        }\n        offset += resourceSize + (resourceSize % 2);\n    }\n\n    return tags;\n}\n\nfunction getTagName(dataView, offset) {\n    // The name is encoded as a Pascal string (the string is prefixed with one\n    // byte containing the length of the string) and everything is padded with a\n    // null byte to make the size even.\n    const [stringSize, string] = getPascalStringFromDataView(dataView, offset);\n    return {\n        tagName: string,\n        tagNameSize: 1 + stringSize + (stringSize % 2 === 0 ? 1 : 0)\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView, decompress, COMPRESSION_METHOD_NONE, COMPRESSION_METHOD_DEFLATE} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continuous array of bytes.\n// Compressed ICC profile data only has support for a single chunk.\nfunction read(dataView, iccData, async) {\n    if (async && iccData[0].compressionMethod !== COMPRESSION_METHOD_NONE) {\n        return readCompressedIcc(dataView, iccData);\n    }\n\n    return readIcc(dataView, iccData);\n}\n\nfunction readCompressedIcc(dataView, iccData) {\n    if (!compressionMethodIsSupported(iccData[0].compressionMethod)) {\n        return {};\n    }\n    const compressedDataView = new DataView(dataView.buffer.slice(iccData[0].offset, iccData[0].offset + iccData[0].length));\n    return decompress(compressedDataView, iccData[0].compressionMethod, 'utf-8', 'dataview')\n        .then(parseTags)\n        .catch(() => ({}));\n}\n\nfunction compressionMethodIsSupported(compressionMethod) {\n    return compressionMethod === COMPRESSION_METHOD_DEFLATE;\n}\n\nfunction readIcc(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Reverse-engineered docs:\n// https://exiftool.org/makernote_types.html\n// https://exiv2.org/makernote.html\n// https://exiv2.org/tags-canon.html\n// https://gist.github.com/redaktor/bae0ef2377ab70bc5276\n// https://www.ozhiker.com/electronics/pjmt/jpeg_info/canon_mn.html\n\nimport {objectAssign} from './utils.js';\nimport {readIfd} from './tags-helpers.js';\nimport {IFD_TYPE_CANON} from './tag-names.js';\n\nconst SHOT_INFO_AUTO_ROTATE = 27; // First position is size.\n\nexport default {\n    read,\n    SHOT_INFO_AUTO_ROTATE\n};\n\nfunction read(dataView, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    let tags = readIfd(dataView, IFD_TYPE_CANON, tiffHeaderOffset, tiffHeaderOffset + offset, byteOrder, includeUnknown);\n\n    if (tags['ShotInfo']) {\n        tags = objectAssign({}, tags, parseShotInfo(tags['ShotInfo'].value));\n        delete tags['ShotInfo'];\n    }\n\n    return tags;\n}\n\nfunction parseShotInfo(shotInfoData) {\n    const tags = {};\n\n    if (shotInfoData[SHOT_INFO_AUTO_ROTATE] !== undefined) {\n        tags['AutoRotate'] = {\n            value: shotInfoData[SHOT_INFO_AUTO_ROTATE],\n            description: getAutoRotateDescription(shotInfoData[SHOT_INFO_AUTO_ROTATE])\n        };\n    }\n\n    return tags;\n}\n\nfunction getAutoRotateDescription(autoRotate) {\n    if (autoRotate === 0) {\n        return 'None';\n    }\n    if (autoRotate === 1) {\n        return 'Rotate 90 CW';\n    }\n    if (autoRotate === 2) {\n        return 'Rotate 180';\n    }\n    if (autoRotate === 3) {\n        return 'Rotate 270 CW';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Reverse-engineered docs:\n// https://exiftool.org/makernote_types.html\n// https://exiv2.org/makernote.html\n// https://exiftool.org/TagNames/Pentax.html\n\nimport ByteOrder from './byte-order.js';\nimport {objectAssign} from './utils.js';\nimport {readIfd} from './tags-helpers.js';\nimport {IFD_TYPE_PENTAX} from './tag-names.js';\n\nconst BYTE_ORDER_OFFSET = 8; // Pextax5: https://exiftool.org/makernote_types.html\nconst PENTAX_IFD_OFFSET = BYTE_ORDER_OFFSET + 2; // https://exiftool.org/makernote_types.html\n\nconst MODEL_ID = {\n    K3_III: 0x13254,\n};\nconst LIK3III = {\n    CAMERA_ORIENTATION: 1,\n    ROLL_ANGLE: 3,\n    PITCH_ANGLE: 5\n};\n\nexport default {\n    read,\n    PENTAX_IFD_OFFSET,\n    MODEL_ID,\n    LIK3III\n};\n\nfunction read(dataView, tiffHeaderOffset, offset, includeUnknown) {\n    // Pentax does not use the standard TIFF header offset as base for tag\n    // offsets but instead uses the start of the IFD, i.e. directly after the\n    // two byte order bytes. originOffset below is this offset.\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset + offset + BYTE_ORDER_OFFSET);\n    const originOffset = tiffHeaderOffset + offset;\n    let tags = readIfd(dataView, IFD_TYPE_PENTAX, originOffset, originOffset + PENTAX_IFD_OFFSET, byteOrder, includeUnknown, true);\n\n    if (hasLevelInfoK3III(tags)) {\n        tags = objectAssign({}, tags, parseLevelInfoK3III(dataView, originOffset + tags['LevelInfo'].__offset, byteOrder));\n        delete tags['LevelInfo'];\n    }\n\n    return tags;\n}\n\nfunction hasLevelInfoK3III(tags) {\n    return tags['PentaxModelID'] && tags['PentaxModelID'].value === MODEL_ID.K3_III && tags['LevelInfo'];\n}\n\nfunction parseLevelInfoK3III(dataView, levelInfoOffset, byteOrder) {\n    const tags = {};\n\n    if (levelInfoOffset + 7 > dataView.byteLength) {\n        return tags;\n    }\n\n    const cameraOrientation = dataView.getInt8(levelInfoOffset + LIK3III.CAMERA_ORIENTATION);\n    tags['CameraOrientation'] = {\n        value: cameraOrientation,\n        description: getOrientationDescription(cameraOrientation)\n    };\n\n    const rollAngle = dataView.getInt16(levelInfoOffset + LIK3III.ROLL_ANGLE, byteOrder === ByteOrder.LITTLE_ENDIAN);\n    tags['RollAngle'] = {\n        value: rollAngle,\n        description: getRollAngleDescription(rollAngle)\n    };\n\n    const pitchAngle = dataView.getInt16(levelInfoOffset + LIK3III.PITCH_ANGLE, byteOrder === ByteOrder.LITTLE_ENDIAN);\n    tags['PitchAngle'] = {\n        value: pitchAngle,\n        description: getPitchAngleDescription(pitchAngle)\n    };\n\n    return tags;\n}\n\nfunction getOrientationDescription(orientation) {\n    if (orientation === 0) {\n        return 'Horizontal (normal)';\n    }\n    if (orientation === 1) {\n        return 'Rotate 270 CW';\n    }\n    if (orientation === 2) {\n        return 'Rotate 180';\n    }\n    if (orientation === 3) {\n        return 'Rotate 90 CW';\n    }\n    if (orientation === 4) {\n        return 'Upwards';\n    }\n    if (orientation === 5) {\n        return 'Downwards';\n    }\n    return 'Unknown';\n}\n\nfunction getRollAngleDescription(rollAngle) {\n    return '' + (rollAngle * -0.5);\n}\n\nfunction getPitchAngleDescription(pitchAngle) {\n    return '' + (pitchAngle * -0.5);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringValueFromArray, getStringFromDataView, decompress, COMPRESSION_METHOD_NONE} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT, TYPE_ZTXT} from './image-header-png.js';\nimport Tags from './tags.js';\nimport IptcTags from './iptc-tags.js';\nimport Constants from './constants.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_ITXT_EXTRA_BYTE = 1;\nconst COMPRESSION_FLAG_COMPRESSED = 1;\nconst EXIF_OFFSET = 6;\n\nfunction read(dataView, pngTextChunks, async, includeUnknown) {\n    const tags = {};\n    const tagsPromises = [];\n    for (let i = 0; i < pngTextChunks.length; i++) {\n        const {offset, length, type} = pngTextChunks[i];\n        const nameAndValue = getNameAndValue(dataView, offset, length, type, async);\n        if (nameAndValue instanceof Promise) {\n            tagsPromises.push(nameAndValue.then(({name, value, description}) => {\n                try {\n                    if (Constants.USE_EXIF && isExifGroupTag(name, value)) {\n                        return {\n                            __exif: Tags.read(decodeRawData(value), EXIF_OFFSET, includeUnknown).tags\n                        };\n                    } else if (Constants.USE_IPTC && isIptcGroupTag(name, value)) {\n                        return {\n                            __iptc: IptcTags.read(decodeRawData(value), 0, includeUnknown)\n                        };\n                    } else if (name && !isExifGroupTag(name, value) && !isIptcGroupTag(name, value)) {\n                        return {\n                            [name]: {\n                                value,\n                                description\n                            }\n                        };\n                    }\n                } catch (error) {\n                    // Ignore the broken tag.\n                }\n                return {};\n            }));\n        } else {\n            const {name, value, description} = nameAndValue;\n            if (name) {\n                tags[name] = {\n                    value,\n                    description\n                };\n            }\n        }\n    }\n\n    return {\n        readTags: tags,\n        readTagsPromise: tagsPromises.length > 0 ? Promise.all(tagsPromises) : undefined\n    };\n}\n\nfunction getNameAndValue(dataView, offset, length, type, async) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    let valueChars;\n    let parsingState = STATE_KEYWORD;\n    let compressionMethod = COMPRESSION_METHOD_NONE;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            compressionMethod = getCompressionMethod({type, dataView, offset: offset + i});\n            if (type === TYPE_ITXT) {\n                i += COMPRESSION_SECTION_ITXT_EXTRA_BYTE;\n            }\n            parsingState = moveToNextState(type, parsingState);\n            continue;\n        } else if (parsingState === STATE_TEXT) {\n            valueChars = new DataView(dataView.buffer.slice(offset + i, offset + length));\n            break;\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        }\n    }\n\n    if (compressionMethod !== COMPRESSION_METHOD_NONE && !async) {\n        return {};\n    }\n    const decompressedValueChars = decompress(valueChars, compressionMethod, getEncodingFromType(type));\n    if (decompressedValueChars instanceof Promise) {\n        return decompressedValueChars\n            .then((_decompressedValueChars) => constructTag(_decompressedValueChars, type, langChars, keywordChars))\n            .catch(() => constructTag('<text using unknown compression>'.split(''), type, langChars, keywordChars));\n    }\n    return constructTag(decompressedValueChars, type, langChars, keywordChars);\n}\n\nfunction getCompressionMethod({type, dataView, offset}) {\n    if (type === TYPE_ITXT) {\n        if (dataView.getUint8(offset) === COMPRESSION_FLAG_COMPRESSED) {\n            return dataView.getUint8(offset + 1);\n        }\n    } else if (type === TYPE_ZTXT) {\n        return dataView.getUint8(offset);\n    }\n    return COMPRESSION_METHOD_NONE;\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && [TYPE_ITXT, TYPE_ZTXT].includes(type)) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        if (type === TYPE_ITXT) {\n            return STATE_LANG;\n        }\n        return STATE_TEXT;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction getEncodingFromType(type) {\n    if (type === TYPE_TEXT || type === TYPE_ZTXT) {\n        return 'latin1';\n    }\n    return 'utf-8';\n}\n\nfunction constructTag(valueChars, type, langChars, keywordChars) {\n    const value = getValue(valueChars);\n    return {\n        name: getName(type, langChars, keywordChars),\n        value,\n        description: type === TYPE_ITXT ? getDescription(valueChars) : value\n    };\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n\nfunction getValue(valueChars) {\n    if (valueChars instanceof DataView) {\n        return getStringFromDataView(valueChars, 0, valueChars.byteLength);\n    }\n    return valueChars;\n}\n\nfunction getDescription(valueChars) {\n    return TagDecoder.decode('UTF-8', valueChars);\n}\n\nfunction isExifGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type exif' && value.substring(1, 5) === 'exif';\n}\n\nfunction isIptcGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type iptc' && value.substring(1, 5) === 'iptc';\n}\n\nfunction decodeRawData(value) {\n    const parts = value.match(/\\n(exif|iptc)\\n\\s*\\d+\\n([\\s\\S]*)$/);\n    return hexToDataView(parts[2].replace(/\\n/g, ''));\n}\n\nfunction hexToDataView(hex) {\n    const dataView = new DataView(new ArrayBuffer(hex.length / 2));\n    for (let i = 0; i < hex.length; i += 2) {\n        dataView.setUint8(i / 2, parseInt(hex.substring(i, i + 2), 16));\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n    const tags = {};\n\n    const flags = Types.getByteAt(dataView, chunkOffset);\n\n    tags['Alpha'] = getAlpha(flags);\n    tags['Animation'] = getAnimation(flags);\n    tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n    tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n\n    return tags;\n}\n\nfunction getAlpha(flags) {\n    const value = flags & 0x10;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getAnimation(flags) {\n    const value = flags & 0x02;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getThreeByteValue(dataView, offset) {\n    // Values are stored little-endian.\n    const value = Types.getByteAt(dataView, offset)\n        + 256 * Types.getByteAt(dataView, offset + 1)\n        + 256 * 256 * Types.getByteAt(dataView, offset + 2)\n        + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n    return {\n        value,\n        description: value + 'px'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// https://www.w3.org/Graphics/GIF/spec-gif87.txt\n// https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView) {\n    return {\n        'GIF Version': getGifVersion(dataView),\n        'Image Width': getImageWidth(dataView),\n        'Image Height': getImageHeight(dataView),\n        'Global Color Map': getGlobalColorMap(dataView),\n        'Bits Per Pixel': getBitDepth(dataView),\n        'Color Resolution Depth': getColorResolution(dataView)\n    };\n}\n\nfunction getGifVersion(dataView) {\n    const OFFSET = 3;\n    const SIZE = 3;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = getStringFromDataView(dataView, OFFSET, SIZE);\n    return {\n        value,\n        description: value\n    };\n}\n\nfunction getImageWidth(dataView) {\n    const OFFSET = 6;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView) {\n    const OFFSET = 8;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getGlobalColorMap(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b10000000) >>> 7;\n    return {\n        value,\n        description: value === 1 ? 'Yes' : 'No'\n    };\n}\n\nfunction getColorResolution(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = ((byteValue & 0b01110000) >>> 4) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n\nfunction getBitDepth(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b00000111) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get,\n};\n\nfunction get(tags, expanded) {\n    const compositeTags = {};\n    let hasCompositeTags = false;\n\n    const focalLength = getTagValue(tags, 'FocalLength', expanded);\n    const focalLengthIn35mmFilm = getTagValue(tags, 'FocalLengthIn35mmFilm', expanded);\n\n    const scaleFactorTo35mmEquivalent = getScaleFactorTo35mmEquivalent(focalLength, focalLengthIn35mmFilm);\n    if (scaleFactorTo35mmEquivalent) {\n        compositeTags.ScaleFactorTo35mmEquivalent = scaleFactorTo35mmEquivalent;\n        hasCompositeTags = true;\n    }\n\n    const fieldOfView = getFieldOfView(focalLengthIn35mmFilm);\n    if (fieldOfView) {\n        compositeTags.FieldOfView = fieldOfView;\n        hasCompositeTags = true;\n    }\n\n    if (hasCompositeTags) {\n        return compositeTags;\n    }\n\n    return undefined;\n}\n\nfunction getTagValue(tags, tagName, expanded) {\n    if (expanded && tags.exif && tags.exif[tagName]) {\n        return tags.exif[tagName].value;\n    }\n    if (!expanded && tags[tagName]) {\n        return tags[tagName].value;\n    }\n    return undefined;\n}\n\nfunction getScaleFactorTo35mmEquivalent(focalLength, focalLengthIn35mmFilm) {\n    if (focalLength && focalLengthIn35mmFilm) {\n        try {\n            const value = focalLengthIn35mmFilm / (focalLength[0] / focalLength[1]);\n            return {\n                value,\n                description: value.toFixed(1),\n            };\n        } catch (error) {\n            // Ignore.\n        }\n    }\n    return undefined;\n}\n\nfunction getFieldOfView(focalLengthIn35mmFilm) {\n    const FULL_FRAME_SENSOR_WIDTH_MM = 36;\n\n    if (focalLengthIn35mmFilm) {\n        try {\n            const value = 2 * Math.atan(FULL_FRAME_SENSOR_WIDTH_MM / (2 * focalLengthIn35mmFilm)) * (180 / Math.PI);\n            return {\n                value,\n                description: value.toFixed(1) + ' deg',\n            };\n        } catch (error) {\n            // Ignore.\n        }\n    }\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport MpfTags from './mpf-tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport PhotoshopTags from './photoshop-tags.js';\nimport IccTags from './icc-tags.js';\nimport CanonTags from './canon-tags.js';\nimport PentaxTags from './pentax-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport GifFileTags from './gif-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport Composite from './composite.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {}) {\n    if (isFilePathOrURL(data)) {\n        options.async = true;\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        options.async = true;\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^\\w+:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return fetchRemoteFile(filename, options);\n        }\n\n        return nodeGetRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction fetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeGetRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(\n    dataView,\n    {\n        expanded = false,\n        async = false,\n        includeUnknown = false,\n        domParser = undefined,\n    } = {\n        expanded: false,\n        async: false,\n        includeUnknown: false,\n        domParser: undefined,\n    }\n) {\n    let foundMetaData = false;\n    let tags = {};\n    const tagsPromises = [];\n\n    const {\n        fileType,\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets,\n        vp8xChunkOffset,\n        gifHeaderOffset\n    } = ImageHeader.parseAppMarkers(dataView, async);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const {tags: readTags, byteOrder} = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value), undefined, domParser);\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_PHOTOSHOP && readTags['ImageSourceData']) {\n            const readPhotoshopTags = PhotoshopTags.read(readTags['PhotoshopSettings'].value, includeUnknown);\n            if (expanded) {\n                tags.photoshop = readPhotoshopTags;\n            } else {\n                tags = objectAssign({}, tags, readPhotoshopTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n\n        if (Constants.USE_MAKER_NOTES && readTags['MakerNote']) {\n            if (hasCanonData(readTags)) {\n                const readCanonTags = CanonTags.read(dataView, tiffHeaderOffset, readTags['MakerNote'].__offset, byteOrder, includeUnknown);\n                if (expanded) {\n                    tags.makerNotes = readCanonTags;\n                } else {\n                    tags = objectAssign({}, tags, readCanonTags);\n                }\n            } else if (hasPentaxType1Data(readTags)) {\n                const readPentaxTags = PentaxTags.read(dataView, tiffHeaderOffset, readTags['MakerNote'].__offset, includeUnknown);\n                if (expanded) {\n                    tags.makerNotes = readPentaxTags;\n                } else {\n                    tags = objectAssign({}, tags, readPentaxTags);\n                }\n            }\n        }\n\n        if (readTags['MakerNote']) {\n            delete readTags['MakerNote'].__offset;\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks, domParser);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks, async);\n        if (readTags instanceof Promise) {\n            tagsPromises.push(readTags.then(addIccTags));\n        } else {\n            addIccTags(readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = MpfTags.read(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const {readTags, readTagsPromise} = PngTextTags.read(dataView, pngTextChunks, async, includeUnknown);\n        addPngTextTags(readTags);\n        if (readTagsPromise) {\n            tagsPromises.push(readTagsPromise.then((tagList) => tagList.forEach(addPngTextTags)));\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n        foundMetaData = true;\n        const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n        if (expanded) {\n            tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_GIF && hasGifFileData(gifHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = GifFileTags.read(dataView, gifHeaderOffset);\n        if (expanded) {\n            tags.gif = !tags.gif ? readTags : objectAssign({}, tags.gif, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const composite = Composite.get(tags, expanded);\n    if (composite) {\n        if (expanded) {\n            tags.composite = composite;\n        } else {\n            tags = objectAssign({}, tags, composite);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (fileType) {\n        if (expanded) {\n            if (!tags.file) {\n                tags.file = {};\n            }\n            tags.file.FileType = fileType;\n        } else {\n            tags.FileType = fileType;\n        }\n        foundMetaData = true;\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    if (async) {\n        return Promise.all(tagsPromises).then(() => tags);\n    }\n    return tags;\n\n    function addIccTags(readTags) {\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    function addPngTextTags(readTags) {\n        if (expanded) {\n            for (const group of ['exif', 'iptc']) {\n                const groupKey = `__${group}`;\n                if (readTags[groupKey]) {\n                    tags[group] = !tags[group] ? readTags[groupKey] : objectAssign({}, tags.exif, readTags[groupKey]);\n                    delete readTags[groupKey];\n                }\n            }\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = !tags.pngText ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign(\n                {},\n                tags,\n                readTags.__exif ? readTags.__exif : {},\n                readTags.__iptc ? readTags.__iptc : {},\n                readTags\n            );\n            delete tags.__exif;\n            delete tags.__iptc;\n        }\n    }\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasCanonData(tags) {\n    return tags['Make'] && tags['Make'].value && Array.isArray(tags['Make'].value) && tags['Make'].value[0] === 'Canon'\n        && tags['MakerNote'] && tags['MakerNote'].__offset;\n}\n\nfunction hasPentaxType1Data(tags) {\n    const PENTAX_ID_STRING = 'PENTAX ';\n    return tags['MakerNote'].value.length > PENTAX_ID_STRING.length\n        && getStringValueFromArray(tags['MakerNote'].value.slice(0, PENTAX_ID_STRING.length)) === PENTAX_ID_STRING\n        && tags['MakerNote'].__offset;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n\nfunction hasVp8xData(vp8xChunkOffset) {\n    return vp8xChunkOffset !== undefined;\n}\n\nfunction hasGifFileData(gifHeaderOffset) {\n    return gifHeaderOffset !== undefined;\n}\n"],"names":["jsonHighlighting","styleTags","String","tags","string","Number","number","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","doc","toString","e","SyntaxError","pos","error","m","message","match","Math","min","length","line","from","getErrorPosition","severity","to","jsonLanguage","LRLanguage","define","name","configure","props","indentNodeProp","add","Object","continuedIndent","except","Array","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport","DataView","constructor","buffer","undefined","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","this","byteLength","getUint8","offset","getUint16","littleEndian","getUint32","getInt32","getDataView","data","byteOffset","DataViewWrapper","getStringFromDataView","dataView","chars","i","push","getStringValueFromArray","getNullTerminatedStringFromDataView","char","getUnicodeStringFromDataView","pop","getPascalStringFromDataView","size","charArray","map","charCode","fromCharCode","join","objectAssign","arguments","property","deferInit","object","key","initializer","initialized","defineProperty","get","configurable","enumerable","value","apply","writable","getBase64Image","image","btoa","prototype","reduce","call","Uint8Array","byte","Buffer","strRepeat","num","COMPRESSION_METHOD_NONE","decompress","compressionMethod","encoding","returnType","DecompressionStream","decompressionStream","decompressedStream","Blob","stream","pipeThrough","Response","arrayBuffer","then","TextDecoder","decode","Promise","reject","getStringValue","getEncodedString","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","isTiffFile","TIFF_ID","TIFF_ID_OFFSET","ByteOrder","hasTiffMarker","findTiffOffsets","Constants","hasAppMarkers","isJpegFile","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","findJpegOffsets","fieldLength","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","appMarkerPosition","JPEG_ID_SIZE","APP_ID_OFFSET","isSOF0Marker","APP_MARKER_SIZE","isSOF2Marker","isApp0JfifMarker","JFIF_DATA_OFFSET","isApp1ExifMarker","TIFF_HEADER_OFFSET","isApp1XmpMarker","getXmpChunkDetails","isApp1ExtendedXmpMarker","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","IPTC_DATA_OFFSET","isApp2ICCMarker","iccDataOffset","APP2_ICC_DATA_OFFSET","iccDataLength","iccChunkNumber","ICC_CHUNK_NUMBER_OFFSET","iccChunksTotal","ICC_TOTAL_CHUNKS_OFFSET","chunkNumber","chunksTotal","isApp2MPFMarker","MPF_DATA_OFFSET","isAppMarker","isFillByte","fileDataOffset","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_IDENTIFIER","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","markerIdLength","isXmpIdentifier","isExtendedXmpIdentifier","dataOffset","appMarker","isPngFile","PNG_ID","findPngOffsets","async","offsets","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","isPngImageHeaderChunk","pngHeaderOffset","PNG_CHUNK_DATA_OFFSET","isPngXmpChunk","getPngXmpDataOffset","PNG_CHUNK_LENGTH_OFFSET","isPngTextChunk","chunkType","PNG_CHUNK_TYPE_OFFSET","pngTextChunks","type","isPngExifChunk","isPngIccpChunk","chunkDataLength","iccHeaderOffset","profileName","compressedProfileOffset","parseIccHeader","isPngChunk","pngChunkOffsets","PNG_XMP_PREFIX","TYPE_TEXT","TYPE_ITXT","TYPE_ZTXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","TYPE_ICCP","SUPPORTED_PNG_CHUNK_TYPES","includes","numberOfNullSeparators","parseItemLocationBox","contentOffset","boxLength","sizes","item","dataReferenceIndex","extentCount","extent","itemCount","itemId","constructionMethod","offsetSize","lengthSize","baseOffsetSize","indexSize","items","getItemLocationBoxOffsetsAndSizes","extentOffset","extentLength","baseOffset","getIndexSize","extentIndex","getItemCount","getItems","extents","getItemId","getVariableSizedValue","j","getExtentIndex","console","warn","get64BitValue","ITEM_INFO_TYPE_EXIF","ITEM_INFO_TYPE_MIME","ITEM_INFO_TYPE_URI","parseBox","BOX_LENGTH_SIZE","BOX_TYPE_SIZE","BOX_EXTENDED_SIZE","BOX_EXTENDED_SIZE_LOW_OFFSET","extendsToEndOfFile","hasExtendedSize","BOX_EXTENDED_SIZE_OFFSET","hasEmptyHighBits","getBoxLength","majorBrand","parseFileTypeBox","startOffset","subBoxes","parseSubBoxes","parseItemPropertiesBox","properties","parseItemPropertyContainerBox","icc","parseIcc","parseColorInformationBox","FLAGS_SIZE","parseMetadataBox","entryCount","itemInfos","getItemInformationBoxOffsetsAndSizes","parseItemInformationBox","entry","itemProtectionIndex","itemName","itemType","contentType","contentEncoding","itemUri","parseItemInformationEntryBox","findOffsets","metaBox","box","findMetaBox","exifItemId","find","itemInfo","findIinfExifItemId","ilocItem","findIlocItem","exifOffset","getTiffHeaderOffset","findExifOffset","xmpItemId","findIinfXmpItemId","ilocItemExtent","findXmpChunks","findIccChunks","colorType","ACCEPTED_ITEM_INFO_TYPES","currentOffset","indexOf","isHeicFile","HEIC_MAJOR_BRANDS","headerBox","findHeicOffsets","isAvifFile","findAvifOffsets","isWebpFile","RIFF_ID","WEBP_MARKER","EXIF_IDENTIFIER","vp8xChunkOffset","chunkId","chunkSize","isGifFile","GIF_SIGNATURES","GIF_SIGNATURE_SIZE","gifHeaderOffset","isXMLFile","XML_MARKER_OFFSET","XML_MARKER","parseAppMarkers","Tiff","addFileType","Jpeg","Png","Heic","Avif","Webp","Gif","Xml","fileType","fileTypeDescription","description","ApertureValue","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","decimal","isInteger","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","TagNamesCommon","values","formats","isArray","sample","decodeXPValue","replace","ref","_ref","numerator","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengths","parseFloat","maxAperture","IFD_TYPE_0TH","IFD_TYPE_1ST","IFD_TYPE_EXIF","IFD_TYPE_GPS","IFD_TYPE_INTEROPERABILITY","IFD_TYPE_MPF","IFD_TYPE_CANON","IFD_TYPE_PENTAX","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getTagValueAt","Types","get0thIfdOffset","readIfd","ifdType","offsetOrigin","includeUnknown","FIELD_COUNT_SIZE","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","__offset","nextIfdOffset","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","tagValueOffset","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueFitsInDataView","splitNullSeparatedAsciiString","asciiValue","decodeURIComponent","escape","decodeAsciiValue","tagName","tagDescription","getDescriptionFromTagValue","count","valueIndex","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","read","read0thIfd","readExifIfd","readGpsIfd","readInteroperabilityIfd","images","ceil","ENTRY_SIZE","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","getImageOffset","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","flags","flagsDescription","imageFormat","imageIndex","mpEntry","isFirstIndividualImage","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","Decoder","TAG_HEADER_SIZE","parseTags","naaBlock","newDataOffset","BYTES_8BIM_SIZE","resourceBlock","getResourceBlock","isNaaResourceBlock","headerSize","getBlockPadding","getNaaResourceBlock","resourceNameSize","resourceNameTotalSize","endOfBlockOffset","tagSize","TAG_LEAD_BYTE","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","charCodeAt","isFraction","func","degreesString","minutesString","degrees","minutes","isNaN","domParser","DOMParser","onErrorStopParsing","__non_webpack_require__","onError","addMissingNamespaces","xmlString","rootTagMatch","rootTagName","declaredPrefixes","xmlContent","prefixes","namespaceDeclarationRegex","exec","getAllDeclaredNamespacePrefixes","missingPrefixes","prefixUsageRegex","prefix","getUsedNamespacePrefixes","filter","declarations","rootTagPattern","RegExp","insertDeclarationsIntoRoot","uri","KNOWN_NAMESPACE_URIS","createNamespaceDeclarations","xmp","tiff","exif","dc","xmpMM","stEvt","stRef","photoshop","chunks","readTags","standardXmp","extendedXmp","completeChunks","combineChunks","extractCompleteChunks","hasStandardTags","hasExtendedTags","_raw","ParseError","super","totalLength","chunk","combinedChunks","set","chunkDataView","raw","_domParser","parseFromString","xmlSource","getDocument","parseXMPObject","convertToObject","getRDF","isRetry","errors","getElementsByTagName","textContent","missingNamespaceStrings","isMissingNamespaceError","node","childNodes","isTopNode","elements","getChildNodes","nodes","nodeName","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","getDescriptionOfArray","XmpTagNames","descriptions","getClearTextKey","getDescriptionOfObject","children","parseNodeAsTag","isDuplicateTag","parseNodeAsSimpleValue","parseNodeAsDuplicateTag","trim","isEmptyResourceTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","parseNodeAttributes","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","PathRecordTypes","paths","TYPE_SIZE","PATH_RECORD_TYPES","path","stringify","parseBezierKnot","getFixedPointNumber","parsePathPoint","vertical","binaryPoint","sign","integer","radix","parseFloatRadix","bytes","signature","SIGNATURE_SIZE","tagId","TAG_ID_SIZE","tagNameSize","resourceSize","RESOURCE_LENGTH_SIZE","SIGNATURE","valueDataView","stringSize","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","sliceToString","iccData","compressedDataView","catch","readCompressedIcc","totalIccProfileLength","sum","iccBinaryData","getBuffer","iccDataChunk","chunkData","readIcc","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","iccProfileKeys","profileEntry","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","SHOT_INFO_AUTO_ROTATE","shotInfoData","getAutoRotateDescription","parseShotInfo","autoRotate","MODEL_ID","K3_III","LIK3III","CAMERA_ORIENTATION","ROLL_ANGLE","PITCH_ANGLE","originOffset","BYTE_ORDER_OFFSET","hasLevelInfoK3III","levelInfoOffset","cameraOrientation","getInt8","getOrientationDescription","rollAngle","getInt16","getRollAngleDescription","pitchAngle","getPitchAngleDescription","parseLevelInfoK3III","PENTAX_IFD_OFFSET","orientation","getBitDepth","getColorType","getCompression","getFilter","getInterlace","tagsPromises","nameAndValue","getNameAndValue","isExifGroupTag","__exif","Tags","decodeRawData","EXIF_OFFSET","isIptcGroupTag","__iptc","IptcTags","readTagsPromise","all","STATE_KEYWORD","STATE_COMPRESSION","STATE_LANG","STATE_TRANSLATED_KEYWORD","STATE_TEXT","COMPRESSION_SECTION_ITXT_EXTRA_BYTE","COMPRESSION_FLAG_COMPRESSED","keywordChars","langChars","translatedKeywordChars","valueChars","parsingState","getCompressionMethod","moveToNextState","decompressedValueChars","getEncodingFromType","_decompressedValueChars","constructTag","_ref2","getValue","getName","hex","ArrayBuffer","setUint8","hexToDataView","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","getAlpha","getAnimation","getThreeByteValue","IMAGE_WIDTH_OFFSET","IMAGE_HEIGHT_OFFSET","getGifVersion","getGlobalColorMap","getColorResolution","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","expanded","compositeTags","hasCompositeTags","focalLength","focalLengthIn35mmFilm","scaleFactorTo35mmEquivalent","getScaleFactorTo35mmEquivalent","ScaleFactorTo35mmEquivalent","fieldOfView","FULL_FRAME_SENSOR_WIDTH_MM","atan","PI","getFieldOfView","FieldOfView","MetadataMissingError","stack","load","options","isFilePathOrURL","filename","fetch","url","method","headers","range","response","fetchRemoteFile","resolve","requireNodeGet","statusCode","on","concat","statusMessage","resume","nodeGetRemoteFile","isDataUri","dataUri","atob","decodedData","dataUriToBuffer","fs","requireNodeFs","open","fd","stat","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","File","isBrowserFileObject","file","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","loadView","exifErrors","isBuffer","isNodeBuffer","foundMetaData","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Thumbnail","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","iptc","hasXmpData","readXmpTags","XmpTags","readPhotoshopTags","PhotoshopTags","hasIccData","readIccTags","IccTags","hasCanonData","readCanonTags","CanonTags","makerNotes","PENTAX_ID_STRING","hasPentaxType1Data","readPentaxTags","PentaxTags","addIccTags","hasMpfData","readMpfTags","MpfTags","mpf","PngFileTags","png","pngFile","hasPngTextData","PngTextTags","addPngTextTags","tagList","hasPngData","PngTags","hasVp8xData","Vp8xTags","riff","hasGifFileData","GifFileTags","gif","composite","Composite","FileType","group","groupKey","pngText","iccDataOffsets"],"sourceRoot":""}