{"version":3,"file":"static/js/2067.61af63ca.chunk.js","mappings":"kOASMA,GAAcC,EAAAA,EAAAA,IAAH,kPASXC,EAAQC,EAAAA,GAAAA,IAAHC,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,mDAKLC,EAAYF,EAAAA,GAAAA,MAAHG,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,CAAAA,4CAKA,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAiBA,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAD,CAAAC,SAAAA,EACEC,EAAAA,EAAAA,KAACd,EAAD,KACAW,EAAAA,EAAAA,MAACI,EAAAA,GAAD,CAAcC,MAAM,QAApBH,SAAAA,EACEC,EAAAA,EAAAA,KAACT,EAAD,CAAWY,KAAK,OAAOC,OAAO,UAAUC,SApBxBC,SAAAA,GACpB,IACMC,GADSD,EAAIE,OAA4BC,OAAS,IACrC,GACnB,GAAIF,EAAM,CACR,IAAMG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACbF,EAAOf,QACTC,EAAUc,EAAOf,OAAOkB,aAG5BH,EAAOI,QAAWC,SAAAA,GAChBC,MAAMD,IAERL,EAAOO,cAAcV,OAQlBZ,IAAUK,EAAAA,EAAAA,KAACZ,EAAD,CAAO8B,IAAKvB,QAEzBK,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CAAcC,MAAM,SAASiB,MAAOxB,IAAUK,EAAAA,EAAAA,KAACoB,EAAAA,GAAD,CAAYC,MAAO1B,IAAjEI,UACEC,EAAAA,EAAAA,KAACsB,EAAAA,GAAD,CAAUC,aAAc5B,EAAQ6B,UAAQ","sources":["../../packages/image-to-base64/src/index.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Wrapper, Textarea, StyledLayout, CopyButton } from '@wcj/tools-react-components';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nexport interface ResultProps {\n  title?: string;\n  className?: string;\n}\n\nconst GlobalStyle = createGlobalStyle`\n  [data-color-mode*='dark'], [data-color-mode*='dark'] body {\n    --color-border-text-case: #30363d;\n  }\n  [data-color-mode*='light'], [data-color-mode*='light'] body {\n    --color-border-text-case: #d0d7de;\n  }\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  padding-top: 16px;\n`;\n\nconst InputFile = styled.input`\n  width: 100%;\n  display: block;\n`;\n\nexport default function ImageToBase64() {\n  const [result, setResult] = useState('');\n  const handleChange = (evn: React.ChangeEvent<HTMLInputElement>) => {\n    const files = (evn.target as HTMLInputElement).files || [];\n    const file = files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        if (reader.result) {\n          setResult(reader.result.toString());\n        }\n      };\n      reader.onerror = (err) => {\n        alert(err);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return (\n    <Wrapper>\n      <GlobalStyle />\n      <StyledLayout title=\"Image\">\n        <InputFile type=\"file\" accept=\"image/*\" onChange={handleChange} />\n        {result && <Image src={result} />}\n      </StyledLayout>\n      <StyledLayout title=\"Result\" extra={result && <CopyButton value={result} />}>\n        <Textarea defaultValue={result} readOnly />\n      </StyledLayout>\n    </Wrapper>\n  );\n}\n"],"names":["GlobalStyle","createGlobalStyle","Image","styled","_templateObject2","InputFile","_templateObject3","ImageToBase64","useState","result","setResult","_jsxs","Wrapper","children","_jsx","StyledLayout","title","type","accept","onChange","evn","file","target","files","reader","FileReader","onloadend","toString","onerror","err","alert","readAsDataURL","src","extra","CopyButton","value","Textarea","defaultValue","readOnly"],"sourceRoot":""}