{"version":3,"file":"static/js/9648.59f41a16.chunk.js","mappings":"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K+xC,mBAAqBV,CAC9B,EACAgtB,0BAA0Br+D,GACfA,EAAK+xC,mBAEhBusB,4BAAAA,CAA6Bt+D,EAAMu+D,GAC/Bv+D,EAAK+xC,mBAAqB,IAAK/xC,EAAK+xC,sBAAuBwsB,EAC/D,GCzKEC,GAAqB,OAGrBC,GAAiC,CACnC,6CACA,6CACA,uDACA,kCACA,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,IAC7CD,GACH,mCACA,wCAEEE,GAAyB,IAAIv2B,IAAI,CACnC,uCACA,qCACA,SAEEw2B,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCAGJ,SAASE,GAAU5rB,EAAU6rB,GACzB,OAAOA,EAASxmC,MAAM5Y,GAAWuzB,EAASwC,WAAW/1B,IACzD,CC/EA,MAAMq/C,GACS,YADTA,GAEe,wBAKfC,GAA2B,IAAI3yB,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACF9kC,KAAK+8B,GAAS,CAACA,EAAKvgC,cAAeugC,MAC/B26B,GAA2B,IAAI5yB,IAAI,CACrC,CAAC,gBAAiB,CAAE3sB,OAAQ,QAASnX,KAAM,UAA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","sources":["../../node_modules/property-information/lib/util/info.js","../../node_modules/unist-util-visit/lib/index.js","../../node_modules/style-to-js/src/index.ts","../../node_modules/unist-util-is/lib/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/vfile-message/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/boolbase/index.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/trim-lines/index.js","../../node_modules/style-to-js/src/utilities.ts","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-string/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../../node_modules/rehype-rewrite/node_modules/css-selector-parser/dist/mjs/indexes.js","../../node_modules/rehype-rewrite/node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js","../../node_modules/rehype-rewrite/node_modules/css-selector-parser/dist/mjs/syntax-definitions.js","../../node_modules/rehype-rewrite/node_modules/css-selector-parser/dist/mjs/utils.js","../../node_modules/rehype-rewrite/node_modules/css-selector-parser/dist/mjs/parser.js","../../node_modules/rehype-rewrite/node_modules/css-selector-parser/dist/mjs/ast.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/parse.js","../../node_modules/direction/index.js","../../node_modules/rehype-rewrite/node_modules/hast-util-to-string/lib/index.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/enter-state.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/attribute.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/class-name.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/id.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/name.js","../../node_modules/bcp-47-match/index.js","../../node_modules/rehype-rewrite/node_modules/hast-util-has-property/lib/index.js","https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/pseudo.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/test.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/walk.js","../../node_modules/rehype-rewrite/node_modules/hast-util-select/lib/index.js","../../node_modules/rehype-rewrite/src/index.ts","../../node_modules/rehype-attr/src/utils.ts","../../node_modules/rehype-attr/src/index.ts","../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../node_modules/@ungap/structured-clone/esm/types.js","../../node_modules/@ungap/structured-clone/esm/serialize.js","../../node_modules/@ungap/structured-clone/esm/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-parse-selector/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hastscript/lib/create-h.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hastscript/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/vfile-location/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/schema.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/merge.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/normalize.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/info.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/types.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/defined-info.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/create.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/xlink.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/xml.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/xmlns.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/aria.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/html.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/svg.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/node_modules/property-information/lib/find.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/html-void-elements/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/common/unicode.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/common/error-codes.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/tokenizer/preprocessor.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/common/token.js","../../node_modules/@uiw/react-markdown-preview/node_modules/entities/src/generated/decode-data-html.ts","../../node_modules/@uiw/react-markdown-preview/node_modules/entities/src/decode-codepoint.ts","../../node_modules/@uiw/react-markdown-preview/node_modules/entities/src/decode.ts","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/common/html.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/tokenizer/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/parser/open-element-stack.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/parser/formatting-element-list.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/tree-adapters/default.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/common/doctype.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/common/foreign-content.js","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/parser/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/entities/src/escape.ts","../../node_modules/@uiw/react-markdown-preview/node_modules/parse5/dist/serializer/index.js","../../node_modules/unist-util-position/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-raw/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/rehype-raw/lib/index.js","../../node_modules/estree-util-is-identifier-name/lib/index.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/hast-util-to-jsx-runtime/lib/index.js","../../node_modules/html-url-attributes/lib/index.js","../../node_modules/mdast-util-to-string/lib/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/react-markdown/node_modules/remark-parse/lib/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/react-markdown/node_modules/remark-rehype/lib/index.js","../../node_modules/react-markdown/node_modules/is-plain-obj/index.js","../../node_modules/react-markdown/node_modules/unified/lib/callable-instance.js","../../node_modules/react-markdown/node_modules/unified/lib/index.js","../../node_modules/react-markdown/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/escape-string-regexp/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-gfm-footnote/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","../../node_modules/mdast-util-to-markdown/lib/util/encode-info.js","../../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/mdast-util-phrasing/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-table/lib/edit-map.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-table/lib/infer.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/@uiw/react-markdown-preview/node_modules/remark-gfm/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/micromark-extension-gfm/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-github-blockquote-alert/src/index.ts","../../node_modules/@uiw/react-markdown-preview/esm/plugins/useCopied.js","../../node_modules/@uiw/react-markdown-preview/esm/preview.js","../../node_modules/@uiw/react-markdown-preview/esm/plugins/reservedMeta.js","../../node_modules/@uiw/react-markdown-preview/esm/plugins/retrieveMeta.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-heading-rank/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/rehype-slug/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/hast-util-is-element/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/@uiw/react-markdown-preview/node_modules/rehype-ignore/src/index.ts","../../node_modules/@uiw/react-markdown-preview/esm/nodes/octiconLink.js","../../node_modules/@uiw/react-markdown-preview/esm/rehypePlugins.js","../../node_modules/@uiw/react-markdown-preview/esm/index.js","../../node_modules/@uiw/react-markdown-preview/esm/nodes/copy.js","../../node_modules/unist-util-visit/node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/style-to-object/src/index.ts","../../node_modules/hast-util-whitespace/lib/index.js","../../node_modules/devlop/lib/default.js","../../node_modules/unist-util-stringify-position/lib/index.js"],"sourcesContent":["/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","import StyleToObject from 'style-to-object';\n\nimport { camelCase, CamelCaseOptions } from './utilities';\n\ntype StyleObject = Record<string, string>;\n\ninterface StyleToJSOptions extends CamelCaseOptions {}\n\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style: string, options?: StyleToJSOptions): StyleObject {\n  const output: StyleObject = {};\n\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  StyleToObject(style, (property, value) => {\n    // skip CSS comment\n    if (property && value) {\n      output[camelCase(property, options)] = value;\n    }\n  });\n\n  return output;\n}\n\nStyleToJS.default = StyleToJS;\n\nexport = StyleToJS;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","const CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nconst HYPHEN_REGEX = /-([a-z])/g;\nconst NO_HYPHEN_REGEX = /^[^-]+$/;\nconst VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nconst MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n\n/**\n * Checks whether to skip camelCase.\n */\nconst skipCamelCase = (property: string) =>\n  !property ||\n  NO_HYPHEN_REGEX.test(property) ||\n  CUSTOM_PROPERTY_REGEX.test(property);\n\n/**\n * Replacer that capitalizes first character.\n */\nconst capitalize = (match: string, character: string) =>\n  character.toUpperCase();\n\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nconst trimHyphen = (match: string, prefix: string) => `${prefix}-`;\n\n/**\n * CamelCase options.\n */\nexport interface CamelCaseOptions {\n  reactCompat?: boolean;\n}\n\n/**\n * CamelCases a CSS property.\n */\nexport const camelCase = (property: string, options: CamelCaseOptions = {}) => {\n  if (skipCamelCase(property)) {\n    return property;\n  }\n\n  property = property.toLowerCase();\n\n  if (options.reactCompat) {\n    // `-ms` vendor prefix should not be capitalized\n    property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n  } else {\n    // for non-React, remove first hyphen so vendor prefix is not capitalized\n    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n  }\n\n  return property.replace(HYPHEN_REGEX, capitalize);\n};\n","/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @template {Node} Tree\n * @template {Test} Check\n *\n * @overload\n * @param {Tree} tree\n * @param {Options | null | undefined} options\n * @param {Check} test\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} test\n * @returns {import('./complex-types.js').Matches<Tree, Check>}\n *\n * @overload\n * @param {Tree} tree\n * @param {null | undefined} [options]\n * @returns {Tree}\n *\n * @param {Node} tree\n *   Tree to filter.\n * @param {Options | Test} [options]\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {Node | undefined}\n *   New filtered tree.\n *\n *   `undefined` is returned if `tree` itself didn’t pass the test, or is\n *   cascaded away.\n */\nexport function filter(tree, options, test) {\n  const is = convert(test || options)\n  const cascadeRaw =\n    options && typeof options === 'object' && 'cascade' in options\n      ? /** @type {boolean | null | undefined} */ (options.cascade)\n      : undefined\n  const cascade =\n    cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n  return preorder(tree)\n\n  /**\n   * @param {Node} node\n   *   Current node.\n   * @param {number | undefined} [index]\n   *   Index of `node` in `parent`.\n   * @param {Parent | undefined} [parentNode]\n   *   Parent node.\n   * @returns {Node | undefined}\n   *   Shallow copy of `node`.\n   */\n  function preorder(node, index, parentNode) {\n    /** @type {Array<Node>} */\n    const children = []\n\n    if (!is(node, index, parentNode)) return undefined\n\n    if (parent(node)) {\n      let childIndex = -1\n\n      while (++childIndex < node.children.length) {\n        const result = preorder(node.children[childIndex], childIndex, node)\n\n        if (result) {\n          children.push(result)\n        }\n      }\n\n      if (cascade && node.children.length > 0 && children.length === 0) {\n        return undefined\n      }\n    }\n\n    // Create a shallow clone, using the new children.\n    /** @type {typeof node} */\n    // @ts-expect-error all the fields will be copied over.\n    const next = {}\n    /** @type {string} */\n    let key\n\n    for (key in node) {\n      if (own.call(node, key)) {\n        // @ts-expect-error: Looks like a record.\n        next[key] = key === 'children' ? children : node[key]\n      }\n    }\n\n    return next\n  }\n}\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nfunction parent(node) {\n  return 'children' in node && node.children !== undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      // @ts-ignore meta is a custom code block property\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","export var emptyMulticharIndex = {};\nexport var emptyRegularIndex = {};\nfunction extendIndex(item, index) {\n    var currentIndex = index;\n    for (var pos = 0; pos < item.length; pos++) {\n        var isLast = pos === item.length - 1;\n        var char = item.charAt(pos);\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\n        if (isLast) {\n            charIndex.self = item;\n        }\n        currentIndex = charIndex.chars;\n    }\n}\nexport function createMulticharIndex(items) {\n    if (items.length === 0) {\n        return emptyMulticharIndex;\n    }\n    var index = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        extendIndex(item, index);\n    }\n    return index;\n}\nexport function createRegularIndex(items) {\n    if (items.length === 0) {\n        return emptyRegularIndex;\n    }\n    var result = {};\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n        var item = items_2[_i];\n        result[item] = true;\n    }\n    return result;\n}\n","export var emptyPseudoSignatures = {};\nexport var defaultPseudoSignature = {\n    type: 'String',\n    optional: true\n};\nfunction calculatePseudoSignature(types) {\n    var result = {\n        type: 'NoArgument',\n        optional: false\n    };\n    function setResultType(type) {\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\n        }\n        result.type = type;\n    }\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        if (type === 'NoArgument') {\n            result.optional = true;\n        }\n        if (type === 'Formula') {\n            setResultType('Formula');\n        }\n        if (type === 'FormulaOfSelector') {\n            setResultType('Formula');\n            result.ofSelector = true;\n        }\n        if (type === 'String') {\n            setResultType('String');\n        }\n        if (type === 'Selector') {\n            setResultType('Selector');\n        }\n    }\n    return result;\n}\nexport function inverseCategories(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var items = obj[category];\n        if (items) {\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                (result[item] || (result[item] = [])).push(category);\n            }\n        }\n    }\n    return result;\n}\nexport function calculatePseudoSignatures(definitions) {\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\n    var result = {};\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\n        var pseudoClass = _a[_i];\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\n        if (argumentTypes) {\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\n        }\n    }\n    return result;\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar emptyXmlOptions = {};\nvar defaultXmlOptions = { wildcard: true };\nexport function getXmlOptions(param) {\n    if (param) {\n        if (typeof param === 'boolean') {\n            return defaultXmlOptions;\n        }\n        else {\n            return param;\n        }\n    }\n    else {\n        return emptyXmlOptions;\n    }\n}\nfunction withMigration(migration, merge) {\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\n}\nfunction withNoNegative(merge) {\n    return function (base, extension) {\n        var result = merge(base, extension);\n        if (!result) {\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\n        }\n        return result;\n    };\n}\nfunction withPositive(positive, merge) {\n    return function (base, extension) {\n        if (extension === true) {\n            return positive;\n        }\n        return merge(base === true ? positive : base, extension);\n    };\n}\nfunction mergeSection(values) {\n    return function (base, extension) {\n        if (!extension || !base) {\n            return extension;\n        }\n        if (typeof extension !== 'object' || extension === null) {\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\n        }\n        var result = __assign({}, base);\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (key === 'latest') {\n                continue;\n            }\n            var mergeSchema = values[key];\n            result[key] = mergeSchema(base[key], value);\n        }\n        return result;\n    };\n}\nfunction replaceValueIfSpecified(base, extension) {\n    if (extension !== undefined) {\n        return extension;\n    }\n    return base;\n}\nfunction concatArray(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    return base.concat(extension);\n}\nfunction mergeDefinitions(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    var result = __assign({}, base);\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (!value) {\n            delete result[key];\n            continue;\n        }\n        var baseValue = base[key];\n        if (!baseValue) {\n            result[key] = value;\n            continue;\n        }\n        result[key] = baseValue.concat(value);\n    }\n    return result;\n}\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\n    baseSyntax: replaceValueIfSpecified,\n    modules: concatArray,\n    tag: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    ids: replaceValueIfSpecified,\n    classNames: replaceValueIfSpecified,\n    namespace: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    combinators: concatArray,\n    attributes: mergeSection({\n        operators: concatArray,\n        caseSensitivityModifiers: concatArray,\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\n    }),\n    pseudoClasses: mergeSection({\n        unknown: replaceValueIfSpecified,\n        definitions: mergeDefinitions\n    }),\n    pseudoElements: mergeSection({\n        unknown: replaceValueIfSpecified,\n        notation: replaceValueIfSpecified,\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\n    })\n}));\nvar css1SyntaxDefinition = {\n    tag: {},\n    ids: true,\n    classNames: true,\n    combinators: [],\n    pseudoElements: {\n        unknown: 'reject',\n        notation: 'singleColon',\n        definitions: ['first-letter', 'first-line']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['link', 'visited', 'active']\n        }\n    }\n};\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\n    tag: { wildcard: true },\n    combinators: ['>', '+'],\n    attributes: {\n        unknownCaseSensitivityModifiers: 'reject',\n        operators: ['=', '~=', '|=']\n    },\n    pseudoElements: {\n        definitions: ['before', 'after']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['hover', 'focus', 'first-child'],\n            String: ['lang']\n        }\n    }\n});\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\n    namespace: {\n        wildcard: true\n    },\n    combinators: ['~'],\n    attributes: {\n        operators: ['^=', '$=', '*=']\n    },\n    pseudoElements: {\n        notation: 'both'\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'root',\n                'last-child',\n                'first-of-type',\n                'last-of-type',\n                'only-child',\n                'only-of-type',\n                'empty',\n                'target',\n                'enabled',\n                'disabled',\n                'checked',\n                'indeterminate'\n            ],\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\n            Selector: ['not']\n        }\n    }\n});\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\n    combinators: ['||'],\n    attributes: {\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'any-link',\n                'local-link',\n                'target-within',\n                'scope',\n                'current',\n                'past',\n                'future',\n                'focus-within',\n                'focus-visible',\n                'read-write',\n                'read-only',\n                'placeholder-shown',\n                'default',\n                'valid',\n                'invalid',\n                'in-range',\n                'out-of-range',\n                'required',\n                'optional',\n                'blank',\n                'user-invalid',\n                'playing',\n                'paused',\n                'autofill',\n                'modal',\n                'fullscreen',\n                'picture-in-picture',\n                'defined',\n                'loading',\n                'popover-open'\n            ],\n            Formula: ['nth-col', 'nth-last-col'],\n            String: ['dir'],\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\n            Selector: ['current', 'is', 'where', 'has', 'state']\n        }\n    },\n    pseudoElements: {\n        definitions: {\n            NoArgument: ['marker'],\n            Selector: ['part']\n        }\n    }\n});\n/**\n * CSS Modules with their syntax definitions.\n * These can be used to extend the parser with specific CSS modules.\n *\n * @example\n * // Using the css-position-3 module\n * createParser({ modules: ['css-position-3'] })\n */\nexport var cssModules = {\n    'css-position-1': {\n        latest: false,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['static', 'relative', 'absolute']\n            }\n        }\n    },\n    'css-position-2': {\n        latest: false,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['static', 'relative', 'absolute', 'fixed']\n            }\n        }\n    },\n    'css-position-3': {\n        latest: false,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['sticky', 'fixed', 'absolute', 'relative', 'static']\n            }\n        }\n    },\n    'css-position-4': {\n        latest: true,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['sticky', 'fixed', 'absolute', 'relative', 'static', 'initial']\n            }\n        }\n    },\n    'css-scoping-1': {\n        latest: true,\n        pseudoClasses: {\n            definitions: {\n                NoArgument: ['host', 'host-context'],\n                Selector: ['host', 'host-context']\n            }\n        },\n        pseudoElements: {\n            definitions: {\n                Selector: ['slotted']\n            }\n        }\n    },\n    'css-pseudo-4': {\n        latest: true,\n        pseudoElements: {\n            definitions: {\n                NoArgument: [\n                    'marker',\n                    'selection',\n                    'target-text',\n                    'search-text',\n                    'spelling-error',\n                    'grammar-error',\n                    'backdrop',\n                    'file-selector-button',\n                    'prefix',\n                    'postfix',\n                    'placeholder',\n                    'details-content'\n                ],\n                String: ['highlight']\n            }\n        }\n    },\n    'css-shadow-parts-1': {\n        latest: true,\n        pseudoElements: {\n            definitions: {\n                Selector: ['part']\n            }\n        }\n    }\n};\nvar latestSyntaxDefinition = __assign(__assign({}, selectors4SyntaxDefinition), { modules: Object.entries(cssModules)\n        .filter(function (_a) {\n        var latest = _a[1].latest;\n        return latest;\n    })\n        .map(function (_a) {\n        var name = _a[0];\n        return name;\n    }) });\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(latestSyntaxDefinition, {\n    pseudoElements: {\n        unknown: 'accept'\n    },\n    pseudoClasses: {\n        unknown: 'accept'\n    },\n    attributes: {\n        unknownCaseSensitivityModifiers: 'accept'\n    }\n});\nexport var cssSyntaxDefinitions = {\n    css1: css1SyntaxDefinition,\n    css2: css2SyntaxDefinition,\n    css3: selectors3SyntaxDefinition,\n    'selectors-3': selectors3SyntaxDefinition,\n    'selectors-4': selectors4SyntaxDefinition,\n    latest: latestSyntaxDefinition,\n    progressive: progressiveSyntaxDefinition\n};\n/**\n * Builds an index of where each pseudo-class and pseudo-element is defined\n * (in which CSS Level or CSS Module)\n */\nexport function buildPseudoLocationIndex() {\n    var index = {\n        pseudoClasses: {},\n        pseudoElements: {}\n    };\n    // Add CSS Levels (excluding 'latest' and 'progressive')\n    var cssLevels = ['css1', 'css2', 'css3', 'selectors-3', 'selectors-4'];\n    for (var _i = 0, cssLevels_1 = cssLevels; _i < cssLevels_1.length; _i++) {\n        var level = cssLevels_1[_i];\n        var syntax = cssSyntaxDefinitions[level];\n        // Process pseudo-classes\n        if (syntax.pseudoClasses && typeof syntax.pseudoClasses === 'object') {\n            var definitions = syntax.pseudoClasses.definitions;\n            if (definitions) {\n                for (var _a = 0, _b = Object.entries(definitions); _a < _b.length; _a++) {\n                    var _c = _b[_a], names = _c[1];\n                    for (var _d = 0, names_1 = names; _d < names_1.length; _d++) {\n                        var name_1 = names_1[_d];\n                        if (!index.pseudoClasses[name_1]) {\n                            index.pseudoClasses[name_1] = [];\n                        }\n                        if (!index.pseudoClasses[name_1].includes(level)) {\n                            index.pseudoClasses[name_1].push(level);\n                        }\n                    }\n                }\n            }\n        }\n        // Process pseudo-elements\n        if (syntax.pseudoElements && typeof syntax.pseudoElements === 'object') {\n            var definitions = syntax.pseudoElements.definitions;\n            if (definitions) {\n                if (Array.isArray(definitions)) {\n                    for (var _e = 0, definitions_1 = definitions; _e < definitions_1.length; _e++) {\n                        var name_2 = definitions_1[_e];\n                        if (!index.pseudoElements[name_2]) {\n                            index.pseudoElements[name_2] = [];\n                        }\n                        if (!index.pseudoElements[name_2].includes(level)) {\n                            index.pseudoElements[name_2].push(level);\n                        }\n                    }\n                }\n                else {\n                    for (var _f = 0, _g = Object.values(definitions); _f < _g.length; _f++) {\n                        var names = _g[_f];\n                        for (var _h = 0, names_2 = names; _h < names_2.length; _h++) {\n                            var name_3 = names_2[_h];\n                            if (!index.pseudoElements[name_3]) {\n                                index.pseudoElements[name_3] = [];\n                            }\n                            if (!index.pseudoElements[name_3].includes(level)) {\n                                index.pseudoElements[name_3].push(level);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // Add CSS Modules\n    for (var _j = 0, _k = Object.entries(cssModules); _j < _k.length; _j++) {\n        var _l = _k[_j], moduleName = _l[0], moduleSyntax = _l[1];\n        // Process pseudo-classes\n        if (moduleSyntax.pseudoClasses && typeof moduleSyntax.pseudoClasses === 'object') {\n            var definitions = moduleSyntax.pseudoClasses.definitions;\n            if (definitions) {\n                for (var _m = 0, _o = Object.values(definitions); _m < _o.length; _m++) {\n                    var names = _o[_m];\n                    for (var _p = 0, names_3 = names; _p < names_3.length; _p++) {\n                        var name_4 = names_3[_p];\n                        if (!index.pseudoClasses[name_4]) {\n                            index.pseudoClasses[name_4] = [];\n                        }\n                        if (!index.pseudoClasses[name_4].includes(moduleName)) {\n                            index.pseudoClasses[name_4].push(moduleName);\n                        }\n                    }\n                }\n            }\n        }\n        // Process pseudo-elements\n        if (moduleSyntax.pseudoElements && typeof moduleSyntax.pseudoElements === 'object') {\n            var definitions = moduleSyntax.pseudoElements.definitions;\n            if (definitions) {\n                if (Array.isArray(definitions)) {\n                    for (var _q = 0, definitions_2 = definitions; _q < definitions_2.length; _q++) {\n                        var name_5 = definitions_2[_q];\n                        if (!index.pseudoElements[name_5]) {\n                            index.pseudoElements[name_5] = [];\n                        }\n                        if (!index.pseudoElements[name_5].includes(moduleName)) {\n                            index.pseudoElements[name_5].push(moduleName);\n                        }\n                    }\n                }\n                else {\n                    for (var _r = 0, _s = Object.values(definitions); _r < _s.length; _r++) {\n                        var names = _s[_r];\n                        for (var _t = 0, names_4 = names; _t < names_4.length; _t++) {\n                            var name_6 = names_4[_t];\n                            if (!index.pseudoElements[name_6]) {\n                                index.pseudoElements[name_6] = [];\n                            }\n                            if (!index.pseudoElements[name_6].includes(moduleName)) {\n                                index.pseudoElements[name_6].push(moduleName);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return index;\n}\n// Pre-build the index for faster lookup\nexport var pseudoLocationIndex = buildPseudoLocationIndex();\n","export function isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\' || c >= '\\u00a0';\n}\nexport function isIdent(c) {\n    return ((c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        c === '-' ||\n        c === '_' ||\n        c >= '\\u00a0');\n}\nexport function isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexport var identEscapeChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    $: true,\n    '%': true,\n    '&': true,\n    \"'\": true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexport var stringRenderEscapeChars = {\n    '\\n': true,\n    '\\r': true,\n    '\\t': true,\n    '\\f': true,\n    '\\v': true\n};\nexport var whitespaceChars = {\n    ' ': true,\n    '\\t': true,\n    '\\n': true,\n    '\\r': true,\n    '\\f': true\n};\nexport var quoteChars = {\n    '\"': true,\n    \"'\": true\n};\nexport var digitsChars = {\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n    8: true,\n    9: true\n};\nexport var maxHexLength = 6;\nexport function escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (identEscapeChars[chr] || (chr === '-' && i === 1 && s.charAt(0) === '-')) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (chr === '-' ||\n                chr === '_' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (chr >= '0' && chr <= '9' && i !== 0 && !(i === 1 && s.charAt(0) === '-'))) {\n                result += chr;\n            }\n            else {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xf800) === 0xd800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n        }\n        i++;\n    }\n    return result.trim();\n}\nexport function escapeString(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if (stringRenderEscapeChars[chr]) {\n            chr = '\\\\' + chr.charCodeAt(0).toString(16) + (i === len - 1 ? '' : ' ');\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\".concat(result, \"\\\"\");\n}\n","import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions, cssModules, pseudoLocationIndex } from './syntax-definitions.js';\nimport { digitsChars, isHex, isIdent, isIdentStart, maxHexLength, quoteChars, whitespaceChars } from './utils.js';\nvar errorPrefix = \"css-selector-parser parse error: \";\n/**\n * Creates a parse function to be used later to parse CSS selectors.\n */\nexport function createParser(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b, modules = options.modules;\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\n    if (syntaxDefinition.baseSyntax) {\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\n    }\n    // Apply modules from syntax definition\n    if (syntaxDefinition.modules && syntaxDefinition.modules.length > 0) {\n        for (var _i = 0, _c = syntaxDefinition.modules; _i < _c.length; _i++) {\n            var module_1 = _c[_i];\n            var moduleSyntax = cssModules[module_1];\n            if (moduleSyntax) {\n                syntaxDefinition = extendSyntaxDefinition(moduleSyntax, syntaxDefinition);\n            }\n        }\n    }\n    // Apply additional modules if specified from options\n    if (modules && modules.length > 0) {\n        for (var _d = 0, modules_1 = modules; _d < modules_1.length; _d++) {\n            var module_2 = modules_1[_d];\n            var moduleSyntax = cssModules[module_2];\n            if (moduleSyntax) {\n                syntaxDefinition = extendSyntaxDefinition(moduleSyntax, syntaxDefinition);\n            }\n        }\n    }\n    var _e = syntaxDefinition.tag\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\n        : [false, false], tagNameEnabled = _e[0], tagNameWildcardEnabled = _e[1];\n    var idEnabled = Boolean(syntaxDefinition.ids);\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\n    if (namespaceEnabled && !tagNameEnabled) {\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\n    }\n    var substitutesEnabled = Boolean(substitutes);\n    var combinatorsIndex = syntaxDefinition.combinators\n        ? createMulticharIndex(syntaxDefinition.combinators)\n        : emptyMulticharIndex;\n    var _f = syntaxDefinition.attributes\n        ? [\n            true,\n            syntaxDefinition.attributes.operators\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\n                : emptyMulticharIndex,\n            syntaxDefinition.attributes.caseSensitivityModifiers\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\n                : emptyRegularIndex,\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\n        ]\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _f[0], attributesOperatorsIndex = _f[1], attributesCaseSensitivityModifiers = _f[2], attributesAcceptUnknownCaseSensitivityModifiers = _f[3];\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\n    var _g = syntaxDefinition.pseudoClasses\n        ? [\n            true,\n            syntaxDefinition.pseudoClasses.definitions\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\n        ]\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _g[0], pseudoClassesDefinitions = _g[1], pseudoClassesAcceptUnknown = _g[2];\n    var _h = syntaxDefinition.pseudoElements\n        ? [\n            true,\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            !syntaxDefinition.pseudoElements.notation ||\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            syntaxDefinition.pseudoElements.definitions\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\n                    : syntaxDefinition.pseudoElements.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoElements.unknown === 'accept'\n        ]\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _h[0], pseudoElementsSingleColonNotationEnabled = _h[1], pseudoElementsDoubleColonNotationEnabled = _h[2], pseudoElementsDefinitions = _h[3], pseudoElementsAcceptUnknown = _h[4];\n    var str = '';\n    var l = str.length;\n    var pos = 0;\n    var chr = '';\n    var is = function (comparison) { return chr === comparison; };\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\n    var rewind = function (newPos) {\n        pos = newPos;\n        chr = str.charAt(pos);\n    };\n    var next = function () {\n        pos++;\n        chr = str.charAt(pos);\n    };\n    var readAndNext = function () {\n        var current = chr;\n        pos++;\n        chr = str.charAt(pos);\n        return current;\n    };\n    /** @throws ParserError */\n    function fail(errorMessage) {\n        var position = Math.min(l - 1, pos);\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\n        error.position = position;\n        error.name = 'ParserError';\n        throw error;\n    }\n    function assert(condition, errorMessage) {\n        if (!condition) {\n            return fail(errorMessage);\n        }\n    }\n    var assertNonEof = function () {\n        assert(pos < l, 'Unexpected end of input.');\n    };\n    var isEof = function () { return pos >= l; };\n    var pass = function (character) {\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\n        pos++;\n        chr = str.charAt(pos);\n    };\n    function matchMulticharIndex(index) {\n        var match = matchMulticharIndexPos(index, pos);\n        if (match) {\n            pos += match.length;\n            chr = str.charAt(pos);\n            return match;\n        }\n    }\n    function matchMulticharIndexPos(index, subPos) {\n        var char = str.charAt(subPos);\n        var charIndex = index[char];\n        if (charIndex) {\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\n            if (subMatch) {\n                return subMatch;\n            }\n            if (charIndex.self) {\n                return charIndex.self;\n            }\n        }\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#hex-digit-diagram\n     */\n    function parseHex() {\n        var hex = readAndNext();\n        var count = 1;\n        while (isHex(chr) && count < maxHexLength) {\n            hex += readAndNext();\n            count++;\n        }\n        skipSingleWhitespace();\n        return String.fromCharCode(parseInt(hex, 16));\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#string-token-diagram\n     */\n    function parseString(quote) {\n        var result = '';\n        pass(quote);\n        while (pos < l) {\n            if (is(quote)) {\n                next();\n                return result;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (is(quote)) {\n                    result += quote;\n                    next();\n                }\n                else if (chr === '\\n' || chr === '\\f') {\n                    next();\n                }\n                else if (chr === '\\r') {\n                    next();\n                    if (is('\\n')) {\n                        next();\n                    }\n                }\n                else if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += chr;\n                    next();\n                }\n            }\n            else {\n                result += chr;\n                next();\n            }\n        }\n        return result;\n    }\n    /**\n     * @see https://www.w3.org/TR/css-syntax/#ident-token-diagram\n     */\n    function parseIdentifier() {\n        if (!isIdentStart(chr)) {\n            return null;\n        }\n        var result = '';\n        while (is('-')) {\n            result += chr;\n            next();\n        }\n        if (result === '-' && !isIdent(chr) && !is('\\\\')) {\n            fail('Identifiers cannot consist of a single hyphen.');\n        }\n        if (strict && result.length >= 2) {\n            // Checking this only for strict mode since browsers work fine with these identifiers.\n            fail('Identifiers cannot start with two hyphens with strict mode on.');\n        }\n        if (digitsChars[chr]) {\n            fail('Identifiers cannot start with hyphens followed by digits.');\n        }\n        while (pos < l) {\n            if (isIdent(chr)) {\n                result += readAndNext();\n            }\n            else if (is('\\\\')) {\n                next();\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return result;\n    }\n    function parsePseudoClassString() {\n        var result = '';\n        while (pos < l) {\n            if (is(')')) {\n                break;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (isEof() && !strict) {\n                    return (result + '\\\\').trim();\n                }\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                result += readAndNext();\n            }\n        }\n        return result.trim();\n    }\n    function skipSingleWhitespace() {\n        if (chr === ' ' || chr === '\\t' || chr === '\\f' || chr === '\\n') {\n            next();\n            return;\n        }\n        if (chr === '\\r') {\n            next();\n        }\n        if (chr === '\\n') {\n            next();\n        }\n    }\n    function skipWhitespace() {\n        while (whitespaceChars[chr]) {\n            next();\n        }\n    }\n    function parseSelector(relative) {\n        if (relative === void 0) { relative = false; }\n        skipWhitespace();\n        var rules = [parseRule(relative)];\n        while (is(',')) {\n            next();\n            skipWhitespace();\n            rules.push(parseRule(relative));\n        }\n        return {\n            type: 'Selector',\n            rules: rules\n        };\n    }\n    function parseAttribute() {\n        pass('[');\n        skipWhitespace();\n        var attr;\n        if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var name_1 = parseIdentifier();\n            assert(name_1, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_1,\n                namespace: { type: 'NoNamespace' }\n            };\n        }\n        else if (is('*')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            next();\n            pass('|');\n            var name_2 = parseIdentifier();\n            assert(name_2, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_2,\n                namespace: { type: 'WildcardNamespace' }\n            };\n        }\n        else {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: identifier\n            };\n            if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isIdentStart(chr)) {\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\n                    var name_3 = parseIdentifier();\n                    assert(name_3, 'Expected attribute name.');\n                    attr = {\n                        type: 'Attribute',\n                        name: name_3,\n                        namespace: { type: 'NamespaceName', name: identifier }\n                    };\n                }\n                else {\n                    rewind(savedPos);\n                }\n            }\n        }\n        assert(attr.name, 'Expected attribute name.');\n        skipWhitespace();\n        if (isEof() && !strict) {\n            return attr;\n        }\n        if (is(']')) {\n            next();\n        }\n        else {\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\n            skipWhitespace();\n            assertNonEof();\n            if (quoteChars[chr]) {\n                attr.value = {\n                    type: 'String',\n                    value: parseString(chr)\n                };\n            }\n            else if (substitutesEnabled && is('$')) {\n                next();\n                var name_4 = parseIdentifier();\n                assert(name_4, 'Expected substitute name.');\n                attr.value = {\n                    type: 'Substitution',\n                    name: name_4\n                };\n            }\n            else {\n                var value = parseIdentifier();\n                assert(value, 'Expected attribute value.');\n                attr.value = {\n                    type: 'String',\n                    value: value\n                };\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return attr;\n            }\n            if (!is(']')) {\n                var caseSensitivityModifier = parseIdentifier();\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\n                attr.caseSensitivityModifier = caseSensitivityModifier;\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\n                skipWhitespace();\n                if (isEof() && !strict) {\n                    return attr;\n                }\n            }\n            pass(']');\n        }\n        return attr;\n    }\n    function parseNumber() {\n        var result = '';\n        while (digitsChars[chr]) {\n            result += readAndNext();\n        }\n        assert(result !== '', 'Formula parse error.');\n        return parseInt(result);\n    }\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\n    function parseFormula() {\n        if (is('e') || is('o')) {\n            var ident = parseIdentifier();\n            if (ident === 'even') {\n                skipWhitespace();\n                return [2, 0];\n            }\n            if (ident === 'odd') {\n                skipWhitespace();\n                return [2, 1];\n            }\n        }\n        var firstNumber = null;\n        var firstNumberMultiplier = 1;\n        if (is('-')) {\n            next();\n            firstNumberMultiplier = -1;\n        }\n        if (isNumberStart()) {\n            if (is('+')) {\n                next();\n            }\n            firstNumber = parseNumber();\n            if (!is('\\\\') && !is('n')) {\n                return [0, firstNumber * firstNumberMultiplier];\n            }\n        }\n        if (firstNumber === null) {\n            firstNumber = 1;\n        }\n        firstNumber *= firstNumberMultiplier;\n        var identifier;\n        if (is('\\\\')) {\n            next();\n            if (isHex(chr)) {\n                identifier = parseHex();\n            }\n            else {\n                identifier = readAndNext();\n            }\n        }\n        else {\n            identifier = readAndNext();\n        }\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\n        skipWhitespace();\n        if (is('+') || is('-')) {\n            var sign = is('+') ? 1 : -1;\n            next();\n            skipWhitespace();\n            return [firstNumber, sign * parseNumber()];\n        }\n        else {\n            return [firstNumber, 0];\n        }\n    }\n    function parsePseudoArgument(pseudoName, type, signature) {\n        var argument;\n        if (is('(')) {\n            next();\n            skipWhitespace();\n            if (substitutesEnabled && is('$')) {\n                next();\n                var name_5 = parseIdentifier();\n                assert(name_5, 'Expected substitute name.');\n                argument = {\n                    type: 'Substitution',\n                    name: name_5\n                };\n            }\n            else if (signature.type === 'String') {\n                argument = {\n                    type: 'String',\n                    value: parsePseudoClassString()\n                };\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\n            }\n            else if (signature.type === 'Selector') {\n                argument = parseSelector(true);\n            }\n            else if (signature.type === 'Formula') {\n                var _a = parseFormula(), a = _a[0], b = _a[1];\n                argument = {\n                    type: 'Formula',\n                    a: a,\n                    b: b\n                };\n                if (signature.ofSelector) {\n                    skipWhitespace();\n                    if (is('o') || is('\\\\')) {\n                        var ident = parseIdentifier();\n                        assert(ident === 'of', 'Formula of selector parse error.');\n                        skipWhitespace();\n                        argument = {\n                            type: 'FormulaOfSelector',\n                            a: a,\n                            b: b,\n                            selector: parseRule()\n                        };\n                    }\n                }\n            }\n            else {\n                return fail(\"Invalid \".concat(type, \" signature.\"));\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return argument;\n            }\n            pass(')');\n        }\n        else {\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\n        }\n        return argument;\n    }\n    function parseTagName() {\n        if (is('*')) {\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\n            next();\n            return { type: 'WildcardTag' };\n        }\n        else if (isIdentStart(chr)) {\n            assert(tagNameEnabled, 'Tag names are not enabled.');\n            var name_6 = parseIdentifier();\n            assert(name_6, 'Expected tag name.');\n            return {\n                type: 'TagName',\n                name: name_6\n            };\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseTagNameWithNamespace() {\n        if (is('*')) {\n            var savedPos = pos;\n            next();\n            if (!is('|')) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'WildcardNamespace' };\n            return tagName;\n        }\n        else if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NoNamespace' };\n            return tagName;\n        }\n        else if (isIdentStart(chr)) {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected tag name.');\n            if (!is('|')) {\n                assert(tagNameEnabled, 'Tag names are not enabled.');\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            var savedPos = pos;\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\n            return tagName;\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseRule(relative) {\n        var _a, _b;\n        if (relative === void 0) { relative = false; }\n        var rule = { type: 'Rule', items: [] };\n        if (relative) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            if (combinator) {\n                rule.combinator = combinator;\n                skipWhitespace();\n            }\n        }\n        while (pos < l) {\n            if (isTagStart()) {\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                rule.items.push(parseTagNameWithNamespace());\n            }\n            else if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isTagStart()) {\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                    rewind(savedPos);\n                    rule.items.push(parseTagNameWithNamespace());\n                }\n                else {\n                    rewind(savedPos);\n                    break;\n                }\n            }\n            else if (is('.')) {\n                assert(classNamesEnabled, 'Class names are not enabled.');\n                next();\n                var className = parseIdentifier();\n                assert(className, 'Expected class name.');\n                rule.items.push({ type: 'ClassName', name: className });\n            }\n            else if (is('#')) {\n                assert(idEnabled, 'IDs are not enabled.');\n                next();\n                var idName = parseIdentifier();\n                assert(idName, 'Expected ID name.');\n                rule.items.push({ type: 'Id', name: idName });\n            }\n            else if (is('[')) {\n                assert(attributesEnabled, 'Attributes are not enabled.');\n                rule.items.push(parseAttribute());\n            }\n            else if (is(':')) {\n                var isDoubleColon = false;\n                var isPseudoElement = false;\n                next();\n                if (is(':')) {\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\n                    isDoubleColon = true;\n                    next();\n                }\n                var pseudoName = parseIdentifier();\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\n                assert(pseudoName, 'Expected pseudo-class name.');\n                if (!isDoubleColon ||\n                    pseudoElementsAcceptUnknown ||\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)) {\n                    // All good\n                }\n                else {\n                    // Generate a helpful error message with location information\n                    var locations = pseudoLocationIndex.pseudoElements[pseudoName];\n                    var errorMessage = \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\"\");\n                    if (locations && locations.length > 0) {\n                        errorMessage += \". It is defined in: \".concat(locations.join(', '));\n                    }\n                    fail(errorMessage + '.');\n                }\n                isPseudoElement =\n                    pseudoElementsEnabled &&\n                        (isDoubleColon ||\n                            (!isDoubleColon &&\n                                pseudoElementsSingleColonNotationEnabled &&\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\n                if (isPseudoElement) {\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\n                    var pseudoElement = {\n                        type: 'PseudoElement',\n                        name: pseudoName\n                    };\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\n                    if (argument) {\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\n                        pseudoElement.argument = argument;\n                    }\n                    rule.items.push(pseudoElement);\n                }\n                else {\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\n                    if (signature) {\n                        // All good\n                    }\n                    else {\n                        // Generate a helpful error message with location information\n                        var locations = pseudoLocationIndex.pseudoClasses[pseudoName];\n                        var errorMessage = \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\"\");\n                        if (locations && locations.length > 0) {\n                            errorMessage += \". It is defined in: \".concat(locations.join(', '));\n                        }\n                        fail(errorMessage + '.');\n                    }\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\n                    var pseudoClass = {\n                        type: 'PseudoClass',\n                        name: pseudoName\n                    };\n                    if (argument) {\n                        pseudoClass.argument = argument;\n                    }\n                    rule.items.push(pseudoClass);\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (rule.items.length === 0) {\n            if (isEof()) {\n                return fail('Expected rule but end of input reached.');\n            }\n            else {\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\n            }\n        }\n        skipWhitespace();\n        if (!isEof() && !is(',') && !is(')')) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            skipWhitespace();\n            rule.nestedRule = parseRule();\n            rule.nestedRule.combinator = combinator;\n        }\n        return rule;\n    }\n    return function (input) {\n        // noinspection SuspiciousTypeOfGuard\n        if (typeof input !== 'string') {\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\n        }\n        str = input;\n        l = str.length;\n        pos = 0;\n        chr = str.charAt(0);\n        return parseSelector();\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction astMethods(type) {\n    return function (generatorName, checkerName) {\n        var _a;\n        return (_a = {},\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\n            _a[checkerName] = function (entity) {\n                return typeof entity === 'object' && entity !== null && entity.type === type;\n            },\n            _a);\n    };\n}\n/**\n * AST structure generators and matchers.\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\n * AstSelector was specified.\n *\n * @example\n *\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\n *                 ast.id({name: 'user-34'}),\n *                 ast.className({name: 'user'}),\n *                 ast.className({name: 'user-active'}),\n *                 ast.attribute({\n *                     name: 'role',\n *                     operator: '=',\n *                     value: ast.string({value: 'button'})\n *                 }),\n *                 ast.pseudoClass({\n *                     name: 'lang',\n *                     argument: ast.string({value: 'en'})\n *                 }),\n *                 ast.pseudoElement({name: 'before'})\n *             ],\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\n *         })\n *     ]\n * });\n * console.log(ast.isSelector(selector)); // prints true\n * console.log(ast.isRule(selector)); // prints false\n */\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\n","/**\n * @import {AstSelector} from 'css-selector-parser'\n */\n\nimport {createParser} from 'css-selector-parser'\n\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\n\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return cssSelectorParse(selector)\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @import {Visitor} from 'unist-util-visit'\n * @import {ElementContent, Nodes} from 'hast'\n * @import {Direction, State} from './index.js'\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {EXIT, SKIP, visit} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let directionInferred\n\n  if (node.type === 'element') {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const direction = directionProperty(node)\n\n    if (lang !== null && lang !== undefined) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (direction === 'rtl') {\n        directionInferred = direction\n      } else if (\n        // Explicit `[dir=ltr]`.\n        direction === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (direction !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (direction !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        directionInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (direction === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          directionInferred = directionBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          directionInferred = node.properties.value\n            ? directionBidi(String(node.properties.value))\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (directionInferred) {\n        state.direction = directionInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor<ElementContent>} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      directionInferred = directionBidi(child.value)\n      return directionInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        directionProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */\nfunction directionBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */\nfunction directionProperty(node) {\n  const value =\n    node.type === 'element' && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @import {AstAttribute} from 'css-selector-parser'\n * @import {Element, Properties} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find} from 'property-information'\nimport * as spaces from 'space-separated-tokens'\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function attribute(query, element, schema) {\n  const info = find(schema, query.name)\n  const propertyValue = element.properties[info.property]\n  let value = normalizeValue(propertyValue, info)\n\n  // Exists.\n  if (!query.value) {\n    return value !== undefined\n  }\n\n  assert(query.value.type === 'String', 'expected plain string')\n  let key = query.value.value\n\n  // Case-sensitivity.\n  if (query.caseSensitivityModifier === 'i') {\n    key = key.toLowerCase()\n\n    if (value) {\n      value = value.toLowerCase()\n    }\n  }\n\n  if (value !== undefined) {\n    switch (query.operator) {\n      // Exact.\n      case '=': {\n        return key === value\n      }\n\n      // Ends.\n      case '$=': {\n        return key === value.slice(-key.length)\n      }\n\n      // Contains.\n      case '*=': {\n        return value.includes(key)\n      }\n\n      // Begins.\n      case '^=': {\n        return key === value.slice(0, key.length)\n      }\n\n      // Exact or prefix.\n      case '|=': {\n        return (\n          key === value ||\n          (key === value.slice(0, key.length) &&\n            value.charAt(key.length) === '-')\n        )\n      }\n\n      // Space-separated list.\n      case '~=': {\n        return (\n          // For all other values (including comma-separated lists), return whether this\n          // is an exact match.\n          key === value ||\n          // If this is a space-separated list, and the query is contained in it, return\n          // true.\n          spaces.parse(value).includes(key)\n        )\n      }\n      // Other values are not yet supported by CSS.\n      // No default\n    }\n  }\n\n  return false\n}\n\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */\nfunction normalizeValue(value, info) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'boolean') {\n    if (value) {\n      return info.attribute\n    }\n  } else if (Array.isArray(value)) {\n    if (value.length > 0) {\n      return (info.commaSeparated ? commas : spaces.stringify)(value)\n    }\n  } else {\n    return String(value)\n  }\n}\n","/**\n * @import {AstClassName} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */\n\n/** @type {Array<never>} */\nconst emptyClassNames = []\n\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function className(query, element) {\n  // Assume array.\n  const value = /** @type {Readonly<Array<string>>} */ (\n    element.properties.className || emptyClassNames\n  )\n\n  return value.includes(query.name)\n}\n","/**\n * @import {AstId} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */\n\n/**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function id(query, element) {\n  return element.properties.id === query.name\n}\n","/**\n * @import {AstTagName} from 'css-selector-parser'\n * @import {Element} from 'hast'\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function name(query, element) {\n  return query.name === element.tagName\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node` is an element and has a `name` property.\n *\n * @template {string} Key\n *   Type of key.\n * @param {Nodes} node\n *   Node to check (typically `Element`).\n * @param {Key} name\n *   Property name to check.\n * @returns {node is Element & {properties: Record<Key, Array<number | string> | number | string | true>}}}\n *   Whether `node` is an element that has a `name` property.\n *\n *   Note: see <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/27c9274/types/hast/index.d.ts#L37C29-L37C98>.\n */\nexport function hasProperty(node, name) {\n  const value =\n    node.type === 'element' &&\n    own.call(node.properties, name) &&\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n",null,null,null,"/**\n * @import {AstPseudoClass} from 'css-selector-parser'\n * @import {default as NthCheck} from 'nth-check'\n * @import {ElementContent, Element, Parents} from 'hast'\n * @import {State} from './index.js'\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {ok as assert, unreachable} from 'devlop'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {walk} from './walk.js'\n\n/** @type {NthCheck} */\n// @ts-expect-error: types are broken.\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\nexport const pseudo = zwitch('name', {\n  handlers: {\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    is,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-last-of-type': nthLastOfType,\n    'nth-of-type': nthOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  },\n  invalid: invalidPseudo,\n  unknown: unknownPseudo\n})\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      (element.properties.type === 'checkbox' ||\n        element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\n// eslint-disable-next-line unicorn/prevent-abbreviations\nfunction dir(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected plain text')\n  return state.direction === query.argument.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let cachedFunction = query._cachedFn\n\n  if (!cachedFunction) {\n    const value = query.argument\n    assert(value, 'expected `argument`')\n\n    if (value.type !== 'Formula') {\n      throw new Error(\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\n      )\n    }\n\n    cachedFunction = nthCheck(value.a + 'n+' + value.b)\n    // @ts-expect-error: cache.\n    query._cachedFn = cachedFunction\n  }\n\n  return cachedFunction\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction has(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  unreachable('Invalid pseudo-selector')\n}\n\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction is(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lang(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected string')\n\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    extendedFilter(state.language, commas(query.argument.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction not(query, element, index, parent, state) {\n  return !is(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.elementIndex === 'number' && cachedFunction(state.elementIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      cachedFunction(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    cachedFunction(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const cachedFunction = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && cachedFunction(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction root(_1, element, _2, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction scope(_1, element, _2, _3, state) {\n  return state.scopeElements.includes(element)\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */\nfunction unknownPseudo(query_) {\n  // Runtime JS guarantees it has a `name`.\n  const query = /** @type {AstPseudoClass} */ (query_)\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\n}\n","/**\n * @import {AstRule} from 'css-selector-parser'\n * @import {Element, Parents} from 'hast'\n * @import {State} from './index.js'\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function test(query, element, index, parent, state) {\n  for (const item of query.items) {\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (item.type === 'Attribute') {\n      if (!attribute(item, element, state.schema)) return false\n    } else if (item.type === 'Id') {\n      if (!id(item, element)) return false\n    } else if (item.type === 'ClassName') {\n      if (!className(item, element)) return false\n    } else if (item.type === 'PseudoClass') {\n      if (!pseudo(item, element, index, parent, state)) return false\n    } else if (item.type === 'PseudoElement') {\n      throw new Error('Invalid selector: `::' + item.name + '`')\n    } else if (item.type === 'TagName') {\n      if (!name(item, element)) return false\n    } else {\n      // Otherwise `item.type` is `WildcardTag`, which matches.\n    }\n  }\n\n  return true\n}\n","/**\n * @import {AstRule} from 'css-selector-parser'\n * @import {Element, Nodes, Parents} from 'hast'\n * @import {State} from './index.js'\n */\n\n/**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined, tree)\n  }\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(state, nest, node, tree) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<AstRule> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(\n        state,\n        forSibling,\n        node.children[index],\n        index,\n        node,\n        tree\n      )\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const rule = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && rule.nestedRule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(rule, node, index, parent, state)) {\n      const nest = rule.nestedRule\n\n      // Are there more?\n      if (nest) {\n        /** @type {keyof Nest} */\n        const label =\n          nest.combinator === '+'\n            ? 'adjacentSibling'\n            : nest.combinator === '~'\n              ? 'generalSibling'\n              : nest.combinator === '>'\n                ? 'directChild'\n                : 'descendant'\n        add(nestResult, label, nest)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (rule.combinator === undefined) {\n      add(nestResult, 'descendant', rule)\n    }\n    // Adjacent.\n    else if (rule.combinator === '~') {\n      add(nestResult, 'generalSibling', rule)\n    }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n      ? left\n      : right && right.length > 0\n        ? right\n        : empty\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */\nfunction one(state, currentRules, node, index, parent, tree) {\n  /** @type {Nest} */\n  let nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    let rootRules = state.rootQuery.rules\n\n    // Remove direct child rules if this is the root.\n    // This only happens for a `:has()` rule, which can be like\n    // `a:has(> b)`.\n    if (parent && parent !== tree) {\n      rootRules = state.rootQuery.rules.filter(\n        (d) =>\n          d.combinator === undefined ||\n          (d.combinator === '>' && parent === tree)\n      )\n    }\n\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, rootRules),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node, tree)\n  }\n\n  exit()\n\n  return nestResult\n}\n","/**\n * @import {AstSelector} from 'css-selector-parser'\n * @import {Element, Nodes, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n */\n\n/**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */\n\nimport {html, svg} from 'property-information'\nimport {parse} from './parse.js'\nimport {walk} from './walk.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  return state.results[0]\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */\nfunction createState(selector, tree, space) {\n  return {\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    elementCount: undefined,\n    elementIndex: undefined,\n    found: false,\n    language: undefined,\n    one: false,\n    // State of the query.\n    results: [],\n    rootQuery: parse(selector),\n    schema: space === 'svg' ? svg : html,\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    shallow: false,\n    typeIndex: undefined,\n    typeCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index?: number, parent?: Root | Element): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import type { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport type { RehypeAttrsOptions } from './index.js';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import type { Plugin } from 'unified';\nimport type { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @import {Element, Nodes, RootContent, Root} from 'hast'\n * @import {Info, Schema} from 'property-information'\n */\n\n/**\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n */\n\n/**\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n */\n\n/**\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n */\n\n/**\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\n/**\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n */\n\n/**\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n */\n\n/**\n * @typedef {Record<string, PropertyValue | Style>} Properties\n *   Acceptable value for element properties.\n */\n\n/**\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n */\n\n/**\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n */\n\n/**\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n */\n\nimport {parse as parseCommas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as parseSpaces} from 'space-separated-tokens'\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {ReadonlyArray<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive ? createAdjustMap(caseSensitive) : undefined\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    /** @type {Result} */\n    let node\n\n    if (selector === null || selector === undefined) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      const lower = node.tagName.toLowerCase()\n      const adjusted = adjust ? adjust.get(lower) : undefined\n      node.tagName = adjusted || lower\n\n      // Handle properties.\n      if (isChild(properties)) {\n        children.unshift(properties)\n      } else {\n        for (const [key, value] of Object.entries(properties)) {\n          addProperty(schema, node.properties, key, value)\n        }\n      }\n    }\n\n    // Handle children.\n    for (const child of children) {\n      addChild(node.children, child)\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @returns {value is Child}\n *   Whether `value` is definitely a child.\n */\nfunction isChild(value) {\n  // Never properties if not an object.\n  if (value === null || typeof value !== 'object' || Array.isArray(value)) {\n    return true\n  }\n\n  // Never node without `type`; that’s the main discriminator.\n  if (typeof value.type !== 'string') return false\n\n  // Slower check: never property value if object or array with\n  // non-number/strings.\n  const record = /** @type {Record<string, unknown>} */ (value)\n  const keys = Object.keys(value)\n\n  for (const key of keys) {\n    const value = record[key]\n\n    if (value && typeof value === 'object') {\n      if (!Array.isArray(value)) return true\n\n      const list = /** @type {ReadonlyArray<unknown>} */ (value)\n\n      for (const item of list) {\n        if (typeof item !== 'number' && typeof item !== 'string') {\n          return true\n        }\n      }\n    }\n  }\n\n  // Also see empty `children` as a node.\n  if ('children' in value && Array.isArray(value.children)) {\n    return true\n  }\n\n  // Default to properties, someone can always pass an empty object,\n  // put `data: {}` in a node,\n  // or wrap it in an array.\n  return false\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === null || value === undefined) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = parseSpaces(value)\n    } else if (info.commaSeparated) {\n      result = parseCommas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = parseSpaces(parseCommas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = [...value]\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    for (const item of result) {\n      // Assume no booleans in array.\n      finalResult.push(\n        /** @type {number | string} */ (\n          parsePrimitive(info, info.property, item)\n        )\n      )\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    result = properties.className.concat(\n      /** @type {Array<number | string> | number | string} */ (result)\n    )\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'number' || typeof value === 'string') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    for (const child of value) {\n      addChild(nodes, child)\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} styles\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(styles) {\n  /** @type {Array<string>} */\n  const result = []\n\n  for (const [key, value] of Object.entries(styles)) {\n    result.push([key, value].join(': '))\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {ReadonlyArray<string>} values\n *   List of properly cased keys.\n * @returns {Map<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Map<string, string>} */\n  const result = new Map()\n\n  for (const value of values) {\n    result.set(value.toLowerCase(), value)\n  }\n\n  return result\n}\n","/**\n * List of case-sensitive SVG tag names.\n *\n * @type {ReadonlyArray<string>}\n */\nexport const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @import {VFile, Value} from 'vfile'\n * @import {Location} from 'vfile-location'\n */\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  return {toOffset, toPoint}\n\n  /** @type {Location['toPoint']} */\n  function toPoint(offset) {\n    if (typeof offset === 'number' && offset > -1 && offset <= value.length) {\n      let index = 0\n\n      while (true) {\n        let end = indices[index]\n\n        if (end === undefined) {\n          const eol = next(value, indices[index - 1])\n          end = eol === -1 ? value.length + 1 : eol + 1\n          indices[index] = end\n        }\n\n        if (end > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n\n        index++\n      }\n    }\n  }\n\n  /** @type {Location['toOffset']} */\n  function toOffset(point) {\n    if (\n      point &&\n      typeof point.line === 'number' &&\n      typeof point.column === 'number' &&\n      !Number.isNaN(point.line) &&\n      !Number.isNaN(point.column)\n    ) {\n      while (indices.length < point.line) {\n        const from = indices[indices.length - 1]\n        const eol = next(value, from)\n        const end = eol === -1 ? value.length + 1 : eol + 1\n        if (from === end) break\n        indices.push(end)\n      }\n\n      const offset =\n        (point.line > 1 ? indices[point.line - 2] : 0) + point.column - 1\n      // The given `column` could not exist on this line.\n      if (offset < indices[point.line - 1]) return offset\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @param {number} from\n */\nfunction next(value, from) {\n  const cr = value.indexOf('\\r', from)\n  const lf = value.indexOf('\\n', from)\n  if (lf === -1) return cr\n  if (cr === -1 || cr + 1 === lf) return lf\n  return cr < lf ? cr : lf\n}\n","/**\n * @import {ElementData, Element, Nodes, RootContent, Root} from 'hast'\n * @import {DefaultTreeAdapterMap, Token} from 'parse5'\n * @import {Schema} from 'property-information'\n * @import {Point, Position} from 'unist'\n * @import {VFile} from 'vfile'\n * @import {Options} from 'hast-util-from-parse5'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {DefaultTreeAdapterMap['node']} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {DefaultTreeAdapterMap['commentNode']} */ (\n        node\n      )\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference =\n        /** @type {DefaultTreeAdapterMap['document'] | DefaultTreeAdapterMap['documentFragment']} */ (\n          node\n        )\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const document = String(state.file)\n        const loc = location(document)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(document.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {DefaultTreeAdapterMap['documentType']} */ (\n        node\n      )\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {DefaultTreeAdapterMap['textNode']} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {DefaultTreeAdapterMap['element']} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<DefaultTreeAdapterMap['node']>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['element']} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const properties = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      properties[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const x = state.schema.space === 'svg' ? s : h\n  const result = x(node.tagName, properties, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {DefaultTreeAdapterMap['template']} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {DefaultTreeAdapterMap['node']} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {Token.ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const properties = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            properties[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = properties\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {Token.Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","// Generated using scripts/write-decode-map.ts\n\nexport const htmlDecodeTree: Uint16Array = /* #__PURE__ */ new Uint16Array(\n    // prettier-ignore\n    /* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n        .split(\"\")\n        .map((c) => c.charCodeAt(0)),\n);\n","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\n\nconst decodeMap = new Map([\n    [0, 65_533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint: (...codePoints: number[]) => string =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n    String.fromCodePoint ??\n    function (codePoint: number): string {\n        let output = \"\";\n\n        if (codePoint > 0xff_ff) {\n            codePoint -= 0x1_00_00;\n            output += String.fromCharCode(\n                ((codePoint >>> 10) & 0x3_ff) | 0xd8_00,\n            );\n            codePoint = 0xdc_00 | (codePoint & 0x3_ff);\n        }\n\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\n\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint: number): number {\n    if (\n        (codePoint >= 0xd8_00 && codePoint <= 0xdf_ff) ||\n        codePoint > 0x10_ff_ff\n    ) {\n        return 0xff_fd;\n    }\n\n    return decodeMap.get(codePoint) ?? codePoint;\n}\n\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport function decodeCodePoint(codePoint: number): string {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n","import { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nimport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nimport { replaceCodePoint, fromCodePoint } from \"./decode-codepoint.js\";\n\nconst enum CharCodes {\n    NUM = 35, // \"#\"\n    SEMI = 59, // \";\"\n    EQUALS = 61, // \"=\"\n    ZERO = 48, // \"0\"\n    NINE = 57, // \"9\"\n    LOWER_A = 97, // \"a\"\n    LOWER_F = 102, // \"f\"\n    LOWER_X = 120, // \"x\"\n    LOWER_Z = 122, // \"z\"\n    UPPER_A = 65, // \"A\"\n    UPPER_F = 70, // \"F\"\n    UPPER_Z = 90, // \"Z\"\n}\n\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b10_0000;\n\nexport enum BinTrieFlags {\n    VALUE_LENGTH = 0b1100_0000_0000_0000,\n    BRANCH_LENGTH = 0b0011_1111_1000_0000,\n    JUMP_TABLE = 0b0000_0000_0111_1111,\n}\n\nfunction isNumber(code: number): boolean {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\n\nfunction isHexadecimalCharacter(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F)\n    );\n}\n\nfunction isAsciiAlphaNumeric(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code)\n    );\n}\n\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code: number): boolean {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\n\nconst enum EntityDecoderState {\n    EntityStart,\n    NumericStart,\n    NumericDecimal,\n    NumericHex,\n    NamedEntity,\n}\n\nexport enum DecodingMode {\n    /** Entities in text nodes that can end with any character. */\n    Legacy = 0,\n    /** Only allow entities terminated with a semicolon. */\n    Strict = 1,\n    /** Entities in attributes have limitations on ending characters. */\n    Attribute = 2,\n}\n\n/**\n * Producers for character reference errors as defined in the HTML spec.\n */\nexport interface EntityErrorProducer {\n    missingSemicolonAfterCharacterReference(): void;\n    absenceOfDigitsInNumericCharacterReference(\n        consumedCharacters: number,\n    ): void;\n    validateNumericCharacterReference(code: number): void;\n}\n\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n        /** The tree used to decode entities. */\n        private readonly decodeTree: Uint16Array,\n        /**\n         * The function that is called when a codepoint is decoded.\n         *\n         * For multi-byte named entities, this will be called multiple times,\n         * with the second codepoint, and the same `consumed` value.\n         *\n         * @param codepoint The decoded codepoint.\n         * @param consumed The number of bytes consumed by the decoder.\n         */\n        private readonly emitCodePoint: (cp: number, consumed: number) => void,\n        /** An object that is used to produce errors. */\n        private readonly errors?: EntityErrorProducer | undefined,\n    ) {}\n\n    /** The current state of the decoder. */\n    private state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    private consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    private result = 0;\n\n    /** The current index in the decode tree. */\n    private treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    private excess = 1;\n    /** The mode in which the decoder is operating. */\n    private decodeMode = DecodingMode.Strict;\n\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode: DecodingMode): void {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input: string, offset: number): number {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericStart(input: string, offset: number): number {\n        if (offset >= input.length) {\n            return -1;\n        }\n\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n\n    private addToNumericResult(\n        input: string,\n        start: number,\n        end: number,\n        base: number,\n    ): void {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericHex(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 16);\n\n        return -1;\n    }\n\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericDecimal(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 10);\n\n        return -1;\n    }\n\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    private emitNumericEntity(lastCp: number, expectedLength: number): number {\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            this.errors?.absenceOfDigitsInNumericCharacterReference(\n                this.consumed,\n            );\n            return 0;\n        }\n\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        } else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n\n        return this.consumed;\n    }\n\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNamedEntity(input: string, offset: number): number {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n\n            this.treeIndex = determineBranch(\n                decodeTree,\n                current,\n                this.treeIndex + Math.max(1, valueLength),\n                char,\n            );\n\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(\n                        this.treeIndex,\n                        valueLength,\n                        this.consumed + this.excess,\n                    );\n                }\n\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNotTerminatedNamedEntity(): number {\n        const { result, decodeTree } = this;\n\n        const valueLength =\n            (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        this.errors?.missingSemicolonAfterCharacterReference();\n\n        return this.consumed;\n    }\n\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNamedEntityData(\n        result: number,\n        valueLength: number,\n        consumed: number,\n    ): number {\n        const { decodeTree } = this;\n\n        this.emitCodePoint(\n            valueLength === 1\n                ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n                : decodeTree[result + 1],\n            consumed,\n        );\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n\n        return consumed;\n    }\n\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end(): number {\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                this.errors?.absenceOfDigitsInNumericCharacterReference(\n                    this.consumed,\n                );\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree: Uint16Array) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(\n        decodeTree,\n        (data) => (returnValue += fromCodePoint(data)),\n    );\n\n    return function decodeWithTrie(\n        input: string,\n        decodeMode: DecodingMode,\n    ): string {\n        let lastIndex = 0;\n        let offset = 0;\n\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n\n            decoder.startEntity(decodeMode);\n\n            const length = decoder.write(\n                input,\n                // Skip the \"&\"\n                offset + 1,\n            );\n\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n\n        const result = returnValue + input.slice(lastIndex);\n\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n\n        return result;\n    };\n}\n\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(\n    decodeTree: Uint16Array,\n    current: number,\n    nodeIndex: number,\n    char: number,\n): number {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n\n    // Case 3: Multiple branches encoded in dictionary\n\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n\n        if (midValue < char) {\n            lo = mid + 1;\n        } else if (midValue > char) {\n            hi = mid - 1;\n        } else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\nconst htmlDecoder = /* #__PURE__ */ getDecoder(htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(xmlDecodeTree);\n\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(\n    htmlString: string,\n    mode: DecodingMode = DecodingMode.Legacy,\n): string {\n    return htmlDecoder(htmlString, mode);\n}\n\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(htmlAttribute: string): string {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(htmlString: string): string {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(xmlString: string): string {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nexport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\n\nexport {\n    decodeCodePoint,\n    replaceCodePoint,\n    fromCodePoint,\n} from \"./decode-codepoint.js\";\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","export const xmlReplacer: RegExp = /[\"$&'<>\\u0080-\\uFFFF]/g;\n\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint: (c: string, index: number) => number =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    String.prototype.codePointAt == null\n        ? (c: string, index: number): number =>\n              (c.charCodeAt(index) & 0xfc_00) === 0xd8_00\n                  ? (c.charCodeAt(index) - 0xd8_00) * 0x4_00 +\n                    c.charCodeAt(index + 1) -\n                    0xdc_00 +\n                    0x1_00_00\n                  : c.charCodeAt(index)\n        : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          (input: string, index: number): number => input.codePointAt(index)!;\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(input: string): string {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n\n    while ((match = xmlReplacer.exec(input)) !== null) {\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(\n                input,\n                index,\n            ).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number(\n                (char & 0xfc_00) === 0xd8_00,\n            );\n        } else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n\n    return returnValue + input.substr(lastIndex);\n}\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape: typeof encodeXML = encodeXML;\n\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(\n    regex: RegExp,\n    map: Map<number, string>,\n): (data: string) => string {\n    return function escape(data: string): string {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n\n        while ((match = regex.exec(data))) {\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0))!;\n\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n\n        return result + data.substring(lastIndex);\n    };\n}\n\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[\"&'<>]/g,\n    xmlCodeMap,\n);\n\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute: (data: string) => string =\n    /* #__PURE__ */ getEscaper(\n        /[\"&\\u00A0]/g,\n        new Map([\n            [34, \"&quot;\"],\n            [38, \"&amp;\"],\n            [160, \"&nbsp;\"],\n        ]),\n    );\n\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[&<>\\u00A0]/g,\n    new Map([\n        [38, \"&amp;\"],\n        [60, \"&lt;\"],\n        [62, \"&gt;\"],\n        [160, \"&nbsp;\"],\n    ]),\n);\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @import {Options} from 'hast-util-raw'\n * @import {Comment, Doctype, Element, Nodes, RootContent, Root, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {DefaultTreeAdapterMap, ParserOptions} from 'parse5'\n * @import {Point} from 'unist'\n */\n\n/**\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n */\n\n/**\n * @typedef Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n * @property {'comment'} type\n *   Node type.\n * @property {{stitch: Nodes}} value\n *   Replacement value.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst gfmTagfilterExpression =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|textarea|title|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions<DefaultTreeAdapterMap>} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  // Allow `DATA` through `PLAINTEXT`,\n  // but when hanging in a tag for example,\n  // switch back to `DATA`.\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  if (state.parser.tokenizer.state > 4) {\n    state.parser.tokenizer.state = 0\n  }\n\n  /** @type {Token.CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {Token.DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {Token.CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n\n  state.parser.tokenizer.write(\n    state.options.tagfilter\n      ? node.value.replace(gfmTagfilterExpression, '&lt;$1$2')\n      : node.value,\n    false\n  )\n  // @ts-expect-error: private.\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  // To do: remove next major.\n  /* c8 ignore next 12 -- removed in <https://github.com/inikulin/parse5/pull/897> */\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    // @ts-expect-error: removed.\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {Token.CharacterToken} */\n  // @ts-expect-error: private.\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Token.Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    // Always element.\n    /* c8 ignore next */\n    attrs: 'attrs' in result ? result.attrs : [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  const tagName = node.tagName.toLowerCase()\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {Token.TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName,\n    tagID: html.getTagID(tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<noframes>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n    // Note: `<plaintext>` not needed, as it’s the last element.\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName.toLowerCase() === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Token.Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Token.Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, ElementContent, Nodes, Parents, Root} from 'hast'\n * @import {ComponentProps, ElementType, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in Extract<ElementType, string>]?: ElementType<ComponentProps<Key> & ExtraProps>\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    // @ts-expect-error\n    // React components are allowed to return numbers,\n    // but not according to the types in hast-util-to-jsx-runtime\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import { visit } from 'unist-util-visit';\nimport type { Plugin } from 'unified';\nimport type { Root, PhrasingContent } from \"mdast\";\n\nconst alertRegex = /^\\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\\]/i;\nconst alertLegacyRegex = /^\\[!(NOTE|TIP|IMPORTANT|WARNING|CAUTION)(\\/.*)?\\]/i;\n\ntype Option = {\n  /**\n   * Use the legacy title format, which includes a slash and a title after the alert type.\n   * \n   * Enabling legacyTitle allows modifying the title, but this is not GitHub standard.\n   */\n  legacyTitle?: boolean;\n  /**\n   * The tag name of the alert container. default is `div`.\n   * or you can use `blockquote` for semantic HTML.\n   */\n  tagName?: string;\n}\n\n/**\n * Alerts are a Markdown extension based on the blockquote syntax that you can use to emphasize critical information.\n * On GitHub, they are displayed with distinctive colors and icons to indicate the significance of the content.\n * https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#alerts\n */\nexport const remarkAlert: Plugin<[Option?], Root> = ({ legacyTitle = false, tagName = \"div\" } = {}) => {\n  return (tree) => {\n    visit(tree, \"blockquote\", (node, index, parent) => {\n      let alertType = '';\n      let title = '';\n      let isNext = true;\n      let child = node.children.map((item) => {\n        if (isNext && item.type === \"paragraph\") {\n          const firstNode = item.children[0];\n          const text = firstNode.type === 'text' ? firstNode.value : '';\n          const reg = legacyTitle ? alertLegacyRegex : alertRegex;\n          const match = text.match(reg);\n          if (match) {\n            isNext = false;\n            alertType = match[1].toLocaleLowerCase();\n            title = legacyTitle ? match[2] || alertType.toLocaleUpperCase() : alertType.toLocaleUpperCase();\n            if (text.includes('\\n')) {\n              item.children[0] = {\n                type: 'text',\n                value: text.replace(reg, '').replace(/^\\n+/, ''),\n              };\n            }\n\n            if (!text.includes('\\n')) {\n              const itemChild: Array<PhrasingContent> = [];\n              item.children.forEach((item, idx) => {\n                if (idx == 0) return;\n                if (idx == 1 && item.type === 'break') {\n                  return;\n                }\n                itemChild.push(item);\n              });\n              item.children = [...itemChild];\n            }\n          }\n        }\n        return item;\n      })\n\n      if (!!alertType) {\n        node.data = {\n          hName: tagName,\n          hProperties: {\n            class: `markdown-alert markdown-alert-${alertType}`,\n            dir: 'auto'\n          },\n        }\n        child.unshift({\n          type: \"paragraph\",\n          children: [\n            getAlertIcon(alertType as IconType),\n            {\n              type: \"text\",\n              value: title.replace(/^\\//, ''),\n            }\n          ],\n          data: {\n            hProperties: {\n              class: \"markdown-alert-title\",\n              dir: \"auto\"\n            }\n          }\n        })\n      }\n      node.children = [...child];\n    });\n  };\n};\n\nexport function getAlertIcon(type: IconType): PhrasingContent {\n  let pathD = pathData[type] ?? '';\n  return {\n    type: \"emphasis\",\n    data: {\n      hName: \"svg\",\n      hProperties: {\n        class: \"octicon\",\n        viewBox: '0 0 16 16',\n        width: '16',\n        height: '16',\n        ariaHidden: 'true',\n      },\n    },\n    children: [\n      {\n        type: \"emphasis\",\n        data: {\n          hName: \"path\",\n          hProperties: {\n            d: pathD\n          }\n        },\n        children: []\n      }\n    ]\n  }\n}\n\ntype IconType = 'note' | 'tip' | 'important' | 'warning' | 'caution';\n\nconst pathData: Record<IconType, string> = {\n  note: 'M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z',\n  tip: 'M8 1.5c-2.363 0-4 1.69-4 3.75 0 .984.424 1.625.984 2.304l.214.253c.223.264.47.556.673.848.284.411.537.896.621 1.49a.75.75 0 0 1-1.484.211c-.04-.282-.163-.547-.37-.847a8.456 8.456 0 0 0-.542-.68c-.084-.1-.173-.205-.268-.32C3.201 7.75 2.5 6.766 2.5 5.25 2.5 2.31 4.863 0 8 0s5.5 2.31 5.5 5.25c0 1.516-.701 2.5-1.328 3.259-.095.115-.184.22-.268.319-.207.245-.383.453-.541.681-.208.3-.33.565-.37.847a.751.751 0 0 1-1.485-.212c.084-.593.337-1.078.621-1.489.203-.292.45-.584.673-.848.075-.088.147-.173.213-.253.561-.679.985-1.32.985-2.304 0-2.06-1.637-3.75-4-3.75ZM5.75 12h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM6 15.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75Z',\n  important:\n    'M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v9.5A1.75 1.75 0 0 1 14.25 13H8.06l-2.573 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25Zm7 2.25v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 9a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z',\n  warning:\n    'M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z',\n  caution:\n    'M4.47.22A.749.749 0 0 1 5 0h6c.199 0 .389.079.53.22l4.25 4.25c.141.14.22.331.22.53v6a.749.749 0 0 1-.22.53l-4.25 4.25A.749.749 0 0 1 11 16H5a.749.749 0 0 1-.53-.22L.22 11.53A.749.749 0 0 1 0 11V5c0-.199.079-.389.22-.53Zm.84 1.28L1.5 5.31v5.38l3.81 3.81h5.38l3.81-3.81V5.31L10.69 1.5ZM8 4a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 4Zm0 8a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z',\n};\n","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useEffect } from 'react';\nfunction getParentElement(target) {\n  if (!target) return null;\n  var dom = target;\n  if (dom.dataset.code && dom.classList.contains('copied')) {\n    return dom;\n  }\n  if (dom.parentElement) {\n    return getParentElement(dom.parentElement);\n  }\n  return null;\n}\nexport function useCopied(container) {\n  var handle = event => {\n    var target = getParentElement(event.target);\n    if (!target) return;\n    target.classList.add('active');\n    copyTextToClipboard(target.dataset.code, function () {\n      setTimeout(() => {\n        target.classList.remove('active');\n      }, 2000);\n    });\n  };\n  useEffect(() => {\n    var _container$current, _container$current2;\n    (_container$current = container.current) == null || _container$current.removeEventListener('click', handle, false);\n    (_container$current2 = container.current) == null || _container$current2.addEventListener('click', handle, false);\n    return () => {\n      var _container$current3;\n      (_container$current3 = container.current) == null || _container$current3.removeEventListener('click', handle, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [container]);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"prefixCls\", \"className\", \"source\", \"style\", \"disableCopy\", \"skipHtml\", \"onScroll\", \"onMouseOver\", \"pluginsFilter\", \"rehypeRewrite\", \"wrapperElement\", \"warpperElement\", \"urlTransform\"];\nimport React, { useImperativeHandle } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport raw from 'rehype-raw';\nimport { remarkAlert } from 'remark-github-blockquote-alert';\nimport { useCopied } from \"./plugins/useCopied.js\";\nimport \"./styles/markdown.css\";\n\n/**\n * https://github.com/uiwjs/react-md-editor/issues/607\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar defaultUrlTransform = url => url;\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n      prefixCls = 'wmde-markdown wmde-markdown-color',\n      className,\n      source,\n      style,\n      disableCopy = false,\n      skipHtml = true,\n      onScroll,\n      onMouseOver,\n      pluginsFilter,\n      wrapperElement = {},\n      warpperElement = {},\n      urlTransform\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var mdp = React.useRef(null);\n  useImperativeHandle(ref, () => _extends({}, props, {\n    mdp\n  }), [mdp, props]);\n  var cls = (prefixCls || '') + \" \" + (className || '');\n  useCopied(mdp);\n  var rehypePlugins = [...(other.rehypePlugins || [])];\n  var customProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    }\n  };\n  if (skipHtml) {\n    rehypePlugins.push(raw);\n  }\n  var remarkPlugins = [remarkAlert, ...(other.remarkPlugins || []), gfm];\n  var wrapperProps = _extends({}, warpperElement, wrapperElement);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: mdp,\n    onScroll: onScroll,\n    onMouseOver: onMouseOver\n  }, wrapperProps, {\n    className: cls,\n    style: style,\n    children: /*#__PURE__*/_jsx(ReactMarkdown, _extends({}, customProps, other, {\n      skipHtml: skipHtml,\n      urlTransform: urlTransform || defaultUrlTransform,\n      rehypePlugins: pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins,\n      remarkPlugins: pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins,\n      children: source || ''\n    }))\n  }));\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport { visit } from 'unist-util-visit';\nexport var reservedMeta = function reservedMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = _extends({}, node.properties, {\n          'data-meta': String(node.data.meta)\n        });\n      }\n    });\n  };\n};","import { visit } from 'unist-util-visit';\nexport var retrieveMeta = function retrieveMeta(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return tree => {\n    visit(tree, node => {\n      if (node.type === 'element' && node.tagName === 'code' && node.properties && node.properties['dataMeta']) {\n        if (!node.data) {\n          node.data = {};\n        }\n        var metaString = node.properties['dataMeta'];\n        if (typeof metaString === 'string') {\n          node.data.meta = metaString;\n        }\n        delete node.properties['dataMeta'];\n      }\n    });\n  };\n};","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Nodes} node\n *   Node to check.\n * @returns {number | undefined}\n *   Rank of the heading or `undefined` if not a heading.\n */\nexport function headingRank(node) {\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */\n    ? code - 48 /* `0` */\n    : undefined\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\n *   Behavior.\n *\n * @callback Build\n *   Generate content.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Content.\n *\n * @callback BuildProperties\n *   Generate properties.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Properties}\n *   Properties.\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior | null | undefined} [behavior='prepend']\n *   How to create links (default: `'prepend'`).\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\n *   otherwise `<span class=\"icon icon-link\"></span>`);\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\n *   existing content, otherwise the content is added after existing content.\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\n *   `'before'` (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\n *   Extra properties to set on the heading (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\n *   Extra properties to set on the link when injecting (default:\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\n *   `undefined`).\n * @property {Test | null | undefined} [test]\n *   Extra test for which headings are linked (optional).\n */\n\n/**\n * @template T\n *   Kind.\n * @typedef {(\n *   T extends Record<any, any>\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\n *     : T\n * )} Cloneable\n *   Deep clone.\n *\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add links from headings back to themselves.\n *\n * ###### Notes\n *\n * This plugin only applies to headings with `id`s.\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\n *\n * Several behaviors are supported:\n *\n * *   `'prepend'` (default) — inject link before the heading text\n * *   `'append'` — inject link after the heading text\n * *   `'wrap'` — wrap the whole heading text with the link\n * *   `'before'` — insert link before the heading\n * *   `'after'` — insert link after the heading\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeAutolinkHeadings(options) {\n  const settings = options || emptyOptions\n  let properties = settings.properties\n  const headingOroperties = settings.headingProperties\n  const behavior = settings.behavior || 'prepend'\n  const content = settings.content\n  const group = settings.group\n  const is = convertElement(settings.test)\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  let method\n\n  if (behavior === 'after' || behavior === 'before') {\n    method = around\n  } else if (behavior === 'wrap') {\n    method = wrap\n  } else {\n    method = inject\n\n    if (!properties) {\n      properties = {ariaHidden: 'true', tabIndex: -1}\n    }\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\n        Object.assign(node.properties, toProperties(headingOroperties, node))\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function inject(node) {\n    const children = toChildren(content || contentDefaults, node)\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, toProperties(properties, node), children)\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function around(node, index, parent) {\n    /* c8 ignore next -- uncommon */\n    if (typeof index !== 'number' || !parent) return\n\n    const children = toChildren(content || contentDefaults, node)\n    const link = create(node, toProperties(properties, node), children)\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function wrap(node) {\n    /** @type {Array<ElementContent>} */\n    let before = node.children\n    /** @type {Array<ElementContent> | ElementContent} */\n    let after = []\n\n    if (typeof content === 'function') {\n      before = []\n      after = content(node)\n    } else if (content) {\n      after = clone(content)\n    }\n\n    node.children = [\n      create(\n        node,\n        toProperties(properties, node),\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\n      )\n    ]\n\n    return [SKIP]\n  }\n}\n\n/**\n * Deep clone.\n *\n * @template T\n *   Kind.\n * @param {T} thing\n *   Thing to clone.\n * @returns {Cloneable<T>}\n *   Cloned thing.\n */\nfunction clone(thing) {\n  // Cast because it’s mutable now.\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\n}\n\n/**\n * Create an `a`.\n *\n * @param {Readonly<Element>} node\n *   Related heading.\n * @param {Properties | undefined} properties\n *   Properties to set on the link.\n * @param {Array<ElementContent>} children\n *   Content.\n * @returns {Element}\n *   Link.\n */\nfunction create(node, properties, children) {\n  return {\n    type: 'element',\n    tagName: 'a',\n    properties: {...properties, href: '#' + node.properties.id},\n    children\n  }\n}\n\n/**\n * Turn into children.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent>}\n *   Children.\n */\nfunction toChildren(value, node) {\n  const result = toNode(value, node)\n  return Array.isArray(result) ? result : [result]\n}\n\n/**\n * Turn into a node.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Node.\n */\nfunction toNode(value, node) {\n  if (typeof value === 'function') return value(node)\n  return clone(value)\n}\n\n/**\n * Turn into properties.\n *\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\n *   Properties.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Properties}\n *   Properties.\n */\nfunction toProperties(value, node) {\n  if (typeof value === 'function') return value(node)\n  return value ? clone(value) : {}\n}\n","import type { Plugin, Pluggable } from 'unified';\nimport type { Root, RootContent, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\n\n/**\n * Raw string of HTML embedded into HTML AST.\n */\nexport interface Raw extends Literal {\n  /**\n   * Node type.\n   */\n  type: 'raw'\n}\n\n// Register nodes in content.\ndeclare module 'hast' {\n  interface RootContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n  interface ElementContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n}\n\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","export var octiconLink = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true'\n  },\n  children: [{\n    type: 'element',\n    tagName: 'path',\n    children: [],\n    properties: {\n      fillRule: 'evenodd',\n      d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z'\n    }\n  }]\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeIgnore from 'rehype-ignore';\nimport { getCodeString } from 'rehype-rewrite';\nimport { octiconLink } from \"./nodes/octiconLink.js\";\nimport { copyElement } from \"./nodes/copy.js\";\nexport var rehypeRewriteHandle = (disableCopy, rewrite) => (node, index, parent) => {\n  if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    var child = node.children && node.children[0];\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = _extends({\n        class: 'anchor'\n      }, child.properties);\n      child.children = [octiconLink];\n    }\n  }\n  if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n    var code = getCodeString(node.children);\n    node.children.push(copyElement(code));\n  }\n  rewrite && rewrite(node, index === null ? undefined : index, parent === null ? undefined : parent);\n};\nexport var defaultRehypePlugins = [slug, headings, rehypeIgnore];","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite from 'rehype-rewrite';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeRaw from 'rehype-raw';\nimport MarkdownPreview from \"./preview.js\";\nimport { reservedMeta } from \"./plugins/reservedMeta.js\";\nimport { retrieveMeta } from \"./plugins/retrieveMeta.js\";\nimport { rehypeRewriteHandle, defaultRehypePlugins } from \"./rehypePlugins.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from \"./Props.js\";\nexport default /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _props$disableCopy;\n  var rehypePlugins = [reservedMeta, rehypeRaw, retrieveMeta, ...defaultRehypePlugins, [rehypeRewrite, {\n    rewrite: rehypeRewriteHandle((_props$disableCopy = props.disableCopy) != null ? _props$disableCopy : false, props.rehypeRewrite)\n  }], [rehypeAttrs, {\n    properties: 'attr'\n  }], ...(props.rehypePlugins || []), [rehypePrism, {\n    ignoreMissing: true\n  }]];\n  return /*#__PURE__*/_jsx(MarkdownPreview, _extends({}, props, {\n    rehypePlugins: rehypePlugins,\n    ref: ref\n  }));\n});","export function copyElement(str) {\n  if (str === void 0) {\n    str = '';\n  }\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      class: 'copied',\n      'data-code': str\n    },\n    children: [{\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-copy',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\n        },\n        children: []\n      }, {\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\n        },\n        children: []\n      }]\n    }, {\n      type: 'element',\n      tagName: 'svg',\n      properties: {\n        className: 'octicon-check',\n        ariaHidden: 'true',\n        viewBox: '0 0 16 16',\n        fill: 'currentColor',\n        height: 12,\n        width: 12\n      },\n      children: [{\n        type: 'element',\n        tagName: 'path',\n        properties: {\n          fillRule: 'evenodd',\n          d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z'\n        },\n        children: []\n      }]\n    }]\n  };\n}","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"names":["Info","constructor","property","attribute","this","prototype","booleanish","boolean","commaOrSpaceSeparated","commaSeparated","defined","mustUseProperty","number","overloadedBoolean","spaceSeparated","space","undefined","visit","tree","testOrVisitor","visitorOrReverse","maybeReverse","reverse","test","visitor","visitParents","node","parents","parent","length","index","children","indexOf","style_to_object_1","require","utilities_1","StyleToJS","style","options","output","default","value","camelCase","module","exports","convert","ok","castFactory","Array","isArray","tests","checks","any","_len","arguments","parameters","_key","apply","anyFactory","check","checkAsRecord","all","nodeAsRecord","key","propsFactory","type","typeFactory","Error","testFunction","Boolean","looksLikeANode","call","cap","dash","valid","find","schema","normal","normalize","Type","slice","charAt","rest","replace","camelcase","toUpperCase","dashes","kebab","DefinedInfo","$0","toLowerCase","minpath","basename","path","extname","TypeError","assertPath","seenNonSlash","start","end","codePointAt","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","code","join","joined","segments","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","href","protocol","auth","urlToPath","URL","error","url","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","isUint8Array","data","history","messages","map","stored","field","includes","assertNonEmpty","assertPart","stem","push","fail","causeOrReason","optionsOrParentOrPlace","origin","message","fatal","info","VFileMessage","name","file","toString","encoding","TextDecoder","decode","part","super","reason","legacyCause","place","ancestors","position","cause","ruleId","source","column","line","stringifyPosition","stack","actual","expected","note","Schema","merge","definitions","definition","Object","assign","create","properties","normals","entries","transform","attributes","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","_","caseSensitiveTransform","caseInsensitiveTransform","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","step","tabIndex","target","title","translate","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","values","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlns","xmlnsxlink","xmlnsXLink","xml","xmlBase","xmlLang","xmlSpace","htmlBase","svgBase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","lineno","updatePosition","lines","match","i","Position","whitespace","errorsList","msg","err","filename","silent","re","m","exec","comments","c","comment","pos","declaration","prop","val","ret","decl","decls","declarations","trueFunc","falseFunc","powers","increment","keys","types","mark","tab","trimLines","String","search","last","trimLine","startIndex","endIndex","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","capitalize","character","trimHyphen","concat","skipCamelCase","reactCompat","one","own","hasOwnProperty","cascadeRaw","cascade","preorder","parentNode","childIndex","next","o","e","registered","defaultLanguage","l","s","p","tagName","f","meta","metastring","h","t","u","done","n","g","v","split","highlight","ignoreMissing","reduce","a","b","w","Number","groups","N","j","showLineNumbers","some","substring","O","pop","emptyMulticharIndex","emptyRegularIndex","extendIndex","item","currentIndex","isLast","charIndex","chars","self","createMulticharIndex","items","_i","items_1","createRegularIndex","items_2","emptyPseudoSignatures","defaultPseudoSignature","optional","calculatePseudoSignature","setResultType","types_1","ofSelector","calculatePseudoSignatures","pseudoClassesToArgumentTypes","obj","_a","category","_b","_c","inverseCategories","pseudoClass","argumentTypes","__assign","emptyXmlOptions","defaultXmlOptions","wildcard","withPositive","positive","base","extension","mergeSection","mergeSchema","replaceValueIfSpecified","concatArray","mergeDefinitions","baseValue","extendSyntaxDefinition","withNoNegative","baseSyntax","modules","tag","ids","classNames","namespace","combinators","operators","caseSensitivityModifiers","unknownCaseSensitivityModifiers","pseudoClasses","unknown","pseudoElements","notation","migration","withMigration","NoArgument","css1SyntaxDefinition","css2SyntaxDefinition","selectors3SyntaxDefinition","Formula","Selector","selectors4SyntaxDefinition","FormulaOfSelector","cssModules","latest","latestSyntaxDefinition","cssSyntaxDefinitions","css1","css2","css3","progressive","pseudoLocationIndex","cssLevels_1","level","syntax","_d","names_1","name_1","_e","definitions_1","name_2","_f","_g","_h","names_2","name_3","_j","_k","_l","moduleName","moduleSyntax","_m","_o","_p","names_3","name_4","_q","definitions_2","name_5","_r","_s","_t","names_4","name_6","buildPseudoLocationIndex","isIdentStart","isIdent","isHex","whitespaceChars","quoteChars","digitsChars","errorPrefix","astMethods","generatorName","checkerName","props","entity","cssSelectorParse","substitutes","strict","syntaxDefinition","module_1","modules_1","module_2","param","tagNameEnabled","tagNameWildcardEnabled","idEnabled","classNamesEnabled","namespaceEnabled","namespaceWildcardEnabled","substitutesEnabled","combinatorsIndex","attributesEnabled","attributesOperatorsIndex","attributesCaseSensitivityModifiers","attributesAcceptUnknownCaseSensitivityModifiers","attributesCaseSensitivityModifiersEnabled","pseudoClassesEnabled","pseudoClassesDefinitions","pseudoClassesAcceptUnknown","pseudoElementsEnabled","pseudoElementsSingleColonNotationEnabled","pseudoElementsDoubleColonNotationEnabled","pseudoElementsDefinitions","pseudoElementsAcceptUnknown","chr","comparison","isTagStart","rewind","newPos","readAndNext","current","errorMessage","Math","assert","condition","assertNonEof","isEof","pass","matchMulticharIndex","matchMulticharIndexPos","subPos","subMatch","parseHex","hex","count","skipSingleWhitespace","fromCharCode","parseInt","parseString","quote","parseIdentifier","parsePseudoClassString","skipWhitespace","parseSelector","relative","parseRule","parseAttribute","attr","identifier","savedPos","caseSensitivityModifier","parseNumber","isNumberStart","parsePseudoArgument","pseudoName","signature","argument","ident","firstNumber","firstNumberMultiplier","sign","parseFormula","selector","parseTagName","parseTagNameWithNamespace","rule","combinator","idName","isDoubleColon","locations","pseudoElement","nestedRule","input","createParser","parse","rtlRange","ltrRange","rtl","RegExp","ltr","enterState","state","currentDirection","editableOrEditingHost","directionInferred","directionProperty","directionBidi","child","EXIT","SKIP","query","element","commas","spaces","normalizeValue","emptyClassNames","factory","tags","ranges","left","cast","right","matches","rightIndex","range","leftIndex","extendedFilter","hasProperty","Set","ZERO","charCodeAt","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","compile","idx","readSign","readNumber","has","fauxEsmNthCheck","pseudo","zwitch","handlers","blank","someChildren","_1","_2","_3","empty","enabled","assertDeep","elementIndex","typeIndex","childState","found","rootQuery","scopeElements","shallow","walk","elementCount","typeCount","not","cachedFunction","getCachedNthCheck","readWrite","root","invalid","unreachable","query_","_cachedFn","add","nest","combine","counts","get","set","currentRules","nestResult","adjacentSibling","descendant","directChild","generalSibling","exit","rootRules","selectorIndex","applySelectors","fromParent","fromSibling","total","Map","before","createState","getCodeString","forEach","rewrite","selectAll","nextChild","codeBlockParames","getCommentObject","_ref","getURLParameters","keyName","isNaN","propertiesHandle","defaultAttrs","attrs","rehyp","firstChild","prevChild","env","globalThis","deserialize","serialized","deserializer","$","out","unpair","arr","Date","flags","BigInt","Uint8Array","buffer","DataView","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","serializer","pair","entry","spread","valueOf","toJSON","toISOString","structuredClone","createH","defaultTagName","caseSensitive","adjust","createAdjustMap","unshift","previous","lastIndex","subvalue","lower","adjusted","record","isChild","addProperty","addChild","parseSpaces","parseCommas","parsePrimitive","styles","finalResult","nodes","cr","lf","proto","nodeName","reference","patch","quirksMode","childNodes","location","document","loc","indices","toOffset","point","eol","toPoint","namespaceURI","webNamespaces","sourceCodeLocation","startTag","endTag","createLocation","tail","verbose","opening","closing","startLine","startCol","endLine","endCol","endOffset","emptyOptions","parentSchema","currentSchema","createProperty","fragment","doctype","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","cpOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","token","attrName","htmlDecodeTree","Uint16Array","decodeMap","fromCodePoint","replaceCodePoint","codePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","nodeIndex","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midValue","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","DIGIT_0","DIGIT_9","isAsciiDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","getErrorForNumericCharacterReference","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","tn","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","createTextNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","MIME_TYPES","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","ns","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","rawTextStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","getEscaper","regex","pointEnd","pointStart","gfmTagfilterExpression","knownMdxNames","parseOptions","raw","head","documentMode","handleRaw","handle","stitches","resetTokenizer","settings","fromParse5","stitch","toParse5","Token","createParse5Location","clone","cloneWithoutChildren","fakeRoot","setPoint","tagfilter","node_","passThrough","extra","charRefCode","rehypeRaw","nameRe","nameReJsx","jsx","hastToReact","emptyMap","tableElements","tableCellElement","docs","toJsxRuntime","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","findComponentFromName","alignValue","createElementProps","createChildren","addNode","addChildren","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","styleObject","styleToJs","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","isIdentifierName","computed","toDash","urlAttributes","icon","includeImageAlt","includeHtml","chunkStart","SpliceBuffer","initial","RangeError","setCursor","stop","POSITIVE_INFINITY","deleteCount","trunc","removed","chunkedPush","pushMany","unshiftMany","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","context","startPosition","startPositions","_contentTypeTextTrailing","childEvents","gaps","stream","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","combineExtensions","extensions","syntaxExtension","hook","constructs","existing","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","factorySpace","effects","limit","enter","consume","tokenize","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","nok","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","_bufferIndex","_index","thematicBreak","marker","sequence","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","contentBefore","beforeContentChunk","contentChunk","characterReference","numeric","decodeNamedCharacterReference","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","resolveText","createTokenizer","initialize","columnStart","resolveAllConstructs","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startBufferIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","decodeNumericCharacterReference","characterEscapeOrReference","$1","$2","fromMarkdown","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","atHardBreak","inReference","referenceType","ancestor","decodeString","characterReferenceType","ordered","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","ceil","preprocess","combined","remarkParse","doc","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","revert","subtype","suffix","contents","listItemLoose","blockquote","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","unknownHandler","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","isPlainObject","getPrototypeOf","Symbol","toStringTag","iterator","CallableInstance","setPrototypeOf","Processor","Compiler","attachers","freezeIndex","frozen","transformers","trough","copy","attacher","extend","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","bail","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","hasOwn","mdastTree","colon","questionMark","numberSign","CONTINUE","defineProperty","subresult","grandparents","toResult","nodeAsParent","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","ccount","closingParens","splitUrl","atext","email","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","createTracker","move","subexit","safe","associationId","gfmFootnoteToMarkdown","firstLineBlank","indentLines","containerFlow","mapAll","mapExceptFirst","unsafe","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","listInScope","none","checkQuote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteCallString","gfmFootnoteCall","gfmFootnoteDefinitionLabelString","gfmFootnoteDefinition","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","alertRegex","alertLegacyRegex","remarkAlert","legacyTitle","alertType","isNext","firstNode","reg","toLocaleLowerCase","toLocaleUpperCase","itemChild","class","getAlertIcon","pathData","tip","important","warning","caution","getParentElement","dom","dataset","classList","parentElement","useCopied","container","copyTextToClipboard","setTimeout","useEffect","_container$current","_container$current2","removeEventListener","addEventListener","_container$current3","_excluded","React","ref","prefixCls","disableCopy","pluginsFilter","wrapperElement","warpperElement","other","_objectWithoutPropertiesLoose","mdp","useImperativeHandle","_extends","cls","customProps","wrapperProps","_jsx","ReactMarkdown","reservedMeta","retrieveMeta","metaString","headingRank","slugs","GithubSlugger","convertElement","tagNameFactory","looksLikeAnElement","contentDefaults","thing","toChildren","toNode","toProperties","openDelimiter","closeDelimiter","octiconLink","defaultRehypePlugins","reset","slug","headingOroperties","headingProperties","behavior","grouping","rehypeIgnore","_props$disableCopy","rehypeRewrite","rehypeAttrs","rehypePrism","MarkdownPreview","inline_style_parser_1","hasIterator","__importDefault"],"sourceRoot":""}