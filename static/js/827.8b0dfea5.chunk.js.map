{"version":3,"file":"static/js/827.8b0dfea5.chunk.js","mappings":"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","sources":["../../packages/json-format/src/index.tsx","../../node_modules/@lezer/json/dist/index.es.js","../../node_modules/@codemirror/lang-json/dist/index.js"],"sourcesContent":["import { useState, Fragment } from 'react';\nimport { Wrapper, StyledLayout, CopyButton, CodeEditor, Button, ErrorLayout } from '@wcj/tools-react-components';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { json } from '@codemirror/lang-json';\n\nconst sample = `{\"name\": \"@wcj/tools-react-components\", \"version\": \"1.0.1\", \"main\": \"./cjs/index.js\", \"module\": \"./esm/index.js\", \"scripts\": {\"build\": \"tsbb build\", \"watch\": \"tsbb watch\"}, \"keywords\": [], \"files\": [\"cjs\", \"esm\", \"src\"], \"author\": \"Kenny Wong <wowohoo@qq.com>\", \"license\": \"MIT\", \"dependencies\": {\"@uiw/react-codemirror\": \"^4.7.0\", \"@uiw/copy-to-clipboard\": \"^1.0.12\", \"styled-components\": \"^5.3.5\"}, \"devDependencies\": {\"@types/styled-components\": \"^5.1.25\"}, \"peerDependencies\": {\"react\": \">=16.14.0\", \"react-dom\": \">=16.14.0\"} }`;\n\nexport interface ResultProps {\n  title?: string;\n  className?: string;\n}\n\nconst GlobalStyle = createGlobalStyle`\n  [data-color-mode*='dark'], [data-color-mode*='dark'] body {\n    --color-border-text-case: #30363d;\n  }\n  [data-color-mode*='light'], [data-color-mode*='light'] body {\n    --color-border-text-case: #d0d7de;\n  }\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  padding-top: 16px;\n`;\n\nconst InputFile = styled.input`\n  width: 100%;\n  display: block;\n`;\n\nexport default function ImageToBase64() {\n  const [value, setValue] = useState('');\n  const [result, setResult] = useState('');\n  const [error, setError] = useState('');\n  const handleChange = (str: string) => {\n    if (str) {\n      try {\n        setValue(str);\n        const obj = JSON.parse(str);\n        setResult(JSON.stringify(obj, null, 3));\n        setError('');\n      } catch (error) {\n        let message = 'Unknown Error';\n        if (error instanceof Error) message = error.message;\n        setError(message);\n      }\n    }\n  };\n  const resultOrError = error || result;\n  return (\n    <Fragment>\n      <Wrapper>\n        <GlobalStyle />\n        <StyledLayout\n          title=\"Input JSON String\"\n          extra={\n            <Fragment>\n              {value && <CopyButton value={value} />}\n              <Button\n                onClick={() => {\n                  setValue(sample);\n                  handleChange(sample);\n                }}\n              >\n                Sample\n              </Button>\n            </Fragment>\n          }\n        >\n          <CodeEditor\n            value={value}\n            height=\"calc(100vh - 87px)\"\n            spellCheck={false}\n            extensions={[json()]}\n            onChange={handleChange}\n          />\n        </StyledLayout>\n        <StyledLayout title=\"Result\" extra={resultOrError && <CopyButton value={resultOrError} />}>\n          <CodeEditor value={result} height=\"calc(100vh - 87px)\" extensions={[json()]} readOnly />\n        </StyledLayout>\n      </Wrapper>\n      <ErrorLayout>{error}</ErrorLayout>\n    </Fragment>\n  );\n}\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"âš  JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n"],"names":["sample","GlobalStyle","createGlobalStyle","styled","_templateObject2","_templateObject3","ImageToBase64","useState","value","setValue","result","setResult","error","setError","handleChange","str","obj","JSON","parse","stringify","message","Error","resultOrError","_jsxs","Fragment","children","Wrapper","_jsx","StyledLayout","title","extra","CopyButton","Button","onClick","CodeEditor","height","spellCheck","extensions","json","onChange","readOnly","ErrorLayout","jsonHighlighting","styleTags","String","tags","Number","PropertyName","Null","parser","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonLanguage","LRLanguage","configure","props","indentNodeProp","Object","continuedIndent","except","Array","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","LanguageSupport"],"sourceRoot":""}