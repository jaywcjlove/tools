{"version":3,"file":"static/js/675.4dbbee5b.chunk.js","mappings":"s7PAIIA,EAAY,CAAC,OAAQ,UAAW,cAAe,gBAAiB,UACzDC,EAAc,WACvB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACpBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC5BG,GAAkCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC9BG,GAAsBb,EAAAA,EAAAA,UAAS,UAASc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAnCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAClBG,GAAwBjB,EAAAA,EAAAA,YAAUkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACpBG,GAAwBrB,EAAAA,EAAAA,UAAS,SAAQsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACpBG,GAA4BzB,EAAAA,EAAAA,UAAS,WAAU0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GAA1CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACxBG,GAA0B7B,EAAAA,EAAAA,UAAS,4BAA8BuB,EAAQ,IAAMI,EAAU,IAAMxB,EAAQ,SAAWY,GAAKe,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GAAlHE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACtBG,GAA4BjC,EAAAA,EAAAA,UAAS,CAAC+B,IAAQG,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAAzCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAexB,OAAoBG,EAAAA,EAAAA,KAAKC,EAAAA,SAAU,CACjCC,UAAuBC,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CACpCF,SAAU,EAAcF,EAAAA,EAAAA,KAAK,MAAO,CAClCE,UAAuBF,EAAAA,EAAAA,KAAK,MAAO,CACjCK,IAAKX,OAEQS,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CAC9BE,UAAW,MACXJ,SAAU,EAAcC,EAAAA,EAAAA,MAAM,QAAS,CACrCD,SAAU,CAAC,gBAA6BF,EAAAA,EAAAA,KAAK,QAAS,CACpDO,KAAM,QACNC,MAAOtC,EACPuC,SAAU,SAAAC,GAAG,OAAIvC,EAAauC,EAAIC,OAAOH,MAAM,QAElCL,EAAAA,EAAAA,MAAM,QAAS,CAC9BD,SAAU,CAAC,iBAA8BF,EAAAA,EAAAA,KAAK,QAAS,CACrDO,KAAM,QACNC,MAAOlC,EACPmC,SAAU,SAAAC,GAAG,OAAInC,EAAcmC,EAAIC,OAAOH,MAAM,QAEnCL,EAAAA,EAAAA,MAAM,QAAS,CAC9BD,SAAU,CAAC,WAAwBF,EAAAA,EAAAA,KAAK,QAAS,CAC/CO,KAAM,QACNC,MAAO1C,EACP2C,SAAU,SAAAC,GAAG,OAAI3C,EAAS2C,EAAIC,OAAOH,MAAM,WAGhCL,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CAC9BE,UAAW,MACXJ,SAAU,EAAcF,EAAAA,EAAAA,KAAK,QAAS,CACpCO,KAAM,OACNC,MAAOtB,EACPuB,SAAU,SAAAC,GAAG,OAAIvB,EAASuB,EAAIC,OAAOH,MAAM,KAC5BR,EAAAA,EAAAA,KAAK,QAAS,CAC7BO,KAAM,OACNC,MAAOlB,EACPmB,SAAU,SAAAC,GAAG,OAAInB,EAAWmB,EAAIC,OAAOH,MAAM,KAC9BL,EAAAA,EAAAA,MAAM,SAAU,CAC/BK,MAAO1B,GAAS,GAChB2B,SAAU,SAAAC,GAAG,OAAI3B,EAAS2B,EAAIC,OAAOH,MAAM,EAC3CN,SAAU,EAAcF,EAAAA,EAAAA,KAAK,SAAU,CACrCQ,MAAO,GACPN,SAAU,wBACR1C,EAAUoD,KAAI,SAACC,EAAIC,GAAG,OAAkBX,EAAAA,EAAAA,MAAM,SAAU,CAC1DK,MAAOK,EACPX,SAAU,CAAC,IAAK,UAAWW,EAAI,MAC9BC,EAAI,QACQX,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CAC9BE,UAAW,MACXJ,SAAU,EAAcC,EAAAA,EAAAA,MAAM,SAAU,CACtCK,MAAO9B,EAAKqC,oBACZN,SAAU,SAAAC,GAAG,OAAI/B,EAAQ+B,EAAIC,OAAOH,MAAM,EAC1CN,SAAU,EAAcF,EAAAA,EAAAA,KAAK,SAAU,CACrCE,SAAU,wBACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,SACPN,SAAU,oBACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,MACPN,SAAU,iBACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,SACPN,SAAU,oBACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,QACPN,SAAU,sBAEGF,EAAAA,EAAAA,KAAK,QAAS,CAC7BO,KAAM,OACNC,MAAO9B,EACPsC,YAAa,2BACbP,SAAU,SAAAC,GAAG,OAAI/B,EAAQ+B,EAAIC,OAAOH,MAAM,WAG/BR,EAAAA,EAAAA,KAAKI,EAAAA,GAAS,CAC7BE,UAAW,MACXJ,UAAuBF,EAAAA,EAAAA,KAAKiB,EAAAA,GAAQ,CAClCC,QA3FR,WACE,IAAIC,EAAQ,GAERjD,GAAWiD,EAAMC,KAAK,aAAelD,EAAUmD,QAAQ,MAAO,KAC9D/C,GAAY6C,EAAMC,KAAK,cAAgB9C,EAAW+C,QAAQ,MAAO,KACjE3C,GAAMyC,EAAMC,KAAK,QAAU1C,GAC3BI,GAAOqC,EAAMC,KAAK,SAAWtC,GAC7BI,GAAOiC,EAAMC,KAAK,SAAWlC,GACjC,IAAIoC,EAAM,4BAA8BpC,EAAQ,IAAMI,EAAU,IAAMxB,EAAMuD,QAAQ,MAAO,IAAM,IAAMF,EAAMI,KAAK,KAClH5B,EAAU2B,GACV,IAAIE,GAAIC,EAAAA,EAAAA,GAAO3B,GACf0B,EAAKE,QAAQJ,GACbvB,EAAWyB,EACb,EA+EQtB,SAAU,sBAEVJ,GAAWA,EAAQc,KAAI,SAACe,EAAMb,GAChC,OAAoBd,EAAAA,EAAAA,KAAK4B,EAAAA,GAAc,CACrC1C,OAAoBc,EAAAA,EAAAA,KAAK,MAAO,CAC9BK,IAAKsB,EACLE,IAAK,KAEP3B,SAAU,OAASyB,EAAO,KACzB,GAAKA,EAAOb,EACjB,QAGN,EC3GA,IAAIE,EAAc,CAChBc,OAAQ,mCACRC,IAAK,qBACLC,OAAQ,kDAEK,SAASC,EAAeC,GACrC,IAAAxE,GAAwBC,EAAAA,EAAAA,UAAS,oBAAmBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C8C,EAAK5C,EAAA,GAAEuE,EAAQvE,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7Bc,EAAKb,EAAA,GAAEc,EAAQd,EAAA,GACpBG,GAA0BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAApCgE,EAAM/D,EAAA,GAAEgE,EAAShE,EAAA,GACtBG,GAA8Bb,EAAAA,EAAAA,UAAS,UAASc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA3C8D,EAAQ7D,EAAA,GAAE8D,EAAW9D,EAAA,GAC1BG,GAAsBjB,EAAAA,EAAAA,UAAS,WAAUkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAApC2B,EAAI1B,EAAA,GAAE2D,EAAO3D,EAAA,GAClBG,GAA0BrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAjCU,EAAMT,EAAA,GAAEU,EAASV,EAAA,GAClBwD,EAAc,WAChB,IAAAC,EAAmBlC,EAAMmC,MAAM,KAAIC,GAAA/E,EAAAA,EAAAA,GAAA6E,EAAA,GAA9BG,EAAID,EAAA,GAAEE,EAAIF,EAAA,GACXpB,EAAO,GACPuB,EAAU,GACG,WAAbT,IACW,YAAT/B,IACFwC,EAAU,GAAHC,QAAAvB,EAAAA,EAAAA,GAAOwB,IAAaxB,EAAAA,EAAAA,GAAKyB,KAErB,WAAT3C,IACFwC,EAAU,GAAHC,QAAAvB,EAAAA,EAAAA,GAAO0B,IAAY1B,EAAAA,EAAAA,GAAKyB,MAGlB,QAAbZ,IACW,YAAT/B,IACFwC,GAAOtB,EAAAA,EAAAA,GAAO2B,IAEH,WAAT7C,IACFwC,GAAOtB,EAAAA,EAAAA,GAAO4B,KAGD,WAAbf,IACW,YAAT/B,IACFwC,GAAOtB,EAAAA,EAAAA,GAAO6B,IAEH,WAAT/C,IACFwC,GAAOtB,EAAAA,EAAAA,GAAO8B,KAGlBR,EAAQS,SAAQ,SAAA7B,GACd,IAAIL,EAAM,GAqBV,GApBiB,WAAbgB,IAA0BQ,GAAQ,cAAcW,KAAK9B,EAAKL,MAAQuB,GAAQ,cAAcY,KAAK9B,EAAKL,OAAS,cAAcmC,KAAK9B,EAAKL,QACrIA,EAAMK,EAAKL,IAAID,QAAQ,cAAewB,GAAMxB,QAAQ,cAAeyB,IAEpD,QAAbR,GAAsB,WAAWmB,KAAK9B,EAAKL,OAC7CA,EAAMK,EAAKL,IAAID,QAAQ,aAAcyB,EAAOD,EAAO,IAAMC,EAAOD,IAEjD,WAAbP,GAAyB,eAAemB,KAAK9B,EAAKL,OACvC,WAATf,GAAsBuC,GAAS,YAAYW,KAAK9B,EAAKL,OACvDA,EAAMK,EAAKL,IAAID,QAAQ,iBAAkBwB,IAE9B,WAATtC,GAAqBsC,GAAQC,GAAQ,YAAYW,KAAK9B,EAAKL,OAC7DA,EAAMK,EAAKL,IAAID,QAAQ,cAAewB,GAAMxB,QAAQ,iBAAkByB,IAE3D,YAATvC,GAAuBuC,IACzBxB,EAAMK,EAAKL,IAAID,QAAQ,cAAe,KAAKA,QAAQ,iBAAkBwB,IAE1D,YAATtC,GAAsBsC,GAAQC,IAChCxB,EAAMK,EAAKL,IAAID,QAAQ,cAAewB,GAAMxB,QAAQ,iBAAkBwB,KAGtEvB,EAAK,CACP,IAAIoC,EC5EL,SAAqBpC,EAAKf,EAAMzB,GACrC,IAAI6E,EAAM,IAAIC,IAAItC,GASlB,GARa,WAATf,GAAqBoD,EAAIE,KAAKC,SAAS,gBAC3B,SAAVhF,IACF6E,EAAIE,KAAO,mBAEC,YAAV/E,IACF6E,EAAIE,KAAO,gBAGF,YAATtD,GAAsBoD,EAAIE,KAAKC,SAAS,cAAe,CACzD,IAAIC,EAAS,IAAIC,gBAAgBL,EAAIM,QACjCnF,EACFiF,EAAOG,IAAI,QAASpF,GAEpBiF,EAAOI,OAAO,SAEhBR,EAAIM,OAASF,EAAOK,UACtB,CACA,OAAOT,EAAIU,IACb,CDwDkBC,CAAYhD,EAAKf,EAAMzB,GACjC0C,EAAKJ,KAAK,CACRE,IAAKoC,EACLxE,MAAOyC,EAAKzC,MACZ2D,KAAAA,EACAC,KAAAA,GAEJ,CACF,IACAnD,EAAU6B,EACZ,GACA+C,EAAAA,EAAAA,YAAU,WACR9B,GACF,GAAG,CAAClC,EAAMzB,IACV,IAAI0F,GAAcC,EAAAA,EAAAA,cAAY,kBAAmBtE,EAAAA,EAAAA,MAAMF,EAAAA,SAAU,CAC/DC,SAAU,EAAcC,EAAAA,EAAAA,MAAM,SAAU,CACtCuE,aAAcpC,EACd7B,SAAU,SAAAC,GACRyB,EAAS,IACTI,EAAY7B,EAAIC,OAAOH,OACvBb,EAAU,GACZ,EACAO,SAAU,EAAcF,EAAAA,EAAAA,KAAK,SAAU,CACrCQ,MAAO,SACPN,SAAU,YACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,MACPN,SAAU,SACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,SACPN,SAAU,eAEGC,EAAAA,EAAAA,MAAM,SAAU,CAC/BuE,aAAcnE,EACdE,SAAU,SAAAC,GACR8B,EAAQ9B,EAAIC,OAAOH,MACrB,EACAN,SAAU,EAAcF,EAAAA,EAAAA,KAAK,SAAU,CACrCQ,MAAO,SACPN,SAAU,YACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,UACPN,SAAU,gBAEGC,EAAAA,EAAAA,MAAM,SAAU,CAC/BuE,aAAc5F,GAAS,GACvB2B,SAAU,SAAAC,GAAG,OAAI3B,EAAS2B,EAAIC,OAAOH,MAAM,EAC3CN,SAAU,EAAcF,EAAAA,EAAAA,KAAK,SAAU,CACrCQ,MAAO,GACPN,SAAU,YACC,WAATK,IAAkCP,EAAAA,EAAAA,KAAK,SAAU,CACnDQ,MAAO,UACPN,SAAU,YACC,YAATK,IAAmCJ,EAAAA,EAAAA,MAAMF,EAAAA,SAAU,CACrDC,SAAU,EAAcF,EAAAA,EAAAA,KAAK,SAAU,CACrCQ,MAAO,UACPN,SAAU,aACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,cACPN,SAAU,iBACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,gBACPN,SAAU,mBACKF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,SACPN,SAAU,eAEGF,EAAAA,EAAAA,KAAK,SAAU,CAC9BQ,MAAO,OACPN,SAAU,cAGd,GAAE,CAACoC,EAAU/B,EAAMzB,IACrB,OAAoBkB,EAAAA,EAAAA,KAAK2E,EAAAA,GAAS,CAChCzE,UAAuBF,EAAAA,EAAAA,KAAK4E,EAAAA,GAAc,CACxCC,MAAO,kBACPC,SAAU,UACVC,OAAoB5E,EAAAA,EAAAA,MAAMF,EAAAA,SAAU,CAClCC,SAAU,EAAcF,EAAAA,EAAAA,KAAKiB,EAAAA,GAAQ,CACnCC,QAAS,kBAAMmB,GAAWD,EAAO,EACjClC,SAAUkC,EAAS,iBAAmB,kBACpC5B,IAAsBR,EAAAA,EAAAA,KAAKgF,EAAAA,GAAY,CACzCxE,MAAOA,OAGXN,SAAUkC,GAAsBpC,EAAAA,EAAAA,KAAKvC,EAAa,CAAC,IAAkB0C,EAAAA,EAAAA,MAAMC,EAAAA,GAAS,CAClFF,SAAU,EAAcF,EAAAA,EAAAA,KAAKiF,EAAAA,GAAa,CACxCzE,MAAOA,EACPQ,YAAaA,EAAYsB,GACzByC,OAAoB/E,EAAAA,EAAAA,KAAKwE,EAAa,CAAC,GACvCtD,QAASuB,EACThC,SAAU,SAAAC,GAAG,OAAIyB,EAASzB,EAAIC,OAAOH,MAAM,EAC3CN,SAAU,oBACRR,GAAUA,EAAOkB,KAAI,SAACe,EAAMb,GAC9B,OAAoBd,EAAAA,EAAAA,KAAK4B,EAAAA,GAAc,CACrC1C,OAAoBc,EAAAA,EAAAA,KAAK,MAAO,CAC9BK,IAAKsB,EAAKL,IACVO,IAAKF,EAAKzC,QAEZgB,SAAU,KAAOyB,EAAKzC,MAAQ,KAAOyC,EAAKL,IAAM,KAC/C,GAAKK,EAAKkB,MAAQlB,EAAKmB,MAAQhC,GAAOA,EAC3C,UAIR,C","sources":["../../packages/generate-github-badges/esm/CustomBadge.js","../../packages/generate-github-badges/esm/index.js","../../packages/generate-github-badges/esm/utils.js"],"sourcesContent":["import { Fragment, useState } from 'react';\nimport { Spacing, Button, CodeLineCopy } from '@wcj/tools-react-components';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styleData = ['flat', 'plastic', 'flat-square', 'for-the-badge', 'social'];\nexport var CustomBadge = () => {\n  var [color, setColor] = useState('green');\n  var [logoColor, setLogoColor] = useState('');\n  var [labelColor, setLabelColor] = useState('');\n  var [logo, setLogo] = useState('github');\n  var [style, setStyle] = useState();\n  var [label, setLabel] = useState('Tools');\n  var [content, setContent] = useState('content');\n  var [result, setResult] = useState(\"https://shields.io/badge/\" + label + \"-\" + content + \"-\" + color + \"?logo=\" + logo);\n  var [history, setHistory] = useState([result]);\n  function handleChange() {\n    var param = [];\n    // if (color) param.push(`color=${color.replace(/^#/g, '')}`);\n    if (logoColor) param.push(\"logoColor=\" + logoColor.replace(/^#/g, ''));\n    if (labelColor) param.push(\"labelColor=\" + labelColor.replace(/^#/g, ''));\n    if (logo) param.push(\"logo=\" + logo);\n    if (style) param.push(\"style=\" + style);\n    if (label) param.push(\"label=\" + label);\n    var url = \"https://shields.io/badge/\" + label + \"-\" + content + \"-\" + color.replace(/^#/g, '') + \"?\" + param.join('&');\n    setResult(url);\n    var data = [...history];\n    data.unshift(url);\n    setHistory(data);\n  }\n  return /*#__PURE__*/_jsx(Fragment, {\n    children: /*#__PURE__*/_jsxs(Spacing, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: result\n        })\n      }), /*#__PURE__*/_jsxs(Spacing, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxs(\"label\", {\n          children: [\"Logo Color: \", /*#__PURE__*/_jsx(\"input\", {\n            type: \"color\",\n            value: logoColor,\n            onChange: evn => setLogoColor(evn.target.value)\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          children: [\"Label Color: \", /*#__PURE__*/_jsx(\"input\", {\n            type: \"color\",\n            value: labelColor,\n            onChange: evn => setLabelColor(evn.target.value)\n          })]\n        }), /*#__PURE__*/_jsxs(\"label\", {\n          children: [\"Color: \", /*#__PURE__*/_jsx(\"input\", {\n            type: \"color\",\n            value: color,\n            onChange: evn => setColor(evn.target.value)\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(Spacing, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          value: label,\n          onChange: evn => setLabel(evn.target.value)\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          value: content,\n          onChange: evn => setContent(evn.target.value)\n        }), /*#__PURE__*/_jsxs(\"select\", {\n          value: style || '',\n          onChange: evn => setStyle(evn.target.value),\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: \"\",\n            children: \"Please select Style\"\n          }), styleData.map((st, idx) => /*#__PURE__*/_jsxs(\"option\", {\n            value: st,\n            children: [' ', \"Style: \", st, ' ']\n          }, idx))]\n        }), /*#__PURE__*/_jsxs(Spacing, {\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxs(\"select\", {\n            value: logo.toLocaleLowerCase(),\n            onChange: evn => setLogo(evn.target.value),\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              children: \"Please select Logo\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"github\",\n              children: \" Logo: Github \"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"npm\",\n              children: \" Logo: npm \"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"google\",\n              children: \" Logo: Google \"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"baidu\",\n              children: \" Logo: baidu \"\n            })]\n          }), /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            value: logo,\n            placeholder: \"Please enter a logo name\",\n            onChange: evn => setLogo(evn.target.value)\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Spacing, {\n        direction: \"row\",\n        children: /*#__PURE__*/_jsx(Button, {\n          onClick: handleChange,\n          children: \"Generate Badges\"\n        })\n      }), history && history.map((item, idx) => {\n        return /*#__PURE__*/_jsx(CodeLineCopy, {\n          label: /*#__PURE__*/_jsx(\"img\", {\n            src: item,\n            alt: \"\"\n          }),\n          children: \"![](\" + item + \")\"\n        }, \"\" + item + idx);\n      })]\n    })\n  });\n};","import { Fragment, useCallback, useEffect, useState } from 'react';\nimport { Wrapper, StyledLayout, CopyButton, Button, InputButton, Spacing, CodeLineCopy } from '@wcj/tools-react-components';\nimport npmBadgen from './npm.badgen.json';\nimport npmShields from './npm.shields.json';\nimport githubBadgen from './github.badgen.json';\nimport githubShields from './github.shields.json';\nimport githubOther from './github.other.json';\nimport dockerBadgen from './docker.badgen.json';\nimport dockerShields from './docker.shields.json';\nimport { CustomBadge } from './CustomBadge';\nimport { changeStyle } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar placeholder = {\n  github: 'Enter `username/repository` name',\n  npm: 'Enter package name',\n  docker: 'Enter Image name E.g: `nginx`, `bitnami/nginx`'\n};\nexport default function GenerateBadges(props) {\n  var [value, setValue] = useState('jaywcjlove/tools');\n  var [style, setStyle] = useState();\n  var [custom, setCustom] = useState(false);\n  var [category, setCategory] = useState('github');\n  var [type, setType] = useState('shields');\n  var [result, setResult] = useState([]);\n  var handleInput = () => {\n    var [user, repo] = value.split('/');\n    var data = [];\n    var rawData = [];\n    if (category === 'github') {\n      if (type === 'shields') {\n        rawData = [...githubShields, ...githubOther];\n      }\n      if (type === 'badgen') {\n        rawData = [...githubBadgen, ...githubOther];\n      }\n    }\n    if (category === 'npm') {\n      if (type === 'shields') {\n        rawData = [...npmShields];\n      }\n      if (type === 'badgen') {\n        rawData = [...npmBadgen];\n      }\n    }\n    if (category === 'docker') {\n      if (type === 'shields') {\n        rawData = [...dockerShields];\n      }\n      if (type === 'badgen') {\n        rawData = [...dockerBadgen];\n      }\n    }\n    rawData.forEach(item => {\n      var url = '';\n      if (category === 'github' && (repo && /{{:repo}}/gi.test(item.url) || user && /{{:user}}/gi.test(item.url) && !/{{:repo}}/gi.test(item.url))) {\n        url = item.url.replace(/{{:user}}/gi, user).replace(/{{:repo}}/gi, repo);\n      }\n      if (category === 'npm' && /{{:pkg}}/.test(item.url)) {\n        url = item.url.replace(/{{:pkg}}/gi, repo ? user + \"/\" + repo : user);\n      }\n      if (category === 'docker' && /{{:library}}/.test(item.url)) {\n        if (type === 'badgen' && !repo && !/{{:user}}/.test(item.url)) {\n          url = item.url.replace(/{{:library}}/gi, user);\n        }\n        if (type === 'badgen' && user && repo && /{{:user}}/.test(item.url)) {\n          url = item.url.replace(/{{:user}}/gi, user).replace(/{{:library}}/gi, repo);\n        }\n        if (type === 'shields' && !repo) {\n          url = item.url.replace(/{{:user}}/gi, '_').replace(/{{:library}}/gi, user);\n        }\n        if (type === 'shields' && user && repo) {\n          url = item.url.replace(/{{:user}}/gi, user).replace(/{{:library}}/gi, user);\n        }\n      }\n      if (url) {\n        var raw = changeStyle(url, type, style);\n        data.push({\n          url: raw,\n          label: item.label,\n          user,\n          repo\n        });\n      }\n    });\n    setResult(data);\n  };\n  useEffect(() => {\n    handleInput();\n  }, [type, style]);\n  var ExtraLayout = useCallback(() => /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"select\", {\n      defaultValue: category,\n      onChange: evn => {\n        setValue('');\n        setCategory(evn.target.value);\n        setResult([]);\n      },\n      children: [/*#__PURE__*/_jsx(\"option\", {\n        value: \"github\",\n        children: \"github\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: \"npm\",\n        children: \"npm\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: \"docker\",\n        children: \"docker\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"select\", {\n      defaultValue: type,\n      onChange: evn => {\n        setType(evn.target.value);\n      },\n      children: [/*#__PURE__*/_jsx(\"option\", {\n        value: \"badgen\",\n        children: \"badgen\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: \"shields\",\n        children: \"shields\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"select\", {\n      defaultValue: style || '',\n      onChange: evn => setStyle(evn.target.value),\n      children: [/*#__PURE__*/_jsx(\"option\", {\n        value: \"\",\n        children: \"default\"\n      }), type === 'badgen' && /*#__PURE__*/_jsx(\"option\", {\n        value: \"classic\",\n        children: \"classic\"\n      }), type === 'shields' && /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"plastic\",\n          children: \"plastic\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"flat-square\",\n          children: \"flat-square\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"for-the-badge\",\n          children: \"for-the-badge\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"social\",\n          children: \"social\"\n        })]\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: \"flat\",\n        children: \"flat\"\n      })]\n    })]\n  }), [category, type, style]);\n  return /*#__PURE__*/_jsx(Wrapper, {\n    children: /*#__PURE__*/_jsx(StyledLayout, {\n      title: \"Generate Badges\",\n      overflow: \"initial\",\n      extra: /*#__PURE__*/_jsxs(Fragment, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: () => setCustom(!custom),\n          children: custom ? 'Default Badges' : 'Custom Badges'\n        }), value && /*#__PURE__*/_jsx(CopyButton, {\n          value: value\n        })]\n      }),\n      children: custom ? /*#__PURE__*/_jsx(CustomBadge, {}) : /*#__PURE__*/_jsxs(Spacing, {\n        children: [/*#__PURE__*/_jsx(InputButton, {\n          value: value,\n          placeholder: placeholder[category],\n          extra: /*#__PURE__*/_jsx(ExtraLayout, {}),\n          onClick: handleInput,\n          onChange: evn => setValue(evn.target.value),\n          children: \"Generate Badges\"\n        }), result && result.map((item, idx) => {\n          return /*#__PURE__*/_jsx(CodeLineCopy, {\n            label: /*#__PURE__*/_jsx(\"img\", {\n              src: item.url,\n              alt: item.label\n            }),\n            children: \"![\" + item.label + \"](\" + item.url + \")\"\n          }, \"\" + item.user + (item.repo || idx) + idx);\n        })]\n      })\n    })\n  });\n}","export function changeStyle(url, type, style) {\n  var obj = new URL(url);\n  if (type === 'badgen' && obj.host.endsWith('badgen.net')) {\n    if (style === 'flat') {\n      obj.host = 'flat.badgen.net';\n    }\n    if (style === 'classic') {\n      obj.host = 'badgen.nett';\n    }\n  }\n  if (type === 'shields' && obj.host.endsWith('shields.io')) {\n    var params = new URLSearchParams(obj.search);\n    if (style) {\n      params.set('style', style);\n    } else {\n      params.delete('style');\n    }\n    obj.search = params.toString();\n  }\n  return obj.href;\n}"],"names":["styleData","CustomBadge","_useState","useState","_useState2","_slicedToArray","color","setColor","_useState3","_useState4","logoColor","setLogoColor","_useState5","_useState6","labelColor","setLabelColor","_useState7","_useState8","logo","setLogo","_useState9","_useState10","style","setStyle","_useState11","_useState12","label","setLabel","_useState13","_useState14","content","setContent","_useState15","_useState16","result","setResult","_useState17","_useState18","history","setHistory","_jsx","Fragment","children","_jsxs","Spacing","src","direction","type","value","onChange","evn","target","map","st","idx","toLocaleLowerCase","placeholder","Button","onClick","param","push","replace","url","join","data","_toConsumableArray","unshift","item","CodeLineCopy","alt","github","npm","docker","GenerateBadges","props","setValue","custom","setCustom","category","setCategory","setType","handleInput","_value$split","split","_value$split2","user","repo","rawData","concat","githubShields","githubOther","githubBadgen","npmShields","npmBadgen","dockerShields","dockerBadgen","forEach","test","raw","obj","URL","host","endsWith","params","URLSearchParams","search","set","delete","toString","href","changeStyle","useEffect","ExtraLayout","useCallback","defaultValue","Wrapper","StyledLayout","title","overflow","extra","CopyButton","InputButton"],"sourceRoot":""}