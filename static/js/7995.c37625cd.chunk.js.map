{"version":3,"file":"static/js/7995.c37625cd.chunk.js","mappings":"+PACaA,EAAM,6GCCNC,EAAgC,CAC3CC,SAAS,EAOTC,uBAAuB,EAKvBC,+BAAgC,IAMhCC,mBAAmB,EAEnBC,2BAA4B,GAK5BC,iBAAiB,EAOjBC,wBAAyB,EAKzBC,sBAAsB,EAmBtBC,eAAe,EAIfC,cAAe,GAIfC,KAAK,EAILC,sBAAsB,EAYtBC,eAAe,EAafC,kBAAkB,EAclBC,eAAe,EAOfC,UAAU,EAQVC,WAAW,EAIXC,iBAAkB,GAIlBC,kBAAmB,GAkBnBC,OAAQ,UAORC,qBAAqB,EAOrBC,uBAAuB,GAOZC,EAAgC,CAC3CtB,SAAS,EACTC,uBAAuB,EACvBC,+BAAgC,EAChCC,mBAAmB,EACnBC,2BAA4B,EAC5BC,iBAAiB,EACjBC,wBAAyB,IACzBC,sBAAsB,EACtBgB,yBAA0B,cAC1Bb,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfE,eAAe,EACfC,UAAU,EACVS,cAAc,EACdC,wBAAyB,EACzBC,aAAa,EACbC,2BAA2B,EAC3BC,oBAAqB,CAAC,OACtBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,EACtBhB,qBAAqB,EACrBC,uBAAuB,GAOZgB,EAAkC,CAC7CrC,SAAS,EACTC,uBAAuB,EACvBC,+BAAgC,IAChCC,mBAAmB,EACnBC,2BAA4B,GAC5BC,iBAAiB,EACjBC,wBAAyB,EACzBC,sBAAsB,EACtBgB,yBAA0B,cAC1Bb,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfE,eAAe,EACfC,UAAU,EACVS,cAAc,EACdC,wBAAyB,GACzBC,aAAa,EACbC,2BAA2B,EAC3BW,mCAAoC,IACpCV,oBAAqB,CAAC,UACtBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,IACtBhB,qBAAqB,EACrBC,uBAAuB,GAOZkB,EAA+B,CAC1CvC,SAAS,EACTC,uBAAuB,EACvBE,mBAAmB,EACnBE,iBAAiB,EACjBC,wBAAyB,EACzBC,sBAAsB,EACtBgB,yBAA0B,cAC1Bb,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfE,eAAe,EACfC,UAAU,EACVS,cAAc,EACdE,aAAa,EACbC,2BAA2B,EAC3BC,oBAAqB,GACrBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,IACtBf,uBAAuB,GAKZmB,EAAmC,CAC9CxC,SAAS,EACTC,uBAAuB,EACvBE,mBAAmB,EACnBE,iBAAiB,EACjBC,wBAAyB,EACzBC,sBAAsB,EACtBgB,yBAA0B,cAC1Bb,KAAK,EACLC,sBAAsB,EACtBC,eAAe,EACfE,eAAe,EACfC,UAAU,EACVS,cAAc,EACdE,aAAa,EACbC,2BAA2B,EAC3BW,mCAAoC,GACpCV,oBAAqB,GACrBC,uBAAuB,EACvBC,mBAAmB,EACnBC,oBAAoB,EACpBC,yBAA0B,EAC1BC,iCAAiC,EACjCC,sCAAuC,EACvCC,wBAAyB,WACzBC,qBAAsB,IACtBf,uBAAuB,G,WCrRnBoB,EAAOC,EAAAA,GAAAA,KAAW,0DAIT,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAA4B7C,GAAW,eAA9D8C,EAAO,KAAEC,EAAU,KAClBC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,gBAAiB,WAAvCD,EACFE,GAASC,EAAAA,EAAAA,QAA2B,MAC1C,GAAwBN,EAAAA,EAAAA,UAA+B,OAAM,eAAtDO,EAAI,KAAEC,EAAO,KACpB,GAA4BR,EAAAA,EAAAA,UAC1B,cACD,eAFMS,EAAM,KAAEC,EAAS,KAGxB,GAA0BV,EAAAA,EAAAA,UAASW,GAAiB,eAA7CC,EAAK,KAAEC,EAAQ,KACtB,GAA4Cb,EAAAA,EAAAA,UAAS,IAAG,eAAjDc,EAAc,KAAEC,EAAiB,KACxC,GAA0Bf,EAAAA,EAAAA,UAAS,IAAG,eAA/BgB,EAAK,KAAU,KAStB,IAAMC,EAAsB,QAATV,EAAiBK,EAAQE,EAItCI,EAAc,WAClBR,EAAU,cACVR,GAAW,UAAK/C,GAClB,EACMgE,EAAoC,CACxC,CACEZ,KAAM,QACNa,KAAM,UACNC,QAAoB,eAAXZ,EACTa,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CACNnB,EAAU,cAAa,KAAEsB,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,sBAG/CuB,SAAU,YAAWC,EAARpD,OACXmC,EAAU,cACVR,GAAW,UAAKxB,GAClB,GAEF,CACE6B,KAAM,QACNa,KAAM,UACNC,QAAoB,iBAAXZ,EACTa,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CACNnB,EAAU,gBAAe,KAAEsB,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,wBAGjDuB,SAAU,YAAWE,EAARrD,OACXmC,EAAU,gBACVR,GAAW,UAAKT,GAClB,GAEF,CACEc,KAAM,QACNa,KAAM,UACNC,QAAoB,cAAXZ,EACTa,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CACNnB,EAAU,aAAY,KAAEsB,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,qBAG9CuB,SAAU,YAAWG,EAARtD,OACXmC,EAAU,aACVR,GAAW,UAAKP,GAClB,GAEF,CACEY,KAAM,QACNa,KAAM,UACNC,QAAoB,kBAAXZ,EACTa,UAAUG,EAAAA,EAAAA,KAACD,EAAAA,SAAQ,CAAAF,SAAEnB,EAAU,mBAC/BuB,SAAU,YAAWI,EAARvD,OACXmC,EAAU,iBACVR,GAAW,UAAKN,GAClB,GAEF,CACEW,KAAM,QACNa,KAAM,UACNC,QAAoB,eAAXZ,EACTa,UAAUG,EAAAA,EAAAA,KAACD,EAAAA,SAAQ,CAAAF,SAAEnB,EAAU,gBAC/BuB,SAAUR,IAGRa,EAAiB,CACrB,CACEV,UAAWpB,EAAQ7C,QACnBkE,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,YACCG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,gBAG7BuB,SAAU,YAAgB,IAAbnD,EAAQyD,EAARzD,OACX2B,GAAW,UAAKD,EAAY,CAAE7C,QAASmB,EAAO8C,UAChD,GAEF,CACEA,UAAWpB,EAAQ5C,sBACnBiE,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,0BACeG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,8BAG3CuB,SAAU,YAAgB,IAAbnD,EAAQ0D,EAAR1D,OACX2B,GAAW,UAAKD,EAAY,CAAE5C,sBAAuBkB,EAAO8C,UAC9D,GAEF,CACEa,UAAWjC,EAAQ5C,sBACnBkD,KAAM,QACN4B,IAAK,IACLC,IAAK,IACLC,KAAM,OACNzB,MAAOX,EAAQ3C,+BACfgE,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CACNrB,EAAQ3C,+BAA8B,KAAEmE,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,GAAM,mCAChBA,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,uCAGpDuB,SAAU,YAAgB,IAAbnD,EAAQ+D,EAAR/D,OACX2B,GAAW,UAAKD,EAAY,CAAE3C,+BAAgCiF,OAAOhE,EAAOqC,SAC9E,GAEF,CACES,UAAWpB,EAAQ1C,kBACnB+D,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,sBACWG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,0BAGvCuB,SAAU,YAAgB,IAAbnD,EAAQiE,EAARjE,OACX2B,GAAW,UAAKD,EAAY,CAAE1C,kBAAmBgB,EAAO8C,UAC1D,GAEF,CACEd,KAAM,QACN4B,IAAK,IACLC,IAAK,IACLC,KAAM,MACNH,UAAWjC,EAAQ1C,kBACnBqD,MAAOX,EAAQzC,2BACf8D,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CACNrB,EAAQzC,2BAA0B,KAAEiE,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,GAAM,8BAA4B,KACvEA,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,mCAGrBuB,SAAU,YAAgB,IAAbnD,EAAQkE,EAARlE,OACX2B,GAAW,UAAKD,EAAY,CAAEzC,2BAA4B+E,OAAOhE,EAAOqC,SAC1E,GAEF,CACES,UAAWpB,EAAQxC,gBACnB6D,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,oBACSG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,wBAGrCuB,SAAU,YAAgB,IAAbnD,EAAQmE,EAARnE,OACX2B,GAAW,UAAKD,EAAY,CAAExC,gBAAiBc,EAAO8C,UACxD,GAEF,CACEd,KAAM,QACN4B,IAAK,OACLC,IAAK,IACLC,KAAM,IACNH,UAAWjC,EAAQxC,gBACnBmD,MAAOX,EAAQvC,wBACf4D,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CACNrB,EAAQvC,wBAAuB,KAAE+D,EAAAA,EAAAA,KAAAA,KAAAA,CAAAA,GAAM,2BAAyB,KACjEA,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,gCAGrBuB,SAAU,YAAgB,IAAbnD,EAAQoE,EAARpE,OACX2B,GAAW,UAAKD,EAAY,CAAEvC,wBAAyB6E,OAAOhE,EAAOqC,SACvE,GAEF,CACES,UAAWpB,EAAQtC,qBACnB2D,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,yBACcG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,6BAG1CuB,SAAU,YAAgB,IAAbnD,EAAQqE,EAARrE,OACX2B,GAAW,UAAKD,EAAY,CAAEtC,qBAAsBY,EAAO8C,UAC7D,GAEF,CACET,MAAOX,EAAQ1B,OACf0B,QAAS,CAAC,UAAD,0BACTqB,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,WACAG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,eAG5BuB,SAAU,YAAgB,IAAbnD,EAAQsE,EAARtE,OACX2B,GAAW,UAAKD,EAAY,CAAE1B,OAAQA,EAAOqC,QAC/C,GAEF,CACES,UAAWpB,EAAQrC,cACnB0D,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,kBACOG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,sBAGnCuB,SAAU,YAAgB,IAAbnD,EAAQuE,EAARvE,OACX2B,GAAW,UAAKD,EAAY,CAAErC,cAAeW,EAAO8C,UACtD,GAEF,CACEd,KAAM,OACNK,MAAOX,EAAQpC,cACfyD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,kBACOG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,sBAGnCuB,SAAU,YAAgB,IAAbnD,EAAQwE,EAARxE,OACX2B,GAAW,UAAKD,EAAY,CAAEpC,cAAeU,EAAOqC,QACtD,GAEF,CACES,UAAWpB,EAAQnC,IACnBwD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,QACHG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,YAGzBuB,SAAU,YAAgB,IAAbnD,EAAQyE,EAARzE,OACX2B,GAAW,UAAKD,EAAY,CAAEnC,IAAKS,EAAO8C,UAC5C,GAEF,CACEA,UAAWpB,EAAQlC,qBACnBuD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,yBACcG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,6BAG1CuB,SAAU,YAAgB,IAAbnD,EAAQ0E,EAAR1E,OACX2B,GAAW,UAAKD,EAAY,CAAElC,qBAAsBQ,EAAO8C,UAC7D,GAEF,CACEA,UAAWpB,EAAQjC,cACnBsD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,kBACOG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,sBAGnCuB,SAAU,YAAgB,IAAbnD,EAAQ2E,EAAR3E,OACX2B,GAAW,UAAKD,EAAY,CAAEjC,cAAeO,EAAO8C,UACtD,GAEF,CACEA,UAAWpB,EAAQ/B,cACnBoD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,kBACOG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,sBAGnCuB,SAAU,YAAgB,IAAbnD,EAAQ4E,EAAR5E,OACX2B,GAAW,UAAKD,EAAY,CAAE/B,cAAeK,EAAO8C,UACtD,GAEF,CACEA,UAAWpB,EAAQ9B,SACnBmD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,aACEG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,iBAG9BuB,SAAU,YAAgB,IAAbnD,EAAQ6E,EAAR7E,OACX2B,GAAW,UAAKD,EAAY,CAAE9B,SAAUI,EAAO8C,UACjD,GAEF,CACEA,UAAWpB,EAAQ7B,UACnBkD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,cACGG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,kBAG/BuB,SAAU,YAAgB,IAAbnD,EAAQ8E,EAAR9E,OACX2B,GAAW,UAAKD,EAAY,CAAE7B,UAAWG,EAAO8C,UAClD,GAEF,CACEd,KAAM,OACNK,MAAOX,EAAQ5B,iBACfiD,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,qBACUG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,yBAGtCuB,SAAU,YAAgB,IAAbnD,EAAQ+E,EAAR/E,OACX2B,GAAW,UAAKD,EAAY,CAAE5B,iBAAkBE,EAAOqC,QACzD,GAEF,CACES,UAAWpB,EAAQzB,oBACnB8C,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,wBACaG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,4BAGzCuB,SAAU,YAAgB,IAAbnD,EAAQgF,EAARhF,OACX2B,GAAW,UAAKD,EAAY,CAAEzB,oBAAqBD,EAAO8C,UAC5D,GAEF,CACEA,UAAWpB,EAAQxB,sBACnB6C,UACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,CAAAA,0BACeG,EAAAA,EAAAA,KAAC5B,EAAI,CAAAyB,SAAEnB,EAAU,8BAG3CuB,SAAU,YAAgB,IAAbnD,EAAQiF,EAARjF,OACX2B,GAAW,UAAKD,EAAY,CAAExB,sBAAuBF,EAAO8C,UAC9D,IAGJ,OACEE,EAAAA,EAAAA,MAACkC,EAAAA,GAAO,CAAAnC,SAAAA,EACNG,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CACXC,MAAM,wBACNC,OACErC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,EACPG,EAAAA,EAAAA,KAACoC,EAAAA,GAAM,CAACC,QAAS,kBAtU3B,WACE,GAAa,QAATvD,EAAgB,CAClB,IAAMrD,GAAM6G,EAAAA,EAAAA,WAAUnD,EAAOX,GAC7Bc,EAAkB7D,EAAI8G,oBACxB,CAEAxD,EAAiB,QAATD,EAAiB,aAAe,MAC1C,CA+TiC0D,EAAkB,EAAA3C,SACrBnB,EAAR,QAATI,EAA2B,aAA0B,cAEvDU,IAAcQ,EAAAA,EAAAA,KAACyC,EAAAA,GAAU,CAACtD,MAAOK,KAClCQ,EAAAA,EAAAA,KAACoC,EAAAA,GAAM,CACLC,QAAS,WAAM,QACC,OAAd,EAAAzD,EAAO8D,UAAa,OAAN,EAAdC,EAAgBC,OAAhBC,EAAsBC,QACtB1D,EAASF,GACTH,EAAQ,MACV,EAAEc,SAEDnB,EAAU,SAAU,CAAEqE,GAAI,gBAGhClD,UAEDG,EAAAA,EAAAA,KAACgD,EAAAA,GAAU,CACT7D,MAAOK,EACPyD,IAAKrE,EACLsE,OAAO,qBACPC,WAAY,EAACC,EAAAA,EAAAA,eACbnD,SAAWd,SAAAA,GACA,QAATL,EAAiBM,EAASD,GAASG,EAAkBH,EACvD,OAGJa,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CACXC,MAAOxD,EAAU,UAAW,CAAEqE,GAAI,WAClCM,MAAO,CAAEC,SAAU,KACnBnB,OACErC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,EACPG,EAAAA,EAAAA,KAACoC,EAAAA,GAAM,CAACC,QAAS5C,EAAYI,SAAEnB,EAAU,QAAS,CAAEqE,GAAI,cACxD/C,EAAAA,EAAAA,KAACoC,EAAAA,GAAM,CAACC,QAAS,kBAAM5D,EAAW,CAAC,EAAG,EAAAoB,SAAEnB,EAAU,OAAQ,CAAEqE,GAAI,gBAEnElD,UAEDG,EAAAA,EAAAA,KAACuD,EAAAA,GAAU,CAACC,UAjW4B,CAC5CH,MAAO,CAAEH,OAAQ,qBAAsBO,SAAU,OAAQC,OAAQ,IAgW1B7D,UACjCC,EAAAA,EAAAA,MAAC6D,EAAAA,GAAO,CAACN,MAAO,CAAEO,WAAY,IAAK/D,SAAAA,CAChCH,EAAWmE,KAAI,SAACC,EAAMC,GACrB,OAAO/D,EAAAA,EAAAA,KAACgE,EAAAA,IAAc,UAAeF,GAATC,EAC9B,KACA/D,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,KACRjE,EAAAA,EAAAA,KAAC2D,EAAAA,GAAO,CAAA9D,SAAAA,yIACPS,EAAeuD,KAAI,SAACC,EAAMC,GACzB,MAAI,eAAeG,KAAKJ,EAAKhF,MAAQ,UAAsBqF,IAAfL,EAAK3E,OACxCa,EAAAA,EAAAA,KAACD,EAAAA,SAAQ,GAAMgE,GAEpBD,EAAKtF,SAAW4F,MAAMC,QAAQP,EAAKtF,UAEnCsB,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,EACPG,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,KACRjE,EAAAA,EAAAA,KAACsE,EAAAA,IAAM,UAAKR,MAFCC,IAOjBjE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAF,SAAAA,EACPG,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,KACRjE,EAAAA,EAAAA,KAACgE,EAAAA,IAAc,UAAKF,MAFPC,EAKnB,WAILxE,IAASS,EAAAA,EAAAA,KAACuE,EAAAA,GAAW,CAAA1E,SAAEN,MAG9B,C","sources":["../../packages/js-obfuscator/src/sample.ts","../../packages/js-obfuscator/src/options.ts","../../packages/js-obfuscator/src/index.tsx"],"sourcesContent":["export const js = `function hello(who = \"world\") { console.log(\\`Hello, \\${who}!\\`) }`;\nexport const val = `function hello(who = \"world\") {\n  console.log(\\`Hello, \\${who}!\\`)\n  return \\`Hello, \\${who}!\\`\n}\nhello();\n`;\n","import { ObfuscatorOptions } from 'javascript-obfuscator';\n\nexport const allOptions: ObfuscatorOptions = {\n  compact: true,\n  /**\n   * Enables code control flow flattening. Control flow flattening is a structure transformation of the source code that hinders program comprehension.\n   *\n   * This option greatly affects the performance up to 1.5x slower runtime speed.\n   * Use `controlFlowFlatteningThreshold` to set percentage of nodes that will affected by control flow flattening.\n   */\n  controlFlowFlattening: false,\n  /**\n   * `controlFlowFlattening` 转换将应用于任何给定节点的概率。\n   * `controlFlowFlatteningThreshold`: 0 equals to `controlFlowFlattening`: false.\n   */\n  controlFlowFlatteningThreshold: 0.75,\n  /**\n   * ⚠️ Dramatically increases size of obfuscated code (up to 200%), use only if size of obfuscated code doesn't matter. Use `deadCodeInjectionThreshold` to set percentage of nodes that will affected by dead code injection.\n   * ⚠️ This option forcibly enables stringArray option.\n   * With this option, random blocks of dead code will be added to the obfuscated code.\n   */\n  deadCodeInjection: false,\n  /** Allows to set percentage of nodes that will affected by `deadCodeInjection`. */\n  deadCodeInjectionThreshold: 0.4,\n  /**\n   * Can freeze your browser if you open the Developer Tools.\n   * This option makes it almost impossible to use the debugger function of the Developer Tools (both on WebKit-based and Mozilla Firefox).\n   */\n  debugProtection: false,\n  /**\n   * ⚠️ Can freeze your browser! Use at own risk.\n   * If set, an interval in milliseconds is used to force the debug mode on the Console tab, making it harder to use other features of the Developer Tools.\n   * Works if `debugProtection` is enabled.\n   * Recommended value is between 2000 and 4000 milliseconds.\n   */\n  debugProtectionInterval: 0,\n  /**\n   * ⚠️ This option disables console calls globally for all scripts\n   * Disables the use of console.log, console.info, console.error, console.warn, console.debug, console.exception and console.trace by replacing them with empty functions. This makes the use of the debugger harder.\n   */\n  disableConsoleOutput: false,\n  /**\n   * ⚠️ This option does not work with target: 'node'\n   * Allows to run the obfuscated source code only on specific domains and/or sub-domains. This makes really hard for someone to just copy and paste your source code and run it elsewhere.\n   * If the source code isn't run on the domains specified by this option, the browser will be redirected to a passed to the domainLockRedirectUrl option URL.\n   *\n   * It's possible to lock your code to more than one domain or sub-domain. For instance, to lock it so the code only runs on www.example.com add www.example.com. To make it work on the root domain including any sub-domains (example.com, sub.example.com), use .example.com.\n   */\n  // domainLock: [],\n  // domainLockRedirectUrl: string,\n  // forceTransformStrings: string[],\n  // identifierNamesCache: TIdentifierNamesCache,\n  // identifierNamesGenerator: TTypeFromEnum<typeof IdentifierNamesGenerator>,\n  // identifiersDictionary: string[],\n  // identifiersPrefix: string,\n  /**\n   * Default: false\n   * Prevents obfuscation of require imports. Could be helpful in some cases when for some reason runtime environment requires these imports with static strings only.\n   */\n  ignoreImports: false,\n  /**\n   * Allows to set name of the input file with source code. This name will be used internally for source map generation. Required when using NodeJS API and sourceMapSourcesMode option has sources value`.\n   */\n  inputFileName: '',\n  /**\n   * Enables logging of the information to the console.\n   */\n  log: false,\n  /**\n   * Enables numbers conversion to expressions\n   */\n  numbersToExpressions: false,\n  // optionsPreset: TOptionsPreset,\n  /**\n   * ⚠️ this option can break your code. Enable it only if you know what it does!\n   * Enables obfuscation of global variable and function names with declaration.\n   *\n   * To switch between safe and unsafe modes of this option use `renamePropertiesMode` option.\n   *\n   * To set format of renamed property names use `identifierNamesGenerator` option.\n   *\n   * To control which properties will be renamed use `reservedNames` option.\n   */\n  renameGlobals: false,\n  /**\n   *  Default: false\n   *\n   * ⚠️ this option MAY break your code. Enable it only if you know what it does!\n   * Enables renaming of property names. All built-in DOM properties and properties in core JavaScript classes will be ignored.\n   *\n   * To switch between safe and unsafe modes of this option use renamePropertiesMode option.\n   *\n   * To set format of renamed property names use identifierNamesGenerator option.\n   *\n   * To control which properties will be renamed use reservedNames option.\n   */\n  renameProperties: false,\n  // renamePropertiesMode: TRenamePropertiesMode,\n  // reservedNames: string[],\n  // reservedStrings: string[],\n  // seed: string | number,\n  /**\n   * Default: false\n   *\n   * ⚠️ Don't change obfuscated code in any way after obfuscation with this option, because any change like uglifying of code can trigger self defending and code wont work anymore!\n   *\n   * ⚠️ This option forcibly sets compact value to true\n   *\n   * This option makes the output code resilient against formatting and variable renaming. If one tries to use a JavaScript beautifier on the obfuscated code, the code won't work anymore, making it harder to understand and modify it.\n   */\n  selfDefending: false,\n  /**\n   * Default: true\n   *\n   * Enables additional code obfuscation through simplification.\n   * ⚠️ in future releases obfuscation of boolean literals (true => !![]) will be moved under this option.\n   */\n  simplify: true,\n  /**\n   * Default: false\n   *\n   * Enables source map generation for obfuscated code.\n   *\n   * Source maps can be useful to help you debug your obfuscated JavaScript source code. If you want or need to debug in production, you can upload the separate source map file to a secret location and then point your browser there.\n   */\n  sourceMap: false,\n  /**\n   * Sets base url to the source map import url when sourceMapMode: 'separate'.\n   */\n  sourceMapBaseUrl: '',\n  /**\n   * Sets file name for output source map when sourceMapMode: 'separate'.\n   */\n  sourceMapFileName: '',\n  // sourceMapMode: TTypeFromEnum<typeof SourceMapMode>;\n  // sourceMapSourcesMode: TTypeFromEnum<typeof SourceMapSourcesMode>;\n  // splitStrings: boolean;\n  // splitStringsChunkLength: number;\n  // stringArray: boolean;\n  // stringArrayCallsTransform: boolean;\n  // stringArrayCallsTransformThreshold: number;\n  // stringArrayEncoding: TStringArrayEncoding[];\n  // stringArrayIndexesType: TStringArrayIndexesType[];\n  // stringArrayIndexShift: boolean;\n  // stringArrayRotate: boolean;\n  // stringArrayShuffle: boolean;\n  // stringArrayWrappersChainedCalls: boolean;\n  // stringArrayWrappersCount: number;\n  // stringArrayWrappersParametersMaxCount: number;\n  // stringArrayWrappersType: TStringArrayWrappersType;\n  // stringArrayThreshold: number;\n  target: 'browser',\n  // target: TTypeFromEnum<typeof ObfuscationTarget>;\n  /**\n   * Default: false\n   *\n   * Enables transformation of object keys.\n   */\n  transformObjectKeys: false,\n  /**\n   * Default: false\n   *\n   * Allows to enable/disable string conversion to unicode escape sequence.\n   * Unicode escape sequence increases code size greatly and strings easily can be reverted to their original view. Recommended to enable this option only for small source code.\n   */\n  unicodeEscapeSequence: false,\n};\n\n/**\n * High obfuscation, low performance\n * The performance will be much slower than without obfuscation\n */\nexport const highOption: ObfuscatorOptions = {\n  compact: true,\n  controlFlowFlattening: true,\n  controlFlowFlatteningThreshold: 1,\n  deadCodeInjection: true,\n  deadCodeInjectionThreshold: 1,\n  debugProtection: true,\n  debugProtectionInterval: 4000,\n  disableConsoleOutput: true,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: true,\n  renameGlobals: false,\n  selfDefending: true,\n  simplify: true,\n  splitStrings: true,\n  splitStringsChunkLength: 5,\n  stringArray: true,\n  stringArrayCallsTransform: true,\n  stringArrayEncoding: ['rc4'],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 5,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 5,\n  stringArrayWrappersType: 'function',\n  stringArrayThreshold: 1,\n  transformObjectKeys: true,\n  unicodeEscapeSequence: false,\n};\n\n/**\n * Medium obfuscation, optimal performance\n * The performance will be slower than without obfuscation\n */\nexport const mediumOption: ObfuscatorOptions = {\n  compact: true,\n  controlFlowFlattening: true,\n  controlFlowFlatteningThreshold: 0.75,\n  deadCodeInjection: true,\n  deadCodeInjectionThreshold: 0.4,\n  debugProtection: false,\n  debugProtectionInterval: 0,\n  disableConsoleOutput: true,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: true,\n  renameGlobals: false,\n  selfDefending: true,\n  simplify: true,\n  splitStrings: true,\n  splitStringsChunkLength: 10,\n  stringArray: true,\n  stringArrayCallsTransform: true,\n  stringArrayCallsTransformThreshold: 0.75,\n  stringArrayEncoding: ['base64'],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 2,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 4,\n  stringArrayWrappersType: 'function',\n  stringArrayThreshold: 0.75,\n  transformObjectKeys: true,\n  unicodeEscapeSequence: false,\n};\n\n/**\n * Low obfuscation, High performance\n * The performance will be at a relatively normal level\n */\nexport const lowOption: ObfuscatorOptions = {\n  compact: true,\n  controlFlowFlattening: false,\n  deadCodeInjection: false,\n  debugProtection: false,\n  debugProtectionInterval: 0,\n  disableConsoleOutput: true,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: false,\n  renameGlobals: false,\n  selfDefending: true,\n  simplify: true,\n  splitStrings: false,\n  stringArray: true,\n  stringArrayCallsTransform: false,\n  stringArrayEncoding: [],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 1,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 2,\n  stringArrayWrappersType: 'variable',\n  stringArrayThreshold: 0.75,\n  unicodeEscapeSequence: false,\n};\n/**\n * Default preset, High performance\n */\nexport const defaultOption: ObfuscatorOptions = {\n  compact: true,\n  controlFlowFlattening: false,\n  deadCodeInjection: false,\n  debugProtection: false,\n  debugProtectionInterval: 0,\n  disableConsoleOutput: false,\n  identifierNamesGenerator: 'hexadecimal',\n  log: false,\n  numbersToExpressions: false,\n  renameGlobals: false,\n  selfDefending: false,\n  simplify: true,\n  splitStrings: false,\n  stringArray: true,\n  stringArrayCallsTransform: false,\n  stringArrayCallsTransformThreshold: 0.5,\n  stringArrayEncoding: [],\n  stringArrayIndexShift: true,\n  stringArrayRotate: true,\n  stringArrayShuffle: true,\n  stringArrayWrappersCount: 1,\n  stringArrayWrappersChainedCalls: true,\n  stringArrayWrappersParametersMaxCount: 2,\n  stringArrayWrappersType: 'variable',\n  stringArrayThreshold: 0.75,\n  unicodeEscapeSequence: false,\n};\n","import { Fragment, useRef, useState } from 'react';\nimport {\n  StyledLayout,\n  CopyButton,\n  ResultCode,\n  ResultProps,\n  Spacing,\n  Select,\n  CodeEditor,\n  Button,\n  Wrapper,\n  CheckboxOption,\n  CheckboxOptionProps,\n  ErrorLayout,\n  Divider,\n} from '@wcj/tools-react-components';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { useTranslation } from 'react-i18next';\nimport styled from 'styled-components';\nimport { ReactCodeMirrorRef } from '@uiw/react-codemirror';\nimport { obfuscate, ObfuscatorOptions } from 'javascript-obfuscator';\nimport * as sample from './sample';\nimport { allOptions, defaultOption, highOption, mediumOption, lowOption } from './options';\n\nconst Info = styled.span`\n  color: var(--color-fg-subtle);\n`;\n\nexport default function JSObfuscator() {\n  const [options, setOptions] = useState<ObfuscatorOptions>(allOptions);\n  const { t } = useTranslation(['js-obfuscator', 'common']);\n  const editor = useRef<ReactCodeMirrorRef>(null);\n  const [type, setType] = useState<'raw' | 'obfuscator'>('raw');\n  const [preset, setPreset] = useState<'highOption' | 'mediumOption' | 'lowOption' | 'defaultOption' | 'allOptions'>(\n    'allOptions',\n  );\n  const [value, setValue] = useState(sample.val || '');\n  const [valueObfuscate, setValueObfuscate] = useState('');\n  const [error, setError] = useState('');\n  function handleObfuscate() {\n    if (type === 'raw') {\n      const val = obfuscate(value, options);\n      setValueObfuscate(val.getObfuscatedCode());\n    } else {\n    }\n    setType(type === 'raw' ? 'obfuscator' : 'raw');\n  }\n  const codeSource = type === 'raw' ? value : valueObfuscate;\n  const resultProps: ResultProps['codeProps'] = {\n    style: { height: 'calc(100vh - 87px)', overflow: 'auto', margin: 0 },\n  };\n  const resetHandle = () => {\n    setPreset('allOptions');\n    setOptions({ ...allOptions });\n  };\n  const presetData: CheckboxOptionProps[] = [\n    {\n      type: 'radio',\n      name: 'options',\n      checked: preset === 'highOption',\n      children: (\n        <Fragment>\n          {t<string>('highOption')} <Info>{t<string>('highOptionDes')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setPreset('highOption');\n        setOptions({ ...highOption });\n      },\n    },\n    {\n      type: 'radio',\n      name: 'options',\n      checked: preset === 'mediumOption',\n      children: (\n        <Fragment>\n          {t<string>('mediumOption')} <Info>{t<string>('mediumOptionDes')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setPreset('mediumOption');\n        setOptions({ ...mediumOption });\n      },\n    },\n    {\n      type: 'radio',\n      name: 'options',\n      checked: preset === 'lowOption',\n      children: (\n        <Fragment>\n          {t<string>('lowOption')} <Info>{t<string>('lowOptionDes')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setPreset('lowOption');\n        setOptions({ ...lowOption });\n      },\n    },\n    {\n      type: 'radio',\n      name: 'options',\n      checked: preset === 'defaultOption',\n      children: <Fragment>{t<string>('defaultOption')}</Fragment>,\n      onChange: ({ target }) => {\n        setPreset('defaultOption');\n        setOptions({ ...defaultOption });\n      },\n    },\n    {\n      type: 'radio',\n      name: 'options',\n      checked: preset === 'allOptions',\n      children: <Fragment>{t<string>('allOptions')}</Fragment>,\n      onChange: resetHandle,\n    },\n  ];\n  const optionsElement = [\n    {\n      checked: !!options.compact,\n      children: (\n        <Fragment>\n          compact <Info>{t<string>('compact')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ compact: target.checked } });\n      },\n    },\n    {\n      checked: !!options.controlFlowFlattening,\n      children: (\n        <Fragment>\n          controlFlowFlattening <Info>{t<string>('controlFlowFlattening')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ controlFlowFlattening: target.checked } });\n      },\n    },\n    {\n      disabled: !options.controlFlowFlattening,\n      type: 'range',\n      max: '1',\n      min: '0',\n      step: '0.01',\n      value: options.controlFlowFlatteningThreshold,\n      children: (\n        <Fragment>\n          {options.controlFlowFlatteningThreshold} <br />\n          controlFlowFlatteningThreshold <Info>{t<string>('controlFlowFlatteningThreshold')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ controlFlowFlatteningThreshold: Number(target.value) } });\n      },\n    },\n    {\n      checked: !!options.deadCodeInjection,\n      children: (\n        <Fragment>\n          deadCodeInjection <Info>{t<string>('deadCodeInjection')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ deadCodeInjection: target.checked } });\n      },\n    },\n    {\n      type: 'range',\n      max: '1',\n      min: '0',\n      step: '0.1',\n      disabled: !options.deadCodeInjection,\n      value: options.deadCodeInjectionThreshold,\n      children: (\n        <Fragment>\n          {options.deadCodeInjectionThreshold} <br /> deadCodeInjectionThreshold{' '}\n          <Info>{t<string>('deadCodeInjectionThreshold')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ deadCodeInjectionThreshold: Number(target.value) } });\n      },\n    },\n    {\n      checked: !!options.debugProtection,\n      children: (\n        <Fragment>\n          debugProtection <Info>{t<string>('debugProtection')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ debugProtection: target.checked } });\n      },\n    },\n    {\n      type: 'range',\n      max: '4000',\n      min: '0',\n      step: '1',\n      disabled: !options.debugProtection,\n      value: options.debugProtectionInterval,\n      children: (\n        <Fragment>\n          {options.debugProtectionInterval} <br /> debugProtectionInterval{' '}\n          <Info>{t<string>('debugProtectionInterval')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ debugProtectionInterval: Number(target.value) } });\n      },\n    },\n    {\n      checked: !!options.disableConsoleOutput,\n      children: (\n        <Fragment>\n          disableConsoleOutput <Info>{t<string>('disableConsoleOutput')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ disableConsoleOutput: target.checked } });\n      },\n    },\n    {\n      value: options.target,\n      options: [`browser`, `browser-no-eval`, `node`],\n      children: (\n        <Fragment>\n          target <Info>{t<string>('target')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ target: target.value as ObfuscatorOptions['target'] } });\n      },\n    },\n    {\n      checked: !!options.ignoreImports,\n      children: (\n        <Fragment>\n          ignoreImports <Info>{t<string>('ignoreImports')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ ignoreImports: target.checked } });\n      },\n    },\n    {\n      type: 'text',\n      value: options.inputFileName,\n      children: (\n        <Fragment>\n          inputFileName <Info>{t<string>('inputFileName')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ inputFileName: target.value } });\n      },\n    },\n    {\n      checked: !!options.log,\n      children: (\n        <Fragment>\n          log <Info>{t<string>('log')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ log: target.checked } });\n      },\n    },\n    {\n      checked: !!options.numbersToExpressions,\n      children: (\n        <Fragment>\n          numbersToExpressions <Info>{t<string>('numbersToExpressions')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ numbersToExpressions: target.checked } });\n      },\n    },\n    {\n      checked: !!options.renameGlobals,\n      children: (\n        <Fragment>\n          renameGlobals <Info>{t<string>('renameGlobals')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ renameGlobals: target.checked } });\n      },\n    },\n    {\n      checked: !!options.selfDefending,\n      children: (\n        <Fragment>\n          selfDefending <Info>{t<string>('selfDefending')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ selfDefending: target.checked } });\n      },\n    },\n    {\n      checked: !!options.simplify,\n      children: (\n        <Fragment>\n          simplify <Info>{t<string>('simplify')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ simplify: target.checked } });\n      },\n    },\n    {\n      checked: !!options.sourceMap,\n      children: (\n        <Fragment>\n          sourceMap <Info>{t<string>('sourceMap')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ sourceMap: target.checked } });\n      },\n    },\n    {\n      type: 'text',\n      value: options.sourceMapBaseUrl,\n      children: (\n        <Fragment>\n          sourceMapBaseUrl <Info>{t<string>('sourceMapBaseUrl')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ sourceMapBaseUrl: target.value } });\n      },\n    },\n    {\n      checked: !!options.transformObjectKeys,\n      children: (\n        <Fragment>\n          transformObjectKeys <Info>{t<string>('transformObjectKeys')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ transformObjectKeys: target.checked } });\n      },\n    },\n    {\n      checked: !!options.unicodeEscapeSequence,\n      children: (\n        <Fragment>\n          unicodeEscapeSequence <Info>{t<string>('unicodeEscapeSequence')}</Info>\n        </Fragment>\n      ),\n      onChange: ({ target }) => {\n        setOptions({ ...options, ...{ unicodeEscapeSequence: target.checked } });\n      },\n    },\n  ];\n  return (\n    <Wrapper>\n      <StyledLayout\n        title=\"JavaScript Obfuscator\"\n        extra={\n          <Fragment>\n            <Button onClick={() => handleObfuscate()}>\n              {type === 'raw' ? t<string>('Obfuscator') : t<string>('Raw Code')}\n            </Button>\n            {codeSource && <CopyButton value={codeSource} />}\n            <Button\n              onClick={() => {\n                editor.current?.view?.focus();\n                setValue(sample.val);\n                setType('raw');\n              }}\n            >\n              {t<string>('Sample', { ns: 'common' })}\n            </Button>\n          </Fragment>\n        }\n      >\n        <CodeEditor\n          value={codeSource}\n          ref={editor}\n          height=\"calc(100vh - 87px)\"\n          extensions={[javascript()]}\n          onChange={(value) => {\n            type === 'raw' ? setValue(value) : setValueObfuscate(value);\n          }}\n        />\n      </StyledLayout>\n      <StyledLayout\n        title={t<string>('Options', { ns: 'common' })}\n        style={{ maxWidth: 420 }}\n        extra={\n          <Fragment>\n            <Button onClick={resetHandle}>{t<string>('Reset', { ns: 'common' })}</Button>\n            <Button onClick={() => setOptions({})}>{t<string>('None', { ns: 'common' })}</Button>\n          </Fragment>\n        }\n      >\n        <ResultCode codeProps={resultProps}>\n          <Spacing style={{ paddingTop: 10 }}>\n            {presetData.map((item, idx) => {\n              return <CheckboxOption key={idx} {...item} />;\n            })}\n            <Divider />\n            <Spacing>👆👆👆以上是预设的默认配置👆👆👆</Spacing>\n            {optionsElement.map((item, idx) => {\n              if (/(range|text)/.test(item.type || '') && item.value === undefined) {\n                return <Fragment key={idx} />;\n              }\n              if (item.options && Array.isArray(item.options)) {\n                return (\n                  <Fragment key={idx}>\n                    <Divider />\n                    <Select {...item} />\n                  </Fragment>\n                );\n              }\n              return (\n                <Fragment key={idx}>\n                  <Divider />\n                  <CheckboxOption {...item} />\n                </Fragment>\n              );\n            })}\n          </Spacing>\n        </ResultCode>\n      </StyledLayout>\n      {error && <ErrorLayout>{error}</ErrorLayout>}\n    </Wrapper>\n  );\n}\n"],"names":["val","allOptions","compact","controlFlowFlattening","controlFlowFlatteningThreshold","deadCodeInjection","deadCodeInjectionThreshold","debugProtection","debugProtectionInterval","disableConsoleOutput","ignoreImports","inputFileName","log","numbersToExpressions","renameGlobals","renameProperties","selfDefending","simplify","sourceMap","sourceMapBaseUrl","sourceMapFileName","target","transformObjectKeys","unicodeEscapeSequence","highOption","identifierNamesGenerator","splitStrings","splitStringsChunkLength","stringArray","stringArrayCallsTransform","stringArrayEncoding","stringArrayIndexShift","stringArrayRotate","stringArrayShuffle","stringArrayWrappersCount","stringArrayWrappersChainedCalls","stringArrayWrappersParametersMaxCount","stringArrayWrappersType","stringArrayThreshold","mediumOption","stringArrayCallsTransformThreshold","lowOption","defaultOption","Info","styled","JSObfuscator","useState","options","setOptions","t","useTranslation","editor","useRef","type","setType","preset","setPreset","sample","value","setValue","valueObfuscate","setValueObfuscate","error","codeSource","resetHandle","presetData","name","checked","children","_jsxs","Fragment","_jsx","onChange","_ref","_ref2","_ref3","_ref4","optionsElement","_ref5","_ref6","disabled","max","min","step","_ref7","Number","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","Wrapper","StyledLayout","title","extra","Button","onClick","obfuscate","getObfuscatedCode","handleObfuscate","CopyButton","current","_editor$current","view","_editor$current$view","focus","ns","CodeEditor","ref","height","extensions","javascript","style","maxWidth","ResultCode","codeProps","overflow","margin","Spacing","paddingTop","map","item","idx","CheckboxOption","Divider","test","undefined","Array","isArray","Select","ErrorLayout"],"sourceRoot":""}