{"version":3,"file":"static/js/4816.9ea3cb92.chunk.js","mappings":"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","sources":["../../node_modules/exifreader/src/utils.js","../../node_modules/exifreader/src/dataview.js","../../node_modules/exifreader/src/constants.js","../../node_modules/exifreader/src/tag-names-utils.js","../../node_modules/exifreader/src/byte-order.js","../../node_modules/exifreader/src/image-header-tiff.js","../../node_modules/exifreader/src/image-header-jpeg.js","../../node_modules/exifreader/src/image-header-png.js","../../node_modules/exifreader/src/image-header-heic.js","../../node_modules/exifreader/src/image-header-webp.js","../../node_modules/exifreader/src/image-header.js","../../node_modules/exifreader/src/types.js","../../node_modules/exifreader/src/tag-names-common.js","../../node_modules/exifreader/src/tag-names-0th-ifd.js","../../node_modules/exifreader/src/tag-names-gps-ifd.js","../../node_modules/exifreader/src/tag-names-interoperability-ifd.js","../../node_modules/exifreader/src/tag-names-mpf-ifd.js","../../node_modules/exifreader/src/tag-names.js","../../node_modules/exifreader/src/tag-names-exif-ifd.js","../../node_modules/exifreader/src/tags.js","../../node_modules/exifreader/src/file-tags.js","../../node_modules/exifreader/src/jfif-tags.js","../../node_modules/exifreader/src/iptc-tag-names.js","../../node_modules/exifreader/src/text-decoder.js","../../node_modules/exifreader/src/tag-decoder.js","../../node_modules/exifreader/src/iptc-tags.js","../../node_modules/exifreader/src/xmp-tag-names.js","../../node_modules/exifreader/src/dom-parser.js","../../node_modules/exifreader/src/xmp-tags.js","../../node_modules/exifreader/src/icc-tag-names.js","../../node_modules/exifreader/src/icc-tags.js","../../node_modules/exifreader/src/png-file-tags.js","../../node_modules/exifreader/src/png-text-tags.js","../../node_modules/exifreader/src/png-tags.js","../../node_modules/exifreader/src/thumbnail.js","../../node_modules/exifreader/src/errors.js","../../node_modules/exifreader/src/exif-reader.js","../../node_modules/@lezer/json/dist/index.js","../../node_modules/@codemirror/lang-json/dist/index.js"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== undefined) { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_WEBP: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_INTERNATIONAL_TEXT = 'iTXt';\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_INTERNATIONAL_TEXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_TEXT = 'tEXt';\n    const PNG_CHUNK_TYPE_ITXT = 'iTXt';\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === PNG_CHUNK_TYPE_TEXT || chunkType === PNG_CHUNK_TYPE_ITXT;\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_ID = 'ftyp';\n    const HEIC_ID_OFFSET = 4;\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n    const HEIC_MAJOR_BRAND_LENGTH = 4;\n\n    const heicMajorBrand = getStringFromDataView(dataView, HEIC_ID_OFFSET + HEIC_ID.length, HEIC_MAJOR_BRAND_LENGTH);\n\n    return (getStringFromDataView(dataView, HEIC_ID_OFFSET, HEIC_ID.length) === HEIC_ID)\n        && (HEIC_MAJOR_BRANDS.indexOf(heicMajorBrand) !== -1);\n}\n\nfunction findHeicOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_ICC) {\n        const {offset: metaOffset, length: metaLength} = findMetaAtom(dataView);\n        if (metaOffset === undefined) {\n            return {hasAppMarkers: false};\n        }\n\n        const metaEndOffset = Math.min(metaOffset + metaLength, dataView.byteLength);\n        const {exifItemOffset, ilocOffset, colrOffset} = findMetaItems(dataView, metaOffset, metaEndOffset);\n\n        const exifOffset = findExifOffset(dataView, exifItemOffset, ilocOffset, metaEndOffset);\n        const iccChunks = findIccChunks(dataView, colrOffset, metaEndOffset);\n        return {\n            hasAppMarkers: (exifOffset !== undefined) || (iccChunks !== undefined),\n            tiffHeaderOffset: exifOffset,\n            iccChunks\n        };\n    }\n\n    return {hasAppMarkers: false};\n}\n\nfunction findMetaAtom(dataView) {\n    const ATOM_LENGTH_SIZE = 4;\n    const ATOM_TYPE_SIZE = 4;\n    const ATOM_MIN_LENGTH = 8;\n    const ATOM_TYPE_OFFSET = 4;\n\n    let offset = 0;\n\n    while (offset + ATOM_LENGTH_SIZE + ATOM_TYPE_SIZE <= dataView.byteLength) {\n        const atomLength = getAtomLength(dataView, offset);\n        if (atomLength >= ATOM_MIN_LENGTH) {\n            const atomType = getStringFromDataView(dataView, offset + ATOM_TYPE_OFFSET, ATOM_TYPE_SIZE);\n            if (atomType === 'meta') {\n                return {\n                    offset,\n                    length: atomLength\n                };\n            }\n        }\n\n        offset += atomLength;\n    }\n\n    return {\n        offset: undefined,\n        length: 0\n    };\n}\n\nfunction getAtomLength(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const atomLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(atomLength)) {\n        return dataView.byteLength - offset;\n    }\n    if (hasExtendedSize(atomLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_LOW_OFFSET);\n        }\n    }\n\n    return atomLength;\n}\n\nfunction extendsToEndOfFile(atomLength) {\n    return atomLength === 0;\n}\n\nfunction hasExtendedSize(atomLength) {\n    return atomLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const ATOM_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + ATOM_EXTENDED_SIZE_OFFSET) === 0;\n}\n\nfunction findMetaItems(dataView, offset, metaEndOffset) {\n    const STRING_SIZE = 4;\n    const ITEM_INDEX_REL_OFFSET = -4;\n    const offsets = {\n        ilocOffset: undefined,\n        exifItemOffset: undefined,\n        colrOffset: undefined\n    };\n\n    while ((offset + STRING_SIZE <= metaEndOffset)\n        && (!offsets.ilocOffset || !offsets.exifItemOffset || !offsets.colrOffset)) {\n        const itemName = getStringFromDataView(dataView, offset, STRING_SIZE);\n        if (Constants.USE_EXIF && (itemName === 'iloc')) {\n            offsets.ilocOffset = offset;\n        } else if (Constants.USE_EXIF && (itemName === 'Exif')) {\n            offsets.exifItemOffset = offset + ITEM_INDEX_REL_OFFSET;\n        } else if (Constants.USE_ICC && (itemName === 'colr')) {\n            offsets.colrOffset = offset + ITEM_INDEX_REL_OFFSET;\n        }\n\n        offset++;\n    }\n\n    return offsets;\n}\n\nfunction findExifOffset(dataView, exifItemOffset, offset, metaEndOffset) {\n    const EXIF_ITEM_OFFSET_SIZE = 2;\n    const ILOC_DATA_OFFSET = 12;\n    const EXIF_POINTER_OFFSET = 8;\n    const EXIF_POINTER_SIZE = 4;\n    const EXIF_PREFIX_LENGTH_OFFSET = 4;\n    const ILOC_ITEM_SIZE = 16;\n\n    if (!offset || !exifItemOffset || (exifItemOffset + EXIF_ITEM_OFFSET_SIZE > metaEndOffset)) {\n        return undefined;\n    }\n\n    const exifItemIndex = dataView.getUint16(exifItemOffset);\n    offset += ILOC_DATA_OFFSET;\n\n    while (offset + ILOC_ITEM_SIZE <= metaEndOffset) {\n        const itemIndex = dataView.getUint16(offset);\n        if (itemIndex === exifItemIndex) {\n            const exifPointer = dataView.getUint32(offset + EXIF_POINTER_OFFSET);\n            if (exifPointer + EXIF_POINTER_SIZE <= dataView.byteLength) {\n                const exifOffset = dataView.getUint32(exifPointer);\n                const prefixLength = exifOffset + EXIF_PREFIX_LENGTH_OFFSET;\n                return exifPointer + prefixLength;\n            }\n        }\n        offset += ILOC_ITEM_SIZE;\n    }\n\n    return undefined;\n}\n\nfunction findIccChunks(dataView, offset, metaEndOffset) {\n    const ITEM_TYPE_OFFSET = 8;\n    const ITEM_TYPE_SIZE = 4;\n    const ITEM_CONTENT_OFFSET = 12;\n\n    if (!offset || (offset + ITEM_CONTENT_OFFSET > metaEndOffset)) {\n        return undefined;\n    }\n\n    const colorType = getStringFromDataView(dataView, offset + ITEM_TYPE_OFFSET, ITEM_TYPE_SIZE);\n    if ((colorType !== 'prof') && (colorType !== 'rICC')) {\n        return undefined;\n    }\n\n    return [{\n        offset: offset + ITEM_CONTENT_OFFSET,\n        length: getAtomLength(dataView, offset) - ITEM_CONTENT_OFFSET,\n        chunkNumber: 1,\n        chunksTotal: 1\n    }];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Webp from './image-header-webp.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return Tiff.findTiffOffsets();\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return Jpeg.findJpegOffsets(dataView);\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return Png.findPngOffsets(dataView);\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return Heic.findHeicOffsets(dataView);\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return Webp.findOffsets(dataView);\n    }\n\n    throw new Error('Invalid image format');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] >= value[1]) {\n            return `${Math.round(value[0] / value[1])}`;\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport default {\n    '0th': tagNames0thExifIfds,\n    'exif': tagNames0thExifIfds,\n    'gps': TagNamesGpsIfd,\n    'interoperability': TagNamesInteroperabilityIfd,\n    'mpf': Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengths = `${value[0][0] / value[0][1]}-${value[1][0] / value[1][1]} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            return `${focalLengths} f/${1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport TagNames from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport default {\n    read,\n    readMpf\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readMpf(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, 'mpf', dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    const ENTRY_SIZE = 16;\n\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = isFirstIndividualImage(i) ? 0 : getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction isFirstIndividualImage(i) {\n    return i === 0;\n}\n\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0) {\n            tags['Thumbnail'] = readIfd(dataView, ifdType, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, true);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        return new (__non_webpack_require__('@xmldom/xmldom').DOMParser)({\n            errorHandler: {\n                error: () => {\n                    throw new Error('Faulty XML');\n                }\n            }\n        });\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks));\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const domParser = DOMParser.get();\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        if (isTagAttribute(name)) {\n            tags[getLocalName(name)] = {\n                value: attributes[name],\n                attributes: {},\n                description: getDescription(attributes[name], name)\n            };\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        if (!isNamespaceDefinition(name)) {\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continious array of bytes.\nfunction read(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValueFromArray} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT} from './image-header-png.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_LENGTH = 2;\n\nfunction read(dataView, pngTextChunks) {\n    return pngTextChunks.reduce((tags, {offset, length, type}) => {\n        const {name, value, description} = getNameAndValue(dataView, offset, length, type);\n        if (name) {\n            tags[name] = {\n                value,\n                description\n            };\n        }\n        return tags;\n    }, {});\n}\n\nfunction getNameAndValue(dataView, offset, length, type) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    const valueChars = [];\n    let parsingState = STATE_KEYWORD;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            const compressionFlag = dataView.getUint8(offset + i);\n            if (compressionFlag !== 0) {\n                return {}; // We don't support compression.\n            }\n            i += COMPRESSION_SECTION_LENGTH;\n            parsingState = moveToNextState(type, parsingState);\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        } else {\n            valueChars.push(byte);\n        }\n    }\n\n    const textValue = getStringValueFromArray(valueChars);\n\n    return {\n        name: getName(type, langChars, keywordChars),\n        value: textValue,\n        description: type === TYPE_ITXT ? TagDecoder.decode('UTF-8', valueChars) : textValue\n    };\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && type === TYPE_ITXT) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        return STATE_LANG;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options) {\n    if (isFilePathOrURL(data)) {\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^https?:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return browserFetchRemoteFile(filename, options);\n        }\n\n        return nodeFetchRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction browserFetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeFetchRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(dataView, {expanded = false, includeUnknown = false} = {expanded: false, includeUnknown: false}) {\n    let foundMetaData = false;\n    let tags = {};\n\n    const {\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets\n    } = ImageHeader.parseAppMarkers(dataView);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks);\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = Tags.readMpf(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const readTags = PngTextTags.read(dataView, pngTextChunks);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    return tags;\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"json\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n"],"names":["getStringFromDataView","dataView","offset","length","chars","i","byteLength","push","getUint8","getStringValueFromArray","getUnicodeStringFromDataView","getUint16","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","key","initializer","initialized","Object","defineProperty","get","configurable","enumerable","value","apply","writable","getBase64Image","image","btoa","Array","prototype","reduce","call","Uint8Array","data","byte","Buffer","undefined","from","toString","DataView","buffer","_classCallCheck","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","this","_createClass","littleEndian","USE_FILE","USE_JFIF","USE_PNG_FILE","USE_EXIF","USE_IPTC","USE_XMP","USE_ICC","USE_MPF","USE_THUMBNAIL","USE_TIFF","USE_JPEG","USE_PNG","USE_HEIC","USE_WEBP","getStringValue","getEncodedString","encoding","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","isTiffFile","TIFF_ID","TIFF_ID_OFFSET","ByteOrder","hasTiffMarker","findTiffOffsets","Constants","hasAppMarkers","isJpegFile","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","findJpegOffsets","fieldLength","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","appMarkerPosition","JPEG_ID_SIZE","APP_ID_OFFSET","isSOF0Marker","APP_MARKER_SIZE","isSOF2Marker","isApp0JfifMarker","JFIF_DATA_OFFSET","isApp1ExifMarker","TIFF_HEADER_OFFSET","isApp1XmpMarker","getXmpChunkDetails","isApp1ExtendedXmpMarker","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","IPTC_DATA_OFFSET","isApp2ICCMarker","iccDataOffset","APP2_ICC_DATA_OFFSET","iccDataLength","iccChunkNumber","ICC_CHUNK_NUMBER_OFFSET","iccChunksTotal","ICC_TOTAL_CHUNKS_OFFSET","chunkNumber","chunksTotal","isApp2MPFMarker","MPF_DATA_OFFSET","isAppMarker","isFillByte","fileDataOffset","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_IDENTIFIER","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","markerIdLength","isXmpIdentifier","isExtendedXmpIdentifier","dataOffset","appMarker","isPngFile","PNG_ID","findPngOffsets","offsets","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","isPngImageHeaderChunk","pngHeaderOffset","PNG_CHUNK_DATA_OFFSET","isPngXmpChunk","getPngXmpDataOffset","getUint32","PNG_CHUNK_LENGTH_OFFSET","isPngTextChunk","chunkType","PNG_CHUNK_TYPE_OFFSET","pngTextChunks","type","isPngExifChunk","isPngChunk","pngChunkOffsets","PNG_XMP_PREFIX","TYPE_TEXT","TYPE_ITXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","SUPPORTED_PNG_CHUNK_TYPES","includes","numberOfNullSeparators","isHeicFile","HEIC_ID","heicMajorBrand","HEIC_ID_OFFSET","indexOf","findHeicOffsets","_findMetaAtom","ATOM_LENGTH_SIZE","ATOM_TYPE_SIZE","ATOM_MIN_LENGTH","ATOM_TYPE_OFFSET","atomLength","getAtomLength","findMetaAtom","metaOffset","metaLength","metaEndOffset","Math","min","_findMetaItems","STRING_SIZE","ITEM_INDEX_REL_OFFSET","ilocOffset","exifItemOffset","colrOffset","itemName","findMetaItems","exifOffset","EXIF_ITEM_OFFSET_SIZE","ILOC_DATA_OFFSET","EXIF_POINTER_OFFSET","EXIF_POINTER_SIZE","EXIF_PREFIX_LENGTH_OFFSET","ILOC_ITEM_SIZE","exifItemIndex","exifPointer","findExifOffset","ITEM_TYPE_OFFSET","ITEM_TYPE_SIZE","ITEM_CONTENT_OFFSET","colorType","findIccChunks","extendsToEndOfFile","hasExtendedSize","ATOM_EXTENDED_SIZE_OFFSET","hasEmptyHighBits","isWebpFile","RIFF_ID","WEBP_MARKER","findOffsets","EXIF_IDENTIFIER","chunkId","chunkSize","parseAppMarkers","Tiff","Jpeg","Png","Heic","Webp","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getInt32","ApertureValue","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","concat","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","description","TagNamesCommon","values","formats","isArray","sample","ref","_ref","_ref2","_slicedToArray","num","test","status","mode","tagNames0thExifIfds","TagNames0thIfd","x","y","focalLengths","TagNamesGpsIfd","TagNamesInteroperabilityIfd","TagNamesMpfIfd","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","getTagValueAt","Types","read","includeUnknown","tags","readIfd","get0thIfdOffset","read0thIfd","readInteroperabilityIfd","readGpsIfd","readExifIfd","readMpf","ENTRY_SIZE","images","ceil","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","isFirstIndividualImage","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","size","flags","flagsDescription","imageFormat","ifdType","FIELD_COUNT_SIZE","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","id","nextIfdOffset","tagValue","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","TagNames","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","asciiValue","decodeURIComponent","escape","error","decodeAsciiValue","string","j","splitNullSeparatedAsciiString","tagName","tagDescription","getDescriptionFromTagValue","count","valueIndex","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","TextDecoder","decode","Decoder","TAG_HEADER_SIZE","BYTES_8BIM","BYTES_8BIM_SIZE","RESOURCE_BLOCK_HEADER_SIZE","NAA_RESOURCE_BLOCK_TYPE","parseTags","_getNaaResourceBlock","resourceBlock","getResourceBlock","isNaaResourceBlock","naaBlock","getBlockPadding","getNaaResourceBlock","endOfBlockOffset","_readTag","tagSize","TAG_LEAD_BYTE","leadByteIsMissing","IptcTagNames","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","TagDecoder","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","_value$split","_value$split2","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","DOMParser","__non_webpack_require__","errorHandler","chunks","readTags","_extractCompleteChunk","completeChunks","combineChunks","extractCompleteChunks","_extractCompleteChunk2","standardXmp","extendedXmp","hasStandardTags","hasExtendedTags","_raw","totalLength","chunk","combinedChunks","set","chunkDataView","_getDocument","domParser","console","warn","xmlString","doc","parseFromString","xmlSource","replace","documentElement","nodeName","textContent","raw","getDocument","parseXMPObject","convertToObject","getRDF","node","childNodes","nodes","isTopNode","elements","getChildNodes","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","item","getDescriptionOfArray","XmpTagNames","descriptions","getClearTextKey","getDescriptionOfObject","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseNodeAttributes","parseNodeAsSimpleValue","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","iccData","totalIccProfileLength","sum","icc","iccBinaryData","getBuffer","_loop","iccDataChunk","find","chunkData","PROFILE_HEADER_LENGTH","iccProfileKeys","profileEntry","signature","sliceToString","ICC_SIGNATURE","ICC_TAG_COUNT_OFFSET","iccDoesNotHaveTagCount","tagHeaderOffset","hasTagsData","tagSignature","tagOffset","TAG_TYPE_DESC","tagValueSize","addTag","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","text","valObj","valIndex","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","getBitDepth","getColorType","getCompression","getFilter","getInterlace","_getNameAndValue","keywordChars","langChars","translatedKeywordChars","valueChars","parsingState","STATE_KEYWORD","STATE_COMPRESSION","COMPRESSION_SECTION_LENGTH","moveToNextState","STATE_LANG","STATE_TRANSLATED_KEYWORD","textValue","getName","getNameAndValue","STATE_TEXT","lang","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","options","isFilePathOrURL","filename","fetch","url","method","isInteger","headers","range","then","response","arrayBuffer","browserFetchRemoteFile","Promise","resolve","reject","requireNodeGet","statusCode","on","statusMessage","resume","nodeFetchRemoteFile","isDataUri","dataUri","atob","char","decodedData","dataUriToBuffer","_ref3","fs","requireNodeFs","open","fd","stat","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","file","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","loadView","errors","exifErrors","isBuffer","isNodeBuffer","DataViewWrapper","getDataView","_ref4","expanded","_ref4$expanded","_ref4$includeUnknown","foundMetaData","_ImageHeader$parseApp","ImageHeader","hasFileData","FileTags","hasJfifData","JfifTags","jfif","hasExifData","Tags","Thumbnail","exif","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","IptcTags","iptc","hasXmpData","readXmpTags","XmpTags","xmp","hasIccData","readIccTags","IccTags","hasMpfData","readMpfTags","mpf","PngFileTags","png","pngFile","hasPngTextData","PngTextTags","pngText","hasPngData","PngTags","iccDataOffsets","jsonHighlighting","styleTags","bool","PropertyName","propertyName","Null","null","separator","squareBracket","brace","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","jsonParseLinter","view","JSON","parse","state","e","SyntaxError","pos","m","match","line","getErrorPosition","severity","to","jsonLanguage","LRLanguage","define","configure","props","indentNodeProp","add","continuedIndent","except","foldNodeProp","foldInside","languageData","closeBrackets","brackets","indentOnInput","json","LanguageSupport"],"sourceRoot":""}