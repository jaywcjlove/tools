{
  "Obfuscator": "混淆",
  "Raw Code": "原始代码",
  "highOption": "高混淆，低性能",
  "highOptionDes": "性能将比没有混淆处理时慢得多",
  "mediumOption": "中度混淆，最佳性能",
  "mediumOptionDes": "性能将比没有混淆处理时慢",
  "lowOption": "低混淆，高性能",
  "lowOptionDes": "性能将处于相对正常的水平",
  "defaultOption": "默认预设，高性能",
  "allOptions": "默认所有预设，高性能",

  "Compact code output on one line.": "在一行上压缩代码输出",
  "controlFlowFlattening": "⚠️ 此选项极大地影响性能，运行时速度降低1.5倍。使用 controlFlowFlatteningThreshold 设置受控制流扁平化影响的节点百分比。",
  "controlFlowFlatteningThreshold": "controlFlowFlattening 转换将应用于任何给定节点的概率。 此设置对于较大的代码大小特别有用，因为大量的控制流转换会减慢代码速度并增加代码大小。 controlFlowFlatteningThreshold:0 等于 controlFlow Flatteng:false。",
  "deadCodeInjection": "\n⚠️ 极大地增加了混淆代码的大小(高达200%)，只有在混淆代码大小不重要的情况下才使用。使用 deadCodeInjectionThreshold 设置将受死代码注入影响的节点的百分比。⚠️ 此选项强制启用stringArray选项。有了这个选项，死代码的随机块将被添加到模糊代码中。",
  "deadCodeInjectionThreshold": "\n允许设置将受 deadCodeInjection 影响的节点的百分比。",
  "debugProtection": "⚠️ 如果打开开发人员工具，可能会冻结浏览器。此选项几乎不可能使用开发工具的调试器功能(基于WebKit和Mozilla Firefox)。",
  "debugProtectionInterval": "⚠️ 可以冻结您的浏览器！使用风险自负。 如果设置，则会使用以毫秒为单位的间隔来强制 Console 选项卡上的调试模式，从而更难使用开发人员工具的其他功能。如果启用了debugProtection，则有效。建议值介于2000和4000毫秒之间。",
  "disableConsoleOutput": "⚠️ 此选项全局禁用所有脚本的控制台调用禁用控制台的使用。console.log, console.info, console.error, console.warn, console.debug, console.exception和 console.trace。通过将它们替换为空函数进行跟踪。这使得调试器的使用更加困难。"
}
